; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\loglib.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\loglib.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\loglib.crf src\syshal\loglib.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  getCurrentLogFileName PROC
;;;40     /*-----------------------------------------*/
;;;41     char*  getCurrentLogFileName(RTC_TIME_DATA_T* pt)
000000  e92d407f          PUSH     {r0-r6,lr}
;;;42     {    
000004  e1a04000          MOV      r4,r0
;;;43         if(E_RTC_SUCCESS == RTC_Read(RTC_CURRENT_TIME, pt))
000008  e1a01004          MOV      r1,r4
00000c  e3a00000          MOV      r0,#0
000010  ebfffffe          BL       RTC_Read
000014  e3500000          CMP      r0,#0
000018  1a000010          BNE      |L1.96|
;;;44         {
;;;45             sprintf(currentLogFileName, "%08d_%04d%02d%02d%02d%02d.log", GetMeterData()->epmid, pt->u32Year, pt->u32cMonth, pt->u32cDay, pt->u32cHour, (pt->u32cMinute)/10);   
00001c  e3a0100a          MOV      r1,#0xa
000020  e5940008          LDR      r0,[r4,#8]
000024  ebfffffe          BL       __aeabi_uidivmod
000028  e1a05000          MOV      r5,r0
00002c  ebfffffe          BL       GetMeterData
000030  e5906004          LDR      r6,[r0,#4]
000034  e594000c          LDR      r0,[r4,#0xc]
000038  e5941018          LDR      r1,[r4,#0x18]
00003c  e5942014          LDR      r2,[r4,#0x14]
000040  e58d0008          STR      r0,[sp,#8]
000044  e58d500c          STR      r5,[sp,#0xc]
000048  e88d0006          STM      sp,{r1,r2}
00004c  e1a02006          MOV      r2,r6
000050  e28f1e22          ADR      r1,|L1.632|
000054  e59f023c          LDR      r0,|L1.664|
000058  e594301c          LDR      r3,[r4,#0x1c]
00005c  ebfffffe          BL       __2sprintf
                  |L1.96|
;;;46             //sprintf(currentLogFileName, "%08d_%04d%02d%02d%02d%02d.log", GetMeterPara()->epmid, pt->u32Year, pt->u32cMonth, pt->u32cDay, pt->u32cHour, (pt->u32cMinute));   
;;;47         }  
;;;48         return currentLogFileName;
000060  e59f0230          LDR      r0,|L1.664|
000064  e28dd010          ADD      sp,sp,#0x10
;;;49     }
000068  e8bd8070          POP      {r4-r6,pc}
;;;50     
                          ENDP

                  LoglibInit PROC
;;;53     /*-----------------------------------------*/
;;;54     BOOL LoglibInit(void)
00006c  e92d4010          PUSH     {r4,lr}
;;;55     {
;;;56         sysprintf("LoglibInit!!\n");
000070  e28f0f89          ADR      r0,|L1.668|
000074  ebfffffe          BL       sysprintf
;;;57         xSemaphore = xSemaphoreCreateMutex(); 
000078  e3a00001          MOV      r0,#1
00007c  ebfffffe          BL       xQueueCreateMutex
000080  e59f1224          LDR      r1,|L1.684|
000084  e5810000          STR      r0,[r1,#0]  ; xSemaphore
;;;58         return TRUE;
000088  e3a00001          MOV      r0,#1
;;;59     }
00008c  e8bd8010          POP      {r4,pc}
;;;60     char*  LoglibGetCurrentLogFileName(void)
                          ENDP

                  LoglibGetCurrentLogFileName PROC
000090  e59f0200          LDR      r0,|L1.664|
;;;61     {       
;;;62         return currentLogFileName;
;;;63     }
000094  e12fff1e          BX       lr
;;;64     void  LoglibPrintfEx(LogType type, char* logData, BOOL flag)
                          ENDP

                  LoglibPrintf PROC
;;;67     }
;;;68     void  LoglibPrintf(LogType type, char* logData)
000098  e92d47f0          PUSH     {r4-r10,lr}
;;;69     {
00009c  e24ddf52          SUB      sp,sp,#0x148
0000a0  e1a05000          MOV      r5,r0
0000a4  e1a06001          MOV      r6,r1
;;;70         char* fileName;
;;;71         char* pTitle = NULL;
0000a8  e3a08000          MOV      r8,#0
;;;72         RTC_TIME_DATA_T pt;
;;;73         char dateInfo[_MAX_LFN];
;;;74     	char* pDateInfo;
;;;75         int strLen = 0;
0000ac  e3a07000          MOV      r7,#0
;;;76         if(BatteryCheckPowerDownCondition())
0000b0  ebfffffe          BL       BatteryCheckPowerDownCondition
0000b4  e3500000          CMP      r0,#0
0000b8  0a000003          BEQ      |L1.204|
;;;77         {
;;;78             sysprintf("\r\n ~~~~~ LoglibPrintf ignore (BatteryCheckPowerDownCondition) ~~~~~ \r\n");
0000bc  e59f01ec          LDR      r0,|L1.688|
0000c0  ebfffffe          BL       sysprintf
                  |L1.196|
;;;79             return ;
;;;80         }
;;;81         if(xSemaphore == NULL)
;;;82         {
;;;83             xSemaphore = xSemaphoreCreateMutex(); 
;;;84         }
;;;85         
;;;86         xSemaphoreTake(xSemaphore, portMAX_DELAY);    
;;;87         fileName = getCurrentLogFileName(&pt);
;;;88         sysprintf("\r\n ~~~~~ LoglibPrintf START ~~~~~ \r\n");
;;;89     		   
;;;90         if(type == LOG_TYPE_INFO)
;;;91         {
;;;92             pTitle = "[INFO]";
;;;93         }
;;;94         else if(type == LOG_TYPE_WARNING)
;;;95         {
;;;96             pTitle = "[WARNING]";            
;;;97         }
;;;98         else if(type == LOG_TYPE_ERROR)
;;;99         {
;;;100            pTitle = "[ERROR]";
;;;101        }
;;;102        else
;;;103        {
;;;104            pTitle = "[OTHER]";
;;;105        }
;;;106    		
;;;107        sprintf(dateInfo, "%04d/%02d/%02d_%02d:%02d:%02d[%d] %s:", pt.u32Year, pt.u32cMonth, pt.u32cDay, pt.u32cHour, pt.u32cMinute, pt.u32cSecond, pt.u32cDayOfWeek, pTitle);
;;;108        if(strlen(logData) > 1024)
;;;109            strLen = 1024;
;;;110        else
;;;111            strLen = strlen(logData);
;;;112    	pDateInfo = pvPortMalloc(strlen(dateInfo) + strLen + 1); //§tµ²§À²Å¸¹
;;;113        if(pDateInfo != NULL)
;;;114        {
;;;115            memset(pDateInfo, 0x0, strlen(dateInfo) + strLen + 1);
;;;116            sprintf(pDateInfo, "%s%s", dateInfo, logData);
;;;117            sysprintf("[%s]", pDateInfo);
;;;118            FileAgentAddData(LOG_SAVE_POSITION, LOG_FILE_DIR, fileName, (uint8_t*)pDateInfo, strlen(pDateInfo), FILE_AGENT_ADD_DATA_TYPE_APPEND, TRUE, FALSE, FALSE);  
;;;119            //reVal = FileAgentAddData(LOG_SAVE_POSITION, LOG_FILE_DIR, fileName, (uint8_t*)pDateInfo, strlen(pDateInfo), FILE_AGENT_ADD_DATA_TYPE_OVERWRITE, TRUE, FALSE, FALSE);  
;;;120            
;;;121            sysprintf(" ~~~~~ LoglibPrintf END ~~~~~ \r\n");
;;;122        }
;;;123        else
;;;124        {
;;;125            sysprintf(" ~~~~~ LoglibPrintf pvPortMalloc ERROR ~~~~~ \r\n");
;;;126        }
;;;127        xSemaphoreGive(xSemaphore); 
;;;128    }
0000c4  e28ddf52          ADD      sp,sp,#0x148
0000c8  e8bd87f0          POP      {r4-r10,pc}
                  |L1.204|
0000cc  e59f01d8          LDR      r0,|L1.684|
0000d0  e5900000          LDR      r0,[r0,#0]            ;81  ; xSemaphore
0000d4  e3500000          CMP      r0,#0                 ;81
0000d8  1a000003          BNE      |L1.236|
0000dc  e3a00001          MOV      r0,#1                 ;83
0000e0  ebfffffe          BL       xQueueCreateMutex
0000e4  e59f11c0          LDR      r1,|L1.684|
0000e8  e5810000          STR      r0,[r1,#0]            ;83  ; xSemaphore
                  |L1.236|
0000ec  e3a03000          MOV      r3,#0                 ;86
0000f0  e3e02000          MVN      r2,#0                 ;86
0000f4  e1a01003          MOV      r1,r3                 ;86
0000f8  e59f01ac          LDR      r0,|L1.684|
0000fc  e5900000          LDR      r0,[r0,#0]            ;86  ; xSemaphore
000100  ebfffffe          BL       xQueueGenericReceive
000104  e28d0f46          ADD      r0,sp,#0x118          ;87
000108  ebfffffe          BL       getCurrentLogFileName
00010c  e1a0a000          MOV      r10,r0                ;87
000110  e28f0f67          ADR      r0,|L1.692|
000114  ebfffffe          BL       sysprintf
000118  e3550000          CMP      r5,#0                 ;90
00011c  1a000001          BNE      |L1.296|
000120  e28f8f6d          ADR      r8,|L1.732|
000124  ea000008          B        |L1.332|
                  |L1.296|
000128  e3550001          CMP      r5,#1                 ;94
00012c  1a000001          BNE      |L1.312|
000130  e28f8f6b          ADR      r8,|L1.740|
000134  ea000004          B        |L1.332|
                  |L1.312|
000138  e3550002          CMP      r5,#2                 ;98
00013c  1a000001          BNE      |L1.328|
000140  e28f8f6a          ADR      r8,|L1.752|
000144  ea000000          B        |L1.332|
                  |L1.328|
000148  e28f8f6a          ADR      r8,|L1.760|
                  |L1.332|
00014c  e59d0128          LDR      r0,[sp,#0x128]        ;107
000150  e59d1120          LDR      r1,[sp,#0x120]        ;107
000154  e59d211c          LDR      r2,[sp,#0x11c]        ;107
000158  e58d0010          STR      r0,[sp,#0x10]         ;107
00015c  e58d8014          STR      r8,[sp,#0x14]         ;107
000160  e58d1008          STR      r1,[sp,#8]            ;107
000164  e58d200c          STR      r2,[sp,#0xc]          ;107
000168  e59d012c          LDR      r0,[sp,#0x12c]        ;107
00016c  e59d1124          LDR      r1,[sp,#0x124]        ;107
000170  e1cd00f0          STRD     r0,r1,[sp,#0]         ;107
000174  e28f1f61          ADR      r1,|L1.768|
000178  e59d2134          LDR      r2,[sp,#0x134]        ;107
00017c  e59d3130          LDR      r3,[sp,#0x130]        ;107
000180  e28d0018          ADD      r0,sp,#0x18           ;107
000184  ebfffffe          BL       __2sprintf
000188  e1a00006          MOV      r0,r6                 ;108
00018c  ebfffffe          BL       strlen
000190  e3500b01          CMP      r0,#0x400             ;108
000194  9a000001          BLS      |L1.416|
000198  e3a07b01          MOV      r7,#0x400             ;109
00019c  ea000002          B        |L1.428|
                  |L1.416|
0001a0  e1a00006          MOV      r0,r6                 ;111
0001a4  ebfffffe          BL       strlen
0001a8  e1a07000          MOV      r7,r0                 ;111
                  |L1.428|
0001ac  e28d0018          ADD      r0,sp,#0x18           ;112
0001b0  ebfffffe          BL       strlen
0001b4  e0800007          ADD      r0,r0,r7              ;112
0001b8  e2809001          ADD      r9,r0,#1              ;112
0001bc  e1a00009          MOV      r0,r9                 ;112
0001c0  ebfffffe          BL       pvPortMalloc
0001c4  e1a04000          MOV      r4,r0                 ;112
0001c8  e3540000          CMP      r4,#0                 ;113
0001cc  0a00001f          BEQ      |L1.592|
0001d0  e28d0018          ADD      r0,sp,#0x18           ;115
0001d4  ebfffffe          BL       strlen
0001d8  e0800007          ADD      r0,r0,r7              ;115
0001dc  e2809001          ADD      r9,r0,#1              ;115
0001e0  e1a01009          MOV      r1,r9                 ;115
0001e4  e1a00004          MOV      r0,r4                 ;115
0001e8  ebfffffe          BL       __aeabi_memclr
0001ec  e1a03006          MOV      r3,r6                 ;116
0001f0  e28d2018          ADD      r2,sp,#0x18           ;116
0001f4  e28f1f4b          ADR      r1,|L1.808|
0001f8  e1a00004          MOV      r0,r4                 ;116
0001fc  ebfffffe          BL       __2sprintf
000200  e1a01004          MOV      r1,r4                 ;117
000204  e28f0f49          ADR      r0,|L1.816|
000208  ebfffffe          BL       sysprintf
00020c  e1a00004          MOV      r0,r4                 ;118
000210  ebfffffe          BL       strlen
000214  e1a09000          MOV      r9,r0                 ;118
000218  e3a00000          MOV      r0,#0                 ;118
00021c  e3a02001          MOV      r2,#1                 ;118
000220  e58d2004          STR      r2,[sp,#4]            ;118
000224  e58d000c          STR      r0,[sp,#0xc]          ;118
000228  e58d2008          STR      r2,[sp,#8]            ;118
00022c  e1a03004          MOV      r3,r4                 ;118
000230  e1a0200a          MOV      r2,r10                ;118
000234  e28f10fc          ADR      r1,|L1.824|
000238  e58d0010          STR      r0,[sp,#0x10]         ;118
00023c  e58d9000          STR      r9,[sp,#0]            ;118
000240  ebfffffe          BL       FileAgentAddData
000244  e28f00f0          ADR      r0,|L1.828|
000248  ebfffffe          BL       sysprintf
00024c  ea000001          B        |L1.600|
                  |L1.592|
000250  e28f0f42          ADR      r0,|L1.864|
000254  ebfffffe          BL       sysprintf
                  |L1.600|
000258  e3a03000          MOV      r3,#0                 ;127
00025c  e1a02003          MOV      r2,r3                 ;127
000260  e1a01003          MOV      r1,r3                 ;127
000264  e59f0040          LDR      r0,|L1.684|
000268  e5900000          LDR      r0,[r0,#0]            ;127  ; xSemaphore
00026c  ebfffffe          BL       xQueueGenericSend
000270  e1a00000          MOV      r0,r0
000274  eaffff92          B        |L1.196|
                  |L1.632|
000278  25303864          DCB      "%08d_%04d%02d%02d%02d%02d.log",0
00027c  5f253034
000280  64253032
000284  64253032
000288  64253032
00028c  64253032
000290  642e6c6f
000294  6700    
000296  00                DCB      0
000297  00                DCB      0
                  |L1.664|
                          DCD      currentLogFileName
                  |L1.668|
00029c  4c6f676c          DCB      "LoglibInit!!\n",0
0002a0  6962496e
0002a4  69742121
0002a8  0a00    
0002aa  00                DCB      0
0002ab  00                DCB      0
                  |L1.684|
                          DCD      xSemaphore
                  |L1.688|
                          DCD      ||.constdata||
                  |L1.692|
0002b4  0d0a207e          DCB      "\r\n ~~~~~ LoglibPrintf START ~~~~~ \r\n",0
0002b8  7e7e7e7e
0002bc  204c6f67
0002c0  6c696250
0002c4  72696e74
0002c8  66205354
0002cc  41525420
0002d0  7e7e7e7e
0002d4  7e200d0a
0002d8  00      
0002d9  00                DCB      0
0002da  00                DCB      0
0002db  00                DCB      0
                  |L1.732|
0002dc  5b494e46          DCB      "[INFO]",0
0002e0  4f5d00  
0002e3  00                DCB      0
                  |L1.740|
0002e4  5b574152          DCB      "[WARNING]",0
0002e8  4e494e47
0002ec  5d00    
0002ee  00                DCB      0
0002ef  00                DCB      0
                  |L1.752|
0002f0  5b455252          DCB      "[ERROR]",0
0002f4  4f525d00
                  |L1.760|
0002f8  5b4f5448          DCB      "[OTHER]",0
0002fc  45525d00
                  |L1.768|
000300  25303464          DCB      "%04d/%02d/%02d_%02d:%02d:%02d[%d] %s:",0
000304  2f253032
000308  642f2530
00030c  32645f25
000310  3032643a
000314  25303264
000318  3a253032
00031c  645b2564
000320  5d202573
000324  3a00    
000326  00                DCB      0
000327  00                DCB      0
                  |L1.808|
000328  25732573          DCB      "%s%s",0
00032c  00      
00032d  00                DCB      0
00032e  00                DCB      0
00032f  00                DCB      0
                  |L1.816|
000330  5b25735d          DCB      "[%s]",0
000334  00      
000335  00                DCB      0
000336  00                DCB      0
000337  00                DCB      0
                  |L1.824|
000338  313a00            DCB      "1:",0
00033b  00                DCB      0
                  |L1.828|
00033c  207e7e7e          DCB      " ~~~~~ LoglibPrintf END ~~~~~ \r\n",0
000340  7e7e204c
000344  6f676c69
000348  62507269
00034c  6e746620
000350  454e4420
000354  7e7e7e7e
000358  7e200d0a
00035c  00      
00035d  00                DCB      0
00035e  00                DCB      0
00035f  00                DCB      0
                  |L1.864|
000360  207e7e7e          DCB      " ~~~~~ LoglibPrintf pvPortMalloc ERROR ~~~~~ \r\n",0
000364  7e7e204c
000368  6f676c69
00036c  62507269
000370  6e746620
000374  7076506f
000378  72744d61
00037c  6c6c6f63
000380  20455252
000384  4f52207e
000388  7e7e7e7e
00038c  200d0a00
                          ENDP

                  LoglibPrintfEx PROC
;;;63     }
;;;64     void  LoglibPrintfEx(LogType type, char* logData, BOOL flag)
000390  e92d4070          PUSH     {r4-r6,lr}
;;;65     {
000394  e1a04000          MOV      r4,r0
000398  e1a05001          MOV      r5,r1
00039c  e1a06002          MOV      r6,r2
;;;66         LoglibPrintf(type, logData);
0003a0  e1a01005          MOV      r1,r5
0003a4  e1a00004          MOV      r0,r4
0003a8  ebfffffe          BL       LoglibPrintf
;;;67     }
0003ac  e8bd8070          POP      {r4-r6,pc}
;;;68     void  LoglibPrintf(LogType type, char* logData)
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  currentLogFileName
                          %        255

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  0d0a207e          DCB      0x0d,0x0a,0x20,0x7e
000004  7e7e7e7e          DCB      0x7e,0x7e,0x7e,0x7e
000008  204c6f67          DCB      0x20,0x4c,0x6f,0x67
00000c  6c696250          DCB      0x6c,0x69,0x62,0x50
000010  72696e74          DCB      0x72,0x69,0x6e,0x74
000014  66206967          DCB      0x66,0x20,0x69,0x67
000018  6e6f7265          DCB      0x6e,0x6f,0x72,0x65
00001c  20284261          DCB      0x20,0x28,0x42,0x61
000020  74746572          DCB      0x74,0x74,0x65,0x72
000024  79436865          DCB      0x79,0x43,0x68,0x65
000028  636b506f          DCB      0x63,0x6b,0x50,0x6f
00002c  77657244          DCB      0x77,0x65,0x72,0x44
000030  6f776e43          DCB      0x6f,0x77,0x6e,0x43
000034  6f6e6469          DCB      0x6f,0x6e,0x64,0x69
000038  74696f6e          DCB      0x74,0x69,0x6f,0x6e
00003c  29207e7e          DCB      0x29,0x20,0x7e,0x7e
000040  7e7e7e20          DCB      0x7e,0x7e,0x7e,0x20
000044  0d0a00            DCB      0x0d,0x0a,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  xSemaphore
                          DCD      0x00000000
