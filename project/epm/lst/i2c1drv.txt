; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\i2c1drv.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\i2c1drv.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\i2c1drv.crf src\UserDrv\i2c1drv.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  I2c1SetPin PROC
;;;83     
;;;84     void I2c1SetPin(void)
000000  e92d4010          PUSH     {r4,lr}
;;;85     {
;;;86         sysprintf("I2c1SetPin!!\n");
000004  e28f0e21          ADR      r0,|L1.540|
000008  ebfffffe          BL       sysprintf
;;;87         outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<8)) | (0x8<<8));//GPG2 I2C1_SCL
00000c  e3a0020b          MOV      r0,#0xb0000000
000010  e59000a0          LDR      r0,[r0,#0xa0]
000014  e3c00c0f          BIC      r0,r0,#0xf00
000018  e3800b02          ORR      r0,r0,#0x800
00001c  e3a0120b          MOV      r1,#0xb0000000
000020  e58100a0          STR      r0,[r1,#0xa0]
;;;88         outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<12)) | (0x8<<12));//GPG3 I2C1_SDA
000024  e3a0020b          MOV      r0,#0xb0000000
000028  e59000a0          LDR      r0,[r0,#0xa0]
00002c  e3c00a0f          BIC      r0,r0,#0xf000
000030  e3800902          ORR      r0,r0,#0x8000
000034  e58100a0          STR      r0,[r1,#0xa0]
;;;89     }
000038  e8bd8010          POP      {r4,pc}
;;;90     
                          ENDP

                  hwInit PROC
;;;37     /*-----------------------------------------*/
;;;38     static BOOL hwInit(void)
00003c  e92d4010          PUSH     {r4,lr}
;;;39     {
;;;40         outpw(REG_CLK_PCLKEN0,inpw(REG_CLK_PCLKEN0) | (1<<3)); //Enable GPIO engin clock.
000040  e3a0020b          MOV      r0,#0xb0000000
000044  e5900218          LDR      r0,[r0,#0x218]
000048  e3800008          ORR      r0,r0,#8
00004c  e3a0120b          MOV      r1,#0xb0000000
000050  e5810218          STR      r0,[r1,#0x218]
;;;41         I2c1SetPin();
000054  ebfffffe          BL       I2c1SetPin
;;;42         i2cInit(I2C_PORT);
000058  e3a00001          MOV      r0,#1
00005c  ebfffffe          BL       i2cInit
;;;43         int32_t rtval = i2cOpen((PVOID)I2C_PORT);
000060  e3a00001          MOV      r0,#1
000064  ebfffffe          BL       i2cOpen
000068  e1a04000          MOV      r4,r0
;;;44         if(rtval < 0) 
00006c  e3540000          CMP      r4,#0
000070  aa000003          BGE      |L1.132|
;;;45         {
;;;46             sysprintf("Open I2C1 error!\n");
000074  e28f0e1b          ADR      r0,|L1.556|
000078  ebfffffe          BL       sysprintf
;;;47             return FALSE;
00007c  e3a00000          MOV      r0,#0
                  |L1.128|
;;;48         }
;;;49         i2cIoctl(I2C_PORT, I2C_IOC_SET_SPEED, 100, 0);
;;;50         return TRUE;
;;;51     }
000080  e8bd8010          POP      {r4,pc}
                  |L1.132|
000084  e3a03000          MOV      r3,#0                 ;49
000088  e3a02064          MOV      r2,#0x64              ;49
00008c  e3a01002          MOV      r1,#2                 ;49
000090  e3a00001          MOV      r0,#1                 ;49
000094  ebfffffe          BL       i2cIoctl
000098  e3a00001          MOV      r0,#1                 ;50
00009c  eafffff7          B        |L1.128|
;;;52     /*-----------------------------------------*/
                          ENDP

                  I2c1DrvInit PROC
;;;54     /*-----------------------------------------*/
;;;55     BOOL I2c1DrvInit(void)
0000a0  e92d4010          PUSH     {r4,lr}
;;;56     {
;;;57         BOOL retval;
;;;58         sysprintf("I2c1DrvInit!!\n");
0000a4  e28f0f65          ADR      r0,|L1.576|
0000a8  ebfffffe          BL       sysprintf
;;;59         retval = hwInit();
0000ac  ebfffffe          BL       hwInit
0000b0  e1a04000          MOV      r4,r0
;;;60         return retval;
0000b4  e1a00004          MOV      r0,r4
;;;61     }
0000b8  e8bd8010          POP      {r4,pc}
;;;62     
                          ENDP

                  I2c1Ioctl PROC
;;;63     int32_t I2c1Ioctl(uint32_t cmd, uint32_t arg0, uint32_t arg1)
0000bc  e92d4070          PUSH     {r4-r6,lr}
;;;64     {
0000c0  e1a04000          MOV      r4,r0
0000c4  e1a05001          MOV      r5,r1
0000c8  e1a06002          MOV      r6,r2
;;;65         return i2cIoctl(I2C_PORT, cmd, arg0, arg1);
0000cc  e1a03006          MOV      r3,r6
0000d0  e1a02005          MOV      r2,r5
0000d4  e1a01004          MOV      r1,r4
0000d8  e3a00001          MOV      r0,#1
0000dc  ebfffffe          BL       i2cIoctl
;;;66     }
0000e0  e8bd8070          POP      {r4-r6,pc}
;;;67     int32_t I2c1Read(uint8_t* buf, uint32_t len)
                          ENDP

                  I2c1Read PROC
0000e4  e92d4070          PUSH     {r4-r6,lr}
;;;68     {
0000e8  e1a04000          MOV      r4,r0
0000ec  e1a05001          MOV      r5,r1
;;;69         return i2cRead(I2C_PORT, buf, len);
0000f0  e1a02005          MOV      r2,r5
0000f4  e1a01004          MOV      r1,r4
0000f8  e3a00001          MOV      r0,#1
0000fc  ebfffffe          BL       i2cRead
;;;70     }
000100  e8bd8070          POP      {r4-r6,pc}
;;;71     int32_t I2c1Write(uint8_t* buf, uint32_t len)
                          ENDP

                  I2c1Write PROC
000104  e92d4070          PUSH     {r4-r6,lr}
;;;72     {
000108  e1a04000          MOV      r4,r0
00010c  e1a05001          MOV      r5,r1
;;;73         return i2cWrite(I2C_PORT, buf, len);
000110  e1a02005          MOV      r2,r5
000114  e1a01004          MOV      r1,r4
000118  e3a00001          MOV      r0,#1
00011c  ebfffffe          BL       i2cWrite
;;;74     }
000120  e8bd8070          POP      {r4-r6,pc}
;;;75     
                          ENDP

                  I2c1enableCriticalSectionFunc PROC
;;;76     void I2c1enableCriticalSectionFunc(BOOL flag)
000124  e92d4010          PUSH     {r4,lr}
;;;77     {
000128  e1a04000          MOV      r4,r0
;;;78         if(flag)
00012c  e3540000          CMP      r4,#0
000130  0a000002          BEQ      |L1.320|
;;;79             i2cEnterCriticalSection(I2C_PORT);
000134  e3a00001          MOV      r0,#1
000138  ebfffffe          BL       i2cEnterCriticalSection
00013c  ea000001          B        |L1.328|
                  |L1.320|
;;;80         else
;;;81             i2cExitCriticalSection(I2C_PORT);
000140  e3a00001          MOV      r0,#1
000144  ebfffffe          BL       i2cExitCriticalSection
                  |L1.328|
;;;82     }
000148  e8bd8010          POP      {r4,pc}
;;;83     
                          ENDP

                  I2c1ResetPin PROC
;;;90     
;;;91     void I2c1ResetPin(void)
00014c  e92d4010          PUSH     {r4,lr}
;;;92     {
;;;93         sysprintf("I2c1ResetPin!!\n");
000150  e28f00f8          ADR      r0,|L1.592|
000154  ebfffffe          BL       sysprintf
;;;94         outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<8)) | (0x0<<8));//GPG2 I2C1_SCL
000158  e3a0020b          MOV      r0,#0xb0000000
00015c  e59000a0          LDR      r0,[r0,#0xa0]
000160  e3c00c0f          BIC      r0,r0,#0xf00
000164  e3a0120b          MOV      r1,#0xb0000000
000168  e58100a0          STR      r0,[r1,#0xa0]
;;;95         outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<12)) | (0x0<<12));//GPG3 I2C1_SDA
00016c  e3a0020b          MOV      r0,#0xb0000000
000170  e59000a0          LDR      r0,[r0,#0xa0]
000174  e3c00a0f          BIC      r0,r0,#0xf000
000178  e58100a0          STR      r0,[r1,#0xa0]
;;;96         
;;;97         GPIO_OpenBit(GPIOG, BIT2, DIR_OUTPUT, NO_PULL_UP); 
00017c  e3a03000          MOV      r3,#0
000180  e3a02001          MOV      r2,#1
000184  e3a01004          MOV      r1,#4
000188  e3a00d06          MOV      r0,#0x180
00018c  ebfffffe          BL       GPIO_OpenBit
;;;98         GPIO_ClrBit(GPIOG, BIT2); 
000190  e3a01004          MOV      r1,#4
000194  e3a00d06          MOV      r0,#0x180
000198  ebfffffe          BL       GPIO_ClrBit
;;;99         GPIO_OpenBit(GPIOG, BIT3, DIR_OUTPUT, NO_PULL_UP); 
00019c  e3a03000          MOV      r3,#0
0001a0  e3a02001          MOV      r2,#1
0001a4  e3a01008          MOV      r1,#8
0001a8  e3a00d06          MOV      r0,#0x180
0001ac  ebfffffe          BL       GPIO_OpenBit
;;;100        GPIO_ClrBit(GPIOG, BIT3); 
0001b0  e3a01008          MOV      r1,#8
0001b4  e3a00d06          MOV      r0,#0x180
0001b8  ebfffffe          BL       GPIO_ClrBit
;;;101    }
0001bc  e8bd8010          POP      {r4,pc}
;;;102    
                          ENDP

                  I2c1ResetInputPin PROC
;;;103    void I2c1ResetInputPin(void)
0001c0  e92d4010          PUSH     {r4,lr}
;;;104    {
;;;105        sysprintf("I2c1ResetInputPin!!\n");
0001c4  e28f0094          ADR      r0,|L1.608|
0001c8  ebfffffe          BL       sysprintf
;;;106        outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<8)) | (0x0<<8));//GPG2 I2C1_SCL
0001cc  e3a0020b          MOV      r0,#0xb0000000
0001d0  e59000a0          LDR      r0,[r0,#0xa0]
0001d4  e3c00c0f          BIC      r0,r0,#0xf00
0001d8  e3a0120b          MOV      r1,#0xb0000000
0001dc  e58100a0          STR      r0,[r1,#0xa0]
;;;107        outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<12)) | (0x0<<12));//GPG3 I2C1_SDA
0001e0  e3a0020b          MOV      r0,#0xb0000000
0001e4  e59000a0          LDR      r0,[r0,#0xa0]
0001e8  e3c00a0f          BIC      r0,r0,#0xf000
0001ec  e58100a0          STR      r0,[r1,#0xa0]
;;;108        
;;;109        GPIO_OpenBit(GPIOG, BIT2, DIR_INPUT, NO_PULL_UP); 
0001f0  e3a03000          MOV      r3,#0
0001f4  e1a02003          MOV      r2,r3
0001f8  e3a01004          MOV      r1,#4
0001fc  e3a00d06          MOV      r0,#0x180
000200  ebfffffe          BL       GPIO_OpenBit
;;;110        //GPIO_ClrBit(GPIOG, BIT2); 
;;;111        GPIO_OpenBit(GPIOG, BIT3, DIR_INPUT, NO_PULL_UP); 
000204  e3a03000          MOV      r3,#0
000208  e1a02003          MOV      r2,r3
00020c  e3a01008          MOV      r1,#8
000210  e3a00d06          MOV      r0,#0x180
000214  ebfffffe          BL       GPIO_OpenBit
;;;112        //GPIO_ClrBit(GPIOG, BIT3); 
;;;113    }
000218  e8bd8010          POP      {r4,pc}
                  |L1.540|
00021c  49326331          DCB      "I2c1SetPin!!\n",0
000220  53657450
000224  696e2121
000228  0a00    
00022a  00                DCB      0
00022b  00                DCB      0
                  |L1.556|
00022c  4f70656e          DCB      "Open I2C1 error!\n",0
000230  20493243
000234  31206572
000238  726f7221
00023c  0a00    
00023e  00                DCB      0
00023f  00                DCB      0
                  |L1.576|
000240  49326331          DCB      "I2c1DrvInit!!\n",0
000244  44727649
000248  6e697421
00024c  210a00  
00024f  00                DCB      0
                  |L1.592|
000250  49326331          DCB      "I2c1ResetPin!!\n",0
000254  52657365
000258  7450696e
00025c  21210a00
                  |L1.608|
000260  49326331          DCB      "I2c1ResetInputPin!!\n",0
000264  52657365
000268  74496e70
00026c  75745069
000270  6e21210a
000274  00      
000275  00                DCB      0
000276  00                DCB      0
000277  00                DCB      0
                          ENDP

