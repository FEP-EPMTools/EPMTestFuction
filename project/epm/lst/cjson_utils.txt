; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\cjson_utils.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\cjson_utils.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\cjson_utils.crf src\SysHal\json\cJSON_Utils.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_u
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_return_value
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  cJSONUtils_strdup PROC
;;;15     
;;;16     static unsigned char* cJSONUtils_strdup(const unsigned char* str)
000000  e92d4070          PUSH     {r4-r6,lr}
;;;17     {
000004  e1a04000          MOV      r4,r0
;;;18         size_t len = 0;
000008  e3a05000          MOV      r5,#0
;;;19         unsigned char *copy = NULL;
00000c  e3a06000          MOV      r6,#0
;;;20     
;;;21         len = strlen((const char*)str) + 1;
000010  e1a00004          MOV      r0,r4
000014  ebfffffe          BL       strlen
000018  e2805001          ADD      r5,r0,#1
;;;22         if (!(copy = (unsigned char*)(uint8_t *)pvPortMalloc(len)))
00001c  e1a00005          MOV      r0,r5
000020  ebfffffe          BL       pvPortMalloc
000024  e1b06000          MOVS     r6,r0
000028  1a000001          BNE      |L1.52|
;;;23         {
;;;24             return NULL;
00002c  e3a00000          MOV      r0,#0
                  |L1.48|
;;;25         }
;;;26         memcpy(copy, str, len);
;;;27     
;;;28         return copy;
;;;29     }
000030  e8bd8070          POP      {r4-r6,pc}
                  |L1.52|
000034  e1a02005          MOV      r2,r5                 ;26
000038  e1a01004          MOV      r1,r4                 ;26
00003c  e1a00006          MOV      r0,r6                 ;26
000040  ebfffffe          BL       __aeabi_memcpy
000044  e1a00006          MOV      r0,r6                 ;28
000048  eafffff8          B        |L1.48|
;;;30     
                          ENDP

                  cJSONUtils_strcasecmp PROC
;;;31     static int cJSONUtils_strcasecmp(const unsigned char *s1, const unsigned char *s2)
00004c  e92d4070          PUSH     {r4-r6,lr}
;;;32     {
000050  e1a04000          MOV      r4,r0
000054  e1a05001          MOV      r5,r1
;;;33         if (!s1)
000058  e3540000          CMP      r4,#0
00005c  1a000005          BNE      |L1.120|
;;;34         {
;;;35             return (s1 == s2) ? 0 : 1; /* both NULL? */
000060  e1540005          CMP      r4,r5
000064  0a000001          BEQ      |L1.112|
000068  e3a00001          MOV      r0,#1
                  |L1.108|
;;;36         }
;;;37         if (!s2)
;;;38         {
;;;39             return 1;
;;;40         }
;;;41         for(; tolower(*s1) == tolower(*s2); ++s1, ++s2)
;;;42         {
;;;43             if(*s1 == 0)
;;;44             {
;;;45                 return 0;
;;;46             }
;;;47         }
;;;48     
;;;49         return tolower(*s1) - tolower(*s2);
;;;50     }
00006c  e8bd8070          POP      {r4-r6,pc}
                  |L1.112|
000070  e3a00000          MOV      r0,#0                 ;35
000074  eafffffc          B        |L1.108|
                  |L1.120|
000078  e3550000          CMP      r5,#0                 ;37
00007c  1a000001          BNE      |L1.136|
000080  e3a00001          MOV      r0,#1                 ;39
000084  eafffff8          B        |L1.108|
                  |L1.136|
000088  ea000006          B        |L1.168|
                  |L1.140|
00008c  e5d40000          LDRB     r0,[r4,#0]            ;43
000090  e3500000          CMP      r0,#0                 ;43
000094  1a000001          BNE      |L1.160|
000098  e3a00000          MOV      r0,#0                 ;45
00009c  eafffff2          B        |L1.108|
                  |L1.160|
0000a0  e2844001          ADD      r4,r4,#1              ;41
0000a4  e2855001          ADD      r5,r5,#1              ;41
                  |L1.168|
0000a8  e5d40000          LDRB     r0,[r4,#0]            ;41
0000ac  ebfffffe          BL       tolower
0000b0  e1a06000          MOV      r6,r0                 ;41
0000b4  e5d50000          LDRB     r0,[r5,#0]            ;41
0000b8  ebfffffe          BL       tolower
0000bc  e1560000          CMP      r6,r0                 ;41
0000c0  0afffff1          BEQ      |L1.140|
0000c4  e5d40000          LDRB     r0,[r4,#0]            ;49
0000c8  ebfffffe          BL       tolower
0000cc  e1a06000          MOV      r6,r0                 ;49
0000d0  e5d50000          LDRB     r0,[r5,#0]            ;49
0000d4  ebfffffe          BL       tolower
0000d8  e0460000          SUB      r0,r6,r0              ;49
0000dc  eaffffe2          B        |L1.108|
;;;51     
                          ENDP

                  cJSONUtils_Pstrcasecmp PROC
;;;52     /* JSON Pointer implementation: */
;;;53     static int cJSONUtils_Pstrcasecmp(const unsigned char *a, const unsigned char *e)
0000e0  e92d4070          PUSH     {r4-r6,lr}
;;;54     {
0000e4  e1a05000          MOV      r5,r0
0000e8  e1a04001          MOV      r4,r1
;;;55         if (!a || !e)
0000ec  e3550000          CMP      r5,#0
0000f0  0a000001          BEQ      |L1.252|
0000f4  e3540000          CMP      r4,#0
0000f8  1a000005          BNE      |L1.276|
                  |L1.252|
;;;56         {
;;;57             return (a == e) ? 0 : 1; /* both NULL? */
0000fc  e1550004          CMP      r5,r4
000100  0a000001          BEQ      |L1.268|
000104  e3a00001          MOV      r0,#1
                  |L1.264|
;;;58         }
;;;59         for (; *a && *e && (*e != '/'); a++, e++) /* compare until next '/' */
;;;60         {
;;;61             if (*e == '~')
;;;62             {
;;;63                 /* check for escaped '~' (~0) and '/' (~1) */
;;;64                 if (!((e[1] == '0') && (*a == '~')) && !((e[1] == '1') && (*a == '/')))
;;;65                 {
;;;66                     /* invalid escape sequence or wrong character in *a */
;;;67                     return 1;
;;;68                 }
;;;69                 else
;;;70                 {
;;;71                     e++;
;;;72                 }
;;;73             }
;;;74             else if (tolower(*a) != tolower(*e))
;;;75             {
;;;76                 return 1;
;;;77             }
;;;78         }
;;;79         if (((*e != 0) && (*e != '/')) != (*a != 0))
;;;80         {
;;;81             /* one string has ended, the other not */
;;;82             return 1;
;;;83         }
;;;84     
;;;85         return 0;
;;;86     }
000108  e8bd8070          POP      {r4-r6,pc}
                  |L1.268|
00010c  e3a00000          MOV      r0,#0                 ;57
000110  eafffffc          B        |L1.264|
                  |L1.276|
000114  ea00001d          B        |L1.400|
                  |L1.280|
000118  e5d40000          LDRB     r0,[r4,#0]            ;61
00011c  e350007e          CMP      r0,#0x7e              ;61
000120  1a00000f          BNE      |L1.356|
000124  e5d40001          LDRB     r0,[r4,#1]            ;64
000128  e3500030          CMP      r0,#0x30              ;64
00012c  1a000002          BNE      |L1.316|
000130  e5d50000          LDRB     r0,[r5,#0]            ;64
000134  e350007e          CMP      r0,#0x7e              ;64
000138  0a000007          BEQ      |L1.348|
                  |L1.316|
00013c  e5d40001          LDRB     r0,[r4,#1]            ;64
000140  e3500031          CMP      r0,#0x31              ;64
000144  1a000002          BNE      |L1.340|
000148  e5d50000          LDRB     r0,[r5,#0]            ;64
00014c  e350002f          CMP      r0,#0x2f              ;64
000150  0a000001          BEQ      |L1.348|
                  |L1.340|
000154  e3a00001          MOV      r0,#1                 ;67
000158  eaffffea          B        |L1.264|
                  |L1.348|
00015c  e2844001          ADD      r4,r4,#1              ;71
000160  ea000008          B        |L1.392|
                  |L1.356|
000164  e5d50000          LDRB     r0,[r5,#0]            ;74
000168  ebfffffe          BL       tolower
00016c  e1a06000          MOV      r6,r0                 ;74
000170  e5d40000          LDRB     r0,[r4,#0]            ;74
000174  ebfffffe          BL       tolower
000178  e1560000          CMP      r6,r0                 ;74
00017c  0a000001          BEQ      |L1.392|
000180  e3a00001          MOV      r0,#1                 ;76
000184  eaffffdf          B        |L1.264|
                  |L1.392|
000188  e2855001          ADD      r5,r5,#1              ;59
00018c  e2844001          ADD      r4,r4,#1              ;59
                  |L1.400|
000190  e5d50000          LDRB     r0,[r5,#0]            ;59
000194  e3500000          CMP      r0,#0                 ;59
000198  0a000005          BEQ      |L1.436|
00019c  e5d40000          LDRB     r0,[r4,#0]            ;59
0001a0  e3500000          CMP      r0,#0                 ;59
0001a4  0a000002          BEQ      |L1.436|
0001a8  e5d40000          LDRB     r0,[r4,#0]            ;59
0001ac  e350002f          CMP      r0,#0x2f              ;59
0001b0  1affffd8          BNE      |L1.280|
                  |L1.436|
0001b4  e5d40000          LDRB     r0,[r4,#0]            ;79
0001b8  e3500000          CMP      r0,#0                 ;79
0001bc  0a000004          BEQ      |L1.468|
0001c0  e5d40000          LDRB     r0,[r4,#0]            ;79
0001c4  e350002f          CMP      r0,#0x2f              ;79
0001c8  0a000001          BEQ      |L1.468|
0001cc  e3a00001          MOV      r0,#1                 ;79
0001d0  ea000000          B        |L1.472|
                  |L1.468|
0001d4  e3a00000          MOV      r0,#0                 ;79
                  |L1.472|
0001d8  e5d51000          LDRB     r1,[r5,#0]            ;79
0001dc  e3510000          CMP      r1,#0                 ;79
0001e0  0a000001          BEQ      |L1.492|
0001e4  e3a01001          MOV      r1,#1                 ;79
0001e8  ea000000          B        |L1.496|
                  |L1.492|
0001ec  e3a01000          MOV      r1,#0                 ;79
                  |L1.496|
0001f0  e1500001          CMP      r0,r1                 ;79
0001f4  0a000001          BEQ      |L1.512|
0001f8  e3a00001          MOV      r0,#1                 ;82
0001fc  eaffffc1          B        |L1.264|
                  |L1.512|
000200  e3a00000          MOV      r0,#0                 ;85
000204  eaffffbf          B        |L1.264|
;;;87     
                          ENDP

                  cJSONUtils_PointerEncodedstrlen PROC
;;;88     static size_t cJSONUtils_PointerEncodedstrlen(const unsigned char *s)
000208  e1a01000          MOV      r1,r0
;;;89     {
;;;90         size_t l = 0;
00020c  e3a00000          MOV      r0,#0
;;;91         for (; *s; s++, l++)
000210  ea000008          B        |L1.568|
                  |L1.532|
;;;92         {
;;;93             if ((*s == '~') || (*s == '/'))
000214  e5d12000          LDRB     r2,[r1,#0]
000218  e352007e          CMP      r2,#0x7e
00021c  0a000002          BEQ      |L1.556|
000220  e5d12000          LDRB     r2,[r1,#0]
000224  e352002f          CMP      r2,#0x2f
000228  1a000000          BNE      |L1.560|
                  |L1.556|
;;;94             {
;;;95                 l++;
00022c  e2800001          ADD      r0,r0,#1
                  |L1.560|
000230  e2811001          ADD      r1,r1,#1              ;91
000234  e2800001          ADD      r0,r0,#1              ;91
                  |L1.568|
000238  e5d12000          LDRB     r2,[r1,#0]            ;91
00023c  e3520000          CMP      r2,#0                 ;91
000240  1afffff3          BNE      |L1.532|
;;;96             }
;;;97         }
;;;98     
;;;99         return l;
;;;100    }
000244  e12fff1e          BX       lr
;;;101    
                          ENDP

                  cJSONUtils_PointerEncodedstrcpy PROC
;;;102    static void cJSONUtils_PointerEncodedstrcpy(unsigned char *d, const unsigned char *s)
000248  ea000012          B        |L1.664|
                  |L1.588|
;;;103    {
;;;104        for (; *s; s++)
;;;105        {
;;;106            if (*s == '/')
00024c  e5d12000          LDRB     r2,[r1,#0]
000250  e352002f          CMP      r2,#0x2f
000254  1a000004          BNE      |L1.620|
;;;107            {
;;;108                *d++ = '~';
000258  e3a0207e          MOV      r2,#0x7e
00025c  e4c02001          STRB     r2,[r0],#1
;;;109                *d++ = '1';
000260  e3a02031          MOV      r2,#0x31
000264  e4c02001          STRB     r2,[r0],#1
000268  ea000009          B        |L1.660|
                  |L1.620|
;;;110            }
;;;111            else if (*s == '~')
00026c  e5d12000          LDRB     r2,[r1,#0]
000270  e352007e          CMP      r2,#0x7e
000274  1a000004          BNE      |L1.652|
;;;112            {
;;;113                *d++ = '~';
000278  e3a0207e          MOV      r2,#0x7e
00027c  e4c02001          STRB     r2,[r0],#1
;;;114                *d++ = '0';
000280  e3a02030          MOV      r2,#0x30
000284  e4c02001          STRB     r2,[r0],#1
000288  ea000001          B        |L1.660|
                  |L1.652|
;;;115            }
;;;116            else
;;;117            {
;;;118                *d++ = *s;
00028c  e5d12000          LDRB     r2,[r1,#0]
000290  e4c02001          STRB     r2,[r0],#1
                  |L1.660|
000294  e2811001          ADD      r1,r1,#1              ;104
                  |L1.664|
000298  e5d12000          LDRB     r2,[r1,#0]            ;104
00029c  e3520000          CMP      r2,#0                 ;104
0002a0  1affffe9          BNE      |L1.588|
;;;119            }
;;;120        }
;;;121    
;;;122        *d = '\0';
0002a4  e3a02000          MOV      r2,#0
0002a8  e5c02000          STRB     r2,[r0,#0]
;;;123    }
0002ac  e12fff1e          BX       lr
;;;124    
                          ENDP

                  cJSONUtils_FindPointerFromObjectTo PROC
;;;125    char *cJSONUtils_FindPointerFromObjectTo(cJSON *object, cJSON *target)
0002b0  e92d4ff8          PUSH     {r3-r11,lr}
;;;126    {
0002b4  e1a05000          MOV      r5,r0
0002b8  e1a08001          MOV      r8,r1
;;;127        int type = object->type;
0002bc  e595900c          LDR      r9,[r5,#0xc]
;;;128        size_t c = 0;
0002c0  e3a0a000          MOV      r10,#0
;;;129        cJSON *obj = 0;
0002c4  e3a04000          MOV      r4,#0
;;;130    
;;;131        if (object == target)
0002c8  e1550008          CMP      r5,r8
0002cc  1a000002          BNE      |L1.732|
;;;132        {
;;;133            /* found */
;;;134            return (char*)cJSONUtils_strdup((const unsigned char*)"");
0002d0  e28f0f85          ADR      r0,|L1.1260|
0002d4  ebfffffe          BL       cJSONUtils_strdup
                  |L1.728|
;;;135        }
;;;136    
;;;137        /* recursively search all children of the object */
;;;138        for (obj = object->child; obj; obj = obj->next, c++)
;;;139        {
;;;140            unsigned char *found = (unsigned char*)cJSONUtils_FindPointerFromObjectTo(obj, target);
;;;141            if (found)
;;;142            {
;;;143                if ((type & 0xFF) == cJSON_Array)
;;;144                {
;;;145                    /* reserve enough memory for a 64 bit integer + '/' and '\0' */
;;;146                    unsigned char *ret = (unsigned char*)(uint8_t *)pvPortMalloc(strlen((char*)found) + 23);
;;;147                    /* check if conversion to unsigned long is valid
;;;148                     * This should be eliminated at compile time by dead code elimination
;;;149                     * if size_t is an alias of unsigned long, or if it is bigger */
;;;150                    if (c > ULONG_MAX)
;;;151                    {
;;;152                        vPortFree(found);
;;;153                        return NULL;
;;;154                    }
;;;155                    sprintf((char*)ret, "/%lu%s", (unsigned long)c, found); /* /<array_index><path> */
;;;156                    vPortFree(found);
;;;157    
;;;158                    return (char*)ret;
;;;159                }
;;;160                else if ((type & 0xFF) == cJSON_Object)
;;;161                {
;;;162                    unsigned char *ret = (unsigned char*)(uint8_t *)pvPortMalloc(strlen((char*)found) + cJSONUtils_PointerEncodedstrlen((unsigned char*)obj->string) + 2);
;;;163                    *ret = '/';
;;;164                    cJSONUtils_PointerEncodedstrcpy(ret + 1, (unsigned char*)obj->string);
;;;165                    strcat((char*)ret, (char*)found);
;;;166                    vPortFree(found);
;;;167    
;;;168                    return (char*)ret;
;;;169                }
;;;170    
;;;171                /* reached leaf of the tree, found nothing */
;;;172                vPortFree(found);
;;;173                return NULL;
;;;174            }
;;;175        }
;;;176    
;;;177        /* not found */
;;;178        return NULL;
;;;179    }
0002d8  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.732|
0002dc  e5954008          LDR      r4,[r5,#8]            ;138
0002e0  ea00003a          B        |L1.976|
                  |L1.740|
0002e4  e1a01008          MOV      r1,r8                 ;140
0002e8  e1a00004          MOV      r0,r4                 ;140
0002ec  ebfffffe          BL       cJSONUtils_FindPointerFromObjectTo
0002f0  e1a06000          MOV      r6,r0                 ;140
0002f4  e3560000          CMP      r6,#0                 ;141
0002f8  0a000032          BEQ      |L1.968|
0002fc  e20900ff          AND      r0,r9,#0xff           ;143
000300  e3500020          CMP      r0,#0x20              ;143
000304  1a00000f          BNE      |L1.840|
000308  e1a00006          MOV      r0,r6                 ;146
00030c  ebfffffe          BL       strlen
000310  e280b017          ADD      r11,r0,#0x17          ;146
000314  e1a0000b          MOV      r0,r11                ;146
000318  ebfffffe          BL       pvPortMalloc
00031c  e1a07000          MOV      r7,r0                 ;146
000320  e1a00000          MOV      r0,r0                 ;150
000324  e1a03006          MOV      r3,r6                 ;155
000328  e1a0200a          MOV      r2,r10                ;155
00032c  e28f1f6f          ADR      r1,|L1.1264|
000330  e1a00007          MOV      r0,r7                 ;155
000334  ebfffffe          BL       __2sprintf
000338  e1a00006          MOV      r0,r6                 ;156
00033c  ebfffffe          BL       vPortFree
000340  e1a00007          MOV      r0,r7                 ;158
000344  eaffffe3          B        |L1.728|
                  |L1.840|
000348  e1a00000          MOV      r0,r0                 ;159
00034c  e20900ff          AND      r0,r9,#0xff           ;160
000350  e3500040          CMP      r0,#0x40              ;160
000354  1a000015          BNE      |L1.944|
000358  e1a00006          MOV      r0,r6                 ;162
00035c  ebfffffe          BL       strlen
000360  e1a0b000          MOV      r11,r0                ;162
000364  e5940020          LDR      r0,[r4,#0x20]         ;162
000368  ebfffffe          BL       cJSONUtils_PointerEncodedstrlen
00036c  e080000b          ADD      r0,r0,r11             ;162
000370  e2800002          ADD      r0,r0,#2              ;162
000374  e58d0000          STR      r0,[sp,#0]            ;162
000378  ebfffffe          BL       pvPortMalloc
00037c  e1a07000          MOV      r7,r0                 ;162
000380  e3a0002f          MOV      r0,#0x2f              ;163
000384  e5c70000          STRB     r0,[r7,#0]            ;163
000388  e2870001          ADD      r0,r7,#1              ;164
00038c  e5941020          LDR      r1,[r4,#0x20]         ;164
000390  ebfffffe          BL       cJSONUtils_PointerEncodedstrcpy
000394  e1a01006          MOV      r1,r6                 ;165
000398  e1a00007          MOV      r0,r7                 ;165
00039c  ebfffffe          BL       strcat
0003a0  e1a00006          MOV      r0,r6                 ;166
0003a4  ebfffffe          BL       vPortFree
0003a8  e1a00007          MOV      r0,r7                 ;168
0003ac  eaffffc9          B        |L1.728|
                  |L1.944|
0003b0  e1a00000          MOV      r0,r0                 ;169
0003b4  e1a00000          MOV      r0,r0                 ;169
0003b8  e1a00006          MOV      r0,r6                 ;172
0003bc  ebfffffe          BL       vPortFree
0003c0  e3a00000          MOV      r0,#0                 ;173
0003c4  eaffffc3          B        |L1.728|
                  |L1.968|
0003c8  e5944000          LDR      r4,[r4,#0]            ;138
0003cc  e28aa001          ADD      r10,r10,#1            ;138
                  |L1.976|
0003d0  e3540000          CMP      r4,#0                 ;138
0003d4  1affffc2          BNE      |L1.740|
0003d8  e3a00000          MOV      r0,#0                 ;178
0003dc  eaffffbd          B        |L1.728|
;;;180    
                          ENDP

                  cJSONUtils_GetPointer PROC
;;;181    cJSON *cJSONUtils_GetPointer(cJSON *object, const char *pointer)
0003e0  e92d4070          PUSH     {r4-r6,lr}
;;;182    {
0003e4  e1a05000          MOV      r5,r0
0003e8  e1a04001          MOV      r4,r1
;;;183        /* follow path of the pointer */
;;;184        while ((*pointer++ == '/') && object)
0003ec  ea000037          B        |L1.1232|
                  |L1.1008|
;;;185        {
;;;186            if ((object->type & 0xFF) == cJSON_Array)
0003f0  e5d5000c          LDRB     r0,[r5,#0xc]
0003f4  e3500020          CMP      r0,#0x20
0003f8  1a00001c          BNE      |L1.1136|
;;;187            {
;;;188                size_t which = 0;
0003fc  e3a06000          MOV      r6,#0
;;;189                /* parse array index */
;;;190                while ((*pointer >= '0') && (*pointer <= '9'))
000400  ea000003          B        |L1.1044|
                  |L1.1028|
;;;191                {
;;;192                    which = (10 * which) + (size_t)(*pointer++ - '0');
000404  e4d40001          LDRB     r0,[r4],#1
000408  e2400030          SUB      r0,r0,#0x30
00040c  e3a0100a          MOV      r1,#0xa
000410  e0260691          MLA      r6,r1,r6,r0
                  |L1.1044|
000414  e5d40000          LDRB     r0,[r4,#0]            ;190
000418  e3500030          CMP      r0,#0x30              ;190
00041c  ba000002          BLT      |L1.1068|
000420  e5d40000          LDRB     r0,[r4,#0]            ;190
000424  e3500039          CMP      r0,#0x39              ;190
000428  dafffff5          BLE      |L1.1028|
                  |L1.1068|
;;;193                }
;;;194                if (*pointer && (*pointer != '/'))
00042c  e5d40000          LDRB     r0,[r4,#0]
000430  e3500000          CMP      r0,#0
000434  0a000004          BEQ      |L1.1100|
000438  e5d40000          LDRB     r0,[r4,#0]
00043c  e350002f          CMP      r0,#0x2f
000440  0a000001          BEQ      |L1.1100|
;;;195                {
;;;196                    /* not end of string or new path token */
;;;197                    return NULL;
000444  e3a00000          MOV      r0,#0
                  |L1.1096|
;;;198                }
;;;199                if (which > INT_MAX)
;;;200                {
;;;201                    return NULL;
;;;202                }
;;;203                object = cJSON_GetArrayItem(object, (int)which);
;;;204            }
;;;205            else if ((object->type & 0xFF) == cJSON_Object)
;;;206            {
;;;207                object = object->child;
;;;208                /* GetObjectItem. */
;;;209                while (object && cJSONUtils_Pstrcasecmp((unsigned char*)object->string, (const unsigned char*)pointer))
;;;210                {
;;;211                    object = object->next;
;;;212                }
;;;213                /* skip to the next path token or end of string */
;;;214                while (*pointer && (*pointer != '/'))
;;;215                {
;;;216                    pointer++;
;;;217                }
;;;218            }
;;;219            else
;;;220            {
;;;221                return NULL;
;;;222            }
;;;223        }
;;;224    
;;;225        return object;
;;;226    }
000448  e8bd8070          POP      {r4-r6,pc}
                  |L1.1100|
00044c  e3760106          CMN      r6,#0x80000001        ;199
000450  9a000001          BLS      |L1.1116|
000454  e3a00000          MOV      r0,#0                 ;201
000458  eafffffa          B        |L1.1096|
                  |L1.1116|
00045c  e1a01006          MOV      r1,r6                 ;203
000460  e1a00005          MOV      r0,r5                 ;203
000464  ebfffffe          BL       cJSON_GetArrayItem
000468  e1a05000          MOV      r5,r0                 ;203
00046c  ea000017          B        |L1.1232|
                  |L1.1136|
000470  e5d5000c          LDRB     r0,[r5,#0xc]          ;205
000474  e3500040          CMP      r0,#0x40              ;205
000478  1a000012          BNE      |L1.1224|
00047c  e5955008          LDR      r5,[r5,#8]            ;207
000480  ea000000          B        |L1.1160|
                  |L1.1156|
000484  e5955000          LDR      r5,[r5,#0]            ;211
                  |L1.1160|
000488  e3550000          CMP      r5,#0                 ;209
00048c  0a000004          BEQ      |L1.1188|
000490  e1a01004          MOV      r1,r4                 ;209
000494  e5950020          LDR      r0,[r5,#0x20]         ;209
000498  ebfffffe          BL       cJSONUtils_Pstrcasecmp
00049c  e3500000          CMP      r0,#0                 ;209
0004a0  1afffff7          BNE      |L1.1156|
                  |L1.1188|
0004a4  ea000000          B        |L1.1196|
                  |L1.1192|
0004a8  e2844001          ADD      r4,r4,#1              ;216
                  |L1.1196|
0004ac  e5d40000          LDRB     r0,[r4,#0]            ;214
0004b0  e3500000          CMP      r0,#0                 ;214
0004b4  0a000005          BEQ      |L1.1232|
0004b8  e5d40000          LDRB     r0,[r4,#0]            ;214
0004bc  e350002f          CMP      r0,#0x2f              ;214
0004c0  0a000002          BEQ      |L1.1232|
0004c4  eafffff7          B        |L1.1192|
                  |L1.1224|
0004c8  e3a00000          MOV      r0,#0                 ;221
0004cc  eaffffdd          B        |L1.1096|
                  |L1.1232|
0004d0  e4d40001          LDRB     r0,[r4],#1            ;184
0004d4  e350002f          CMP      r0,#0x2f              ;184
0004d8  1a000001          BNE      |L1.1252|
0004dc  e3550000          CMP      r5,#0                 ;184
0004e0  1affffc2          BNE      |L1.1008|
                  |L1.1252|
0004e4  e1a00005          MOV      r0,r5                 ;225
0004e8  eaffffd6          B        |L1.1096|
                  |L1.1260|
0004ec  00                DCB      0
0004ed  00                DCB      0
0004ee  00                DCB      0
0004ef  00                DCB      0
                  |L1.1264|
0004f0  2f256c75          DCB      "/%lu%s",0
0004f4  257300  
0004f7  00                DCB      0
                          ENDP

                  cJSONUtils_InplaceDecodePointerString PROC
;;;228    /* JSON Patch implementation. */
;;;229    static void cJSONUtils_InplaceDecodePointerString(unsigned char *string)
0004f8  e1a01000          MOV      r1,r0
;;;230    {
;;;231        unsigned char *s2 = string;
;;;232    
;;;233        if (string == NULL) {
0004fc  e3500000          CMP      r0,#0
000500  1a000000          BNE      |L1.1288|
                  |L1.1284|
;;;234            return;
;;;235        }
;;;236    
;;;237        for (; *string; s2++, string++)
;;;238        {
;;;239            *s2 = (*string != '~')
;;;240                ? (*string)
;;;241                : ((*(++string) == '0')
;;;242                        ? '~'
;;;243                        : '/');
;;;244        }
;;;245    
;;;246        *s2 = '\0';
;;;247    }
000504  e12fff1e          BX       lr
                  |L1.1288|
000508  ea00000f          B        |L1.1356|
                  |L1.1292|
00050c  e5d02000          LDRB     r2,[r0,#0]            ;239
000510  e352007e          CMP      r2,#0x7e              ;239
000514  0a000001          BEQ      |L1.1312|
000518  e5d02000          LDRB     r2,[r0,#0]            ;240
00051c  ea000007          B        |L1.1344|
                  |L1.1312|
000520  e2802001          ADD      r2,r0,#1              ;241
000524  e1a00002          MOV      r0,r2                 ;241
000528  e5d22000          LDRB     r2,[r2,#0]            ;241
00052c  e3520030          CMP      r2,#0x30              ;241
000530  1a000001          BNE      |L1.1340|
000534  e3a0207e          MOV      r2,#0x7e              ;242
000538  ea000000          B        |L1.1344|
                  |L1.1340|
00053c  e3a0202f          MOV      r2,#0x2f              ;243
                  |L1.1344|
000540  e5c12000          STRB     r2,[r1,#0]            ;243
000544  e2811001          ADD      r1,r1,#1              ;237
000548  e2800001          ADD      r0,r0,#1              ;237
                  |L1.1356|
00054c  e5d02000          LDRB     r2,[r0,#0]            ;237
000550  e3520000          CMP      r2,#0                 ;237
000554  1affffec          BNE      |L1.1292|
000558  e3a02000          MOV      r2,#0                 ;246
00055c  e5c12000          STRB     r2,[r1,#0]            ;246
000560  e1a00000          MOV      r0,r0
000564  eaffffe6          B        |L1.1284|
;;;248    
                          ENDP

                  cJSONUtils_PatchDetach PROC
;;;249    static cJSON *cJSONUtils_PatchDetach(cJSON *object, const unsigned char *path)
000568  e92d47f0          PUSH     {r4-r10,lr}
;;;250    {
00056c  e1a08000          MOV      r8,r0
000570  e1a07001          MOV      r7,r1
;;;251        unsigned char *parentptr = NULL;
000574  e3a06000          MOV      r6,#0
;;;252        unsigned char *childptr = NULL;
000578  e3a04000          MOV      r4,#0
;;;253        cJSON *parent = NULL;
00057c  e3a05000          MOV      r5,#0
;;;254        cJSON *ret = NULL;
000580  e3a09000          MOV      r9,#0
;;;255    
;;;256        /* copy path and split it in parent and child */
;;;257        parentptr = cJSONUtils_strdup(path);
000584  e1a00007          MOV      r0,r7
000588  ebfffffe          BL       cJSONUtils_strdup
00058c  e1a06000          MOV      r6,r0
;;;258        if (parentptr == NULL) {
000590  e3560000          CMP      r6,#0
000594  1a000001          BNE      |L1.1440|
;;;259            return NULL;
000598  e3a00000          MOV      r0,#0
                  |L1.1436|
;;;260        }
;;;261    
;;;262        childptr = (unsigned char*)strrchr((char*)parentptr, '/'); /* last '/' */
;;;263        if (childptr == NULL)
;;;264        {
;;;265            vPortFree(parentptr);
;;;266            return NULL;
;;;267        }
;;;268        /* split strings */
;;;269        *childptr++ = '\0';
;;;270    
;;;271        parent = cJSONUtils_GetPointer(object, (char*)parentptr);
;;;272        cJSONUtils_InplaceDecodePointerString(childptr);
;;;273    
;;;274        if (!parent)
;;;275        {
;;;276            /* Couldn't find object to remove child from. */
;;;277            ret = NULL;
;;;278        }
;;;279        else if ((parent->type & 0xFF) == cJSON_Array)
;;;280        {
;;;281            ret = cJSON_DetachItemFromArray(parent, atoi((char*)childptr));
;;;282        }
;;;283        else if ((parent->type & 0xFF) == cJSON_Object)
;;;284        {
;;;285            ret = cJSON_DetachItemFromObject(parent, (char*)childptr);
;;;286        }
;;;287        vPortFree(parentptr);
;;;288    
;;;289        /* return the detachted item */
;;;290        return ret;
;;;291    }
00059c  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1440|
0005a0  e3a0102f          MOV      r1,#0x2f              ;262
0005a4  e1a00006          MOV      r0,r6                 ;262
0005a8  ebfffffe          BL       strrchr
0005ac  e1a04000          MOV      r4,r0                 ;262
0005b0  e3540000          CMP      r4,#0                 ;263
0005b4  1a000003          BNE      |L1.1480|
0005b8  e1a00006          MOV      r0,r6                 ;265
0005bc  ebfffffe          BL       vPortFree
0005c0  e3a00000          MOV      r0,#0                 ;266
0005c4  eafffff4          B        |L1.1436|
                  |L1.1480|
0005c8  e3a00000          MOV      r0,#0                 ;269
0005cc  e4c40001          STRB     r0,[r4],#1            ;269
0005d0  e1a01006          MOV      r1,r6                 ;271
0005d4  e1a00008          MOV      r0,r8                 ;271
0005d8  ebfffffe          BL       cJSONUtils_GetPointer
0005dc  e1a05000          MOV      r5,r0                 ;271
0005e0  e1a00004          MOV      r0,r4                 ;272
0005e4  ebfffffe          BL       cJSONUtils_InplaceDecodePointerString
0005e8  e3550000          CMP      r5,#0                 ;274
0005ec  1a000001          BNE      |L1.1528|
0005f0  e3a09000          MOV      r9,#0                 ;277
0005f4  ea000011          B        |L1.1600|
                  |L1.1528|
0005f8  e5d5000c          LDRB     r0,[r5,#0xc]          ;279
0005fc  e3500020          CMP      r0,#0x20              ;279
000600  1a000007          BNE      |L1.1572|
000604  e1a00004          MOV      r0,r4                 ;281
000608  ebfffffe          BL       atoi
00060c  e1a0a000          MOV      r10,r0                ;281
000610  e1a0100a          MOV      r1,r10                ;281
000614  e1a00005          MOV      r0,r5                 ;281
000618  ebfffffe          BL       cJSON_DetachItemFromArray
00061c  e1a09000          MOV      r9,r0                 ;281
000620  ea000006          B        |L1.1600|
                  |L1.1572|
000624  e5d5000c          LDRB     r0,[r5,#0xc]          ;283
000628  e3500040          CMP      r0,#0x40              ;283
00062c  1a000003          BNE      |L1.1600|
000630  e1a01004          MOV      r1,r4                 ;285
000634  e1a00005          MOV      r0,r5                 ;285
000638  ebfffffe          BL       cJSON_DetachItemFromObject
00063c  e1a09000          MOV      r9,r0                 ;285
                  |L1.1600|
000640  e1a00006          MOV      r0,r6                 ;287
000644  ebfffffe          BL       vPortFree
000648  e1a00009          MOV      r0,r9                 ;290
00064c  eaffffd2          B        |L1.1436|
;;;292    
                          ENDP

                  cJSONUtils_SortList PROC
;;;689    /* sort lists using mergesort */
;;;690    static cJSON *cJSONUtils_SortList(cJSON *list)
000650  e92d41f0          PUSH     {r4-r8,lr}
;;;691    {
000654  e1a07000          MOV      r7,r0
;;;692        cJSON *first = list;
000658  e1a06007          MOV      r6,r7
;;;693        cJSON *second = list;
00065c  e1a05007          MOV      r5,r7
;;;694        cJSON *ptr = list;
000660  e1a04007          MOV      r4,r7
;;;695    
;;;696        if (!list || !list->next)
000664  e3570000          CMP      r7,#0
000668  0a000002          BEQ      |L1.1656|
00066c  e5970000          LDR      r0,[r7,#0]
000670  e3500000          CMP      r0,#0
000674  1a000001          BNE      |L1.1664|
                  |L1.1656|
;;;697        {
;;;698            /* One entry is sorted already. */
;;;699            return list;
000678  e1a00007          MOV      r0,r7
                  |L1.1660|
;;;700        }
;;;701    
;;;702        while (ptr && ptr->next && (cJSONUtils_strcasecmp((unsigned char*)ptr->string, (unsigned char*)ptr->next->string) < 0))
;;;703        {
;;;704            /* Test for list sorted. */
;;;705            ptr = ptr->next;
;;;706        }
;;;707        if (!ptr || !ptr->next)
;;;708        {
;;;709            /* Leave sorted lists unmodified. */
;;;710            return list;
;;;711        }
;;;712    
;;;713        /* reset ptr to the beginning */
;;;714        ptr = list;
;;;715        while (ptr)
;;;716        {
;;;717            /* Walk two pointers to find the middle. */
;;;718            second = second->next;
;;;719            ptr = ptr->next;
;;;720            /* advances ptr two steps at a time */
;;;721            if (ptr)
;;;722            {
;;;723                ptr = ptr->next;
;;;724            }
;;;725        }
;;;726        if (second && second->prev)
;;;727        {
;;;728            /* Split the lists */
;;;729            second->prev->next = NULL;
;;;730        }
;;;731    
;;;732        /* Recursively sort the sub-lists. */
;;;733        first = cJSONUtils_SortList(first);
;;;734        second = cJSONUtils_SortList(second);
;;;735        list = ptr = NULL;
;;;736    
;;;737        while (first && second) /* Merge the sub-lists */
;;;738        {
;;;739            if (cJSONUtils_strcasecmp((unsigned char*)first->string, (unsigned char*)second->string) < 0)
;;;740            {
;;;741                if (!list)
;;;742                {
;;;743                    /* start merged list with the first element of the first list */
;;;744                    list = ptr = first;
;;;745                }
;;;746                else
;;;747                {
;;;748                    /* add first element of first list to merged list */
;;;749                    ptr->next = first;
;;;750                    first->prev = ptr;
;;;751                    ptr = first;
;;;752                }
;;;753                first = first->next;
;;;754            }
;;;755            else
;;;756            {
;;;757                if (!list)
;;;758                {
;;;759                    /* start merged list with the first element of the second list */
;;;760                    list = ptr = second;
;;;761                }
;;;762                else
;;;763                {
;;;764                    /* add first element of second list to merged list */
;;;765                    ptr->next = second;
;;;766                    second->prev = ptr;
;;;767                    ptr = second;
;;;768                }
;;;769                second = second->next;
;;;770            }
;;;771        }
;;;772        if (first)
;;;773        {
;;;774            /* Append rest of first list. */
;;;775            if (!list)
;;;776            {
;;;777                return first;
;;;778            }
;;;779            ptr->next = first;
;;;780            first->prev = ptr;
;;;781        }
;;;782        if (second)
;;;783        {
;;;784            /* Append rest of second list */
;;;785            if (!list)
;;;786            {
;;;787                return second;
;;;788            }
;;;789            ptr->next = second;
;;;790            second->prev = ptr;
;;;791        }
;;;792    
;;;793        return list;
;;;794    }
00067c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1664|
000680  ea000000          B        |L1.1672|
                  |L1.1668|
000684  e5944000          LDR      r4,[r4,#0]            ;705
                  |L1.1672|
000688  e3540000          CMP      r4,#0                 ;702
00068c  0a000008          BEQ      |L1.1716|
000690  e5940000          LDR      r0,[r4,#0]            ;702
000694  e3500000          CMP      r0,#0                 ;702
000698  0a000005          BEQ      |L1.1716|
00069c  e5942000          LDR      r2,[r4,#0]            ;702
0006a0  e5921020          LDR      r1,[r2,#0x20]         ;702
0006a4  e5940020          LDR      r0,[r4,#0x20]         ;702
0006a8  ebfffffe          BL       cJSONUtils_strcasecmp
0006ac  e3500000          CMP      r0,#0                 ;702
0006b0  bafffff3          BLT      |L1.1668|
                  |L1.1716|
0006b4  e3540000          CMP      r4,#0                 ;707
0006b8  0a000002          BEQ      |L1.1736|
0006bc  e5940000          LDR      r0,[r4,#0]            ;707
0006c0  e3500000          CMP      r0,#0                 ;707
0006c4  1a000001          BNE      |L1.1744|
                  |L1.1736|
0006c8  e1a00007          MOV      r0,r7                 ;710
0006cc  eaffffea          B        |L1.1660|
                  |L1.1744|
0006d0  e1a04007          MOV      r4,r7                 ;714
0006d4  ea000004          B        |L1.1772|
                  |L1.1752|
0006d8  e5955000          LDR      r5,[r5,#0]            ;718
0006dc  e5944000          LDR      r4,[r4,#0]            ;719
0006e0  e3540000          CMP      r4,#0                 ;721
0006e4  0a000000          BEQ      |L1.1772|
0006e8  e5944000          LDR      r4,[r4,#0]            ;723
                  |L1.1772|
0006ec  e3540000          CMP      r4,#0                 ;715
0006f0  1afffff8          BNE      |L1.1752|
0006f4  e3550000          CMP      r5,#0                 ;726
0006f8  0a000005          BEQ      |L1.1812|
0006fc  e5950004          LDR      r0,[r5,#4]            ;726
000700  e3500000          CMP      r0,#0                 ;726
000704  0a000002          BEQ      |L1.1812|
000708  e3a00000          MOV      r0,#0                 ;729
00070c  e5951004          LDR      r1,[r5,#4]            ;729
000710  e5810000          STR      r0,[r1,#0]            ;729
                  |L1.1812|
000714  e1a00006          MOV      r0,r6                 ;733
000718  ebfffffe          BL       cJSONUtils_SortList
00071c  e1a06000          MOV      r6,r0                 ;733
000720  e1a00005          MOV      r0,r5                 ;734
000724  ebfffffe          BL       cJSONUtils_SortList
000728  e1a05000          MOV      r5,r0                 ;734
00072c  e3a00000          MOV      r0,#0                 ;735
000730  e1a04000          MOV      r4,r0                 ;735
000734  e1a07000          MOV      r7,r0                 ;735
000738  ea000017          B        |L1.1948|
                  |L1.1852|
00073c  e5951020          LDR      r1,[r5,#0x20]         ;739
000740  e5960020          LDR      r0,[r6,#0x20]         ;739
000744  ebfffffe          BL       cJSONUtils_strcasecmp
000748  e3500000          CMP      r0,#0                 ;739
00074c  aa000009          BGE      |L1.1912|
000750  e3570000          CMP      r7,#0                 ;741
000754  1a000002          BNE      |L1.1892|
000758  e1a04006          MOV      r4,r6                 ;744
00075c  e1a07006          MOV      r7,r6                 ;744
000760  ea000002          B        |L1.1904|
                  |L1.1892|
000764  e5846000          STR      r6,[r4,#0]            ;749
000768  e5864004          STR      r4,[r6,#4]            ;750
00076c  e1a04006          MOV      r4,r6                 ;751
                  |L1.1904|
000770  e5966000          LDR      r6,[r6,#0]            ;753
000774  ea000008          B        |L1.1948|
                  |L1.1912|
000778  e3570000          CMP      r7,#0                 ;757
00077c  1a000002          BNE      |L1.1932|
000780  e1a04005          MOV      r4,r5                 ;760
000784  e1a07005          MOV      r7,r5                 ;760
000788  ea000002          B        |L1.1944|
                  |L1.1932|
00078c  e5845000          STR      r5,[r4,#0]            ;765
000790  e5854004          STR      r4,[r5,#4]            ;766
000794  e1a04005          MOV      r4,r5                 ;767
                  |L1.1944|
000798  e5955000          LDR      r5,[r5,#0]            ;769
                  |L1.1948|
00079c  e3560000          CMP      r6,#0                 ;737
0007a0  0a000001          BEQ      |L1.1964|
0007a4  e3550000          CMP      r5,#0                 ;737
0007a8  1affffe3          BNE      |L1.1852|
                  |L1.1964|
0007ac  e3560000          CMP      r6,#0                 ;772
0007b0  0a000005          BEQ      |L1.1996|
0007b4  e3570000          CMP      r7,#0                 ;775
0007b8  1a000001          BNE      |L1.1988|
0007bc  e1a00006          MOV      r0,r6                 ;777
0007c0  eaffffad          B        |L1.1660|
                  |L1.1988|
0007c4  e5846000          STR      r6,[r4,#0]            ;779
0007c8  e5864004          STR      r4,[r6,#4]            ;780
                  |L1.1996|
0007cc  e3550000          CMP      r5,#0                 ;782
0007d0  0a000005          BEQ      |L1.2028|
0007d4  e3570000          CMP      r7,#0                 ;785
0007d8  1a000001          BNE      |L1.2020|
0007dc  e1a00005          MOV      r0,r5                 ;787
0007e0  eaffffa5          B        |L1.1660|
                  |L1.2020|
0007e4  e5845000          STR      r5,[r4,#0]            ;789
0007e8  e5854004          STR      r4,[r5,#4]            ;790
                  |L1.2028|
0007ec  e1a00007          MOV      r0,r7                 ;793
0007f0  eaffffa1          B        |L1.1660|
;;;795    
                          ENDP

                  cJSONUtils_SortObject PROC
;;;796    void cJSONUtils_SortObject(cJSON *object)
0007f4  e92d4010          PUSH     {r4,lr}
;;;797    {
0007f8  e1a04000          MOV      r4,r0
;;;798        object->child = cJSONUtils_SortList(object->child);
0007fc  e5940008          LDR      r0,[r4,#8]
000800  ebfffffe          BL       cJSONUtils_SortList
000804  e5840008          STR      r0,[r4,#8]
;;;799    }
000808  e8bd8010          POP      {r4,pc}
;;;800    
                          ENDP

                  cJSONUtils_Compare PROC
;;;292    
;;;293    static int cJSONUtils_Compare(cJSON *a, cJSON *b)
00080c  e92d47f0          PUSH     {r4-r10,lr}
;;;294    {
000810  e1a04000          MOV      r4,r0
000814  e1a09001          MOV      r9,r1
;;;295        if ((a == NULL) || (b == NULL) || ((a->type & 0xFF) != (b->type & 0xFF)))
000818  e3540000          CMP      r4,#0
00081c  0a000005          BEQ      |L1.2104|
000820  e3590000          CMP      r9,#0
000824  0a000003          BEQ      |L1.2104|
000828  e5d4000c          LDRB     r0,[r4,#0xc]
00082c  e5d9100c          LDRB     r1,[r9,#0xc]
000830  e1500001          CMP      r0,r1
000834  0a000001          BEQ      |L1.2112|
                  |L1.2104|
;;;296        {
;;;297            /* mismatched type. */
;;;298            return -1;
000838  e3e00000          MVN      r0,#0
                  |L1.2108|
;;;299        }
;;;300        switch (a->type & 0xFF)
;;;301        {
;;;302            case cJSON_Number:
;;;303                /* numeric mismatch. */
;;;304                return ((a->valueint != b->valueint) || (a->valuedouble != b->valuedouble)) ? -2 : 0;
;;;305            case cJSON_String:
;;;306                /* string mismatch. */
;;;307                return (strcmp(a->valuestring, b->valuestring) != 0) ? -3 : 0;
;;;308            case cJSON_Array:
;;;309                for (a = a->child, b = b->child; a && b; a = a->next, b = b->next)
;;;310                {
;;;311                    int err = cJSONUtils_Compare(a, b);
;;;312                    if (err)
;;;313                    {
;;;314                        return err;
;;;315                    }
;;;316                }
;;;317                /* array size mismatch? (one of both children is not NULL) */
;;;318                return (a || b) ? -4 : 0;
;;;319            case cJSON_Object:
;;;320                cJSONUtils_SortObject(a);
;;;321                cJSONUtils_SortObject(b);
;;;322                a = a->child;
;;;323                b = b->child;
;;;324                while (a && b)
;;;325                {
;;;326                    int err = 0;
;;;327                    /* compare object keys */
;;;328                    if (cJSONUtils_strcasecmp((unsigned char*)a->string, (unsigned char*)b->string))
;;;329                    {
;;;330                        /* missing member */
;;;331                        return -6;
;;;332                    }
;;;333                    err = cJSONUtils_Compare(a, b);
;;;334                    if (err)
;;;335                    {
;;;336                        return err;
;;;337                    }
;;;338                    a = a->next;
;;;339                    b = b->next;
;;;340                }
;;;341                /* object length mismatch (one of both children is not null) */
;;;342                return (a || b) ? -5 : 0;
;;;343    
;;;344            default:
;;;345                break;
;;;346        }
;;;347        /* null, true or false */
;;;348        return 0;
;;;349    }
00083c  e8bd87f0          POP      {r4-r10,pc}
                  |L1.2112|
000840  e5d4000c          LDRB     r0,[r4,#0xc]          ;300
000844  e3500008          CMP      r0,#8                 ;300
000848  0a000006          BEQ      |L1.2152|
00084c  e3500010          CMP      r0,#0x10              ;300
000850  0a000015          BEQ      |L1.2220|
000854  e3500020          CMP      r0,#0x20              ;300
000858  0a00001d          BEQ      |L1.2260|
00085c  e3500040          CMP      r0,#0x40              ;300
000860  1a00005c          BNE      |L1.2520|
000864  ea000034          B        |L1.2364|
                  |L1.2152|
000868  e1a00000          MOV      r0,r0                 ;302
00086c  e5940014          LDR      r0,[r4,#0x14]         ;304
000870  e5991014          LDR      r1,[r9,#0x14]         ;304
000874  e1500001          CMP      r0,r1                 ;304
000878  1a000007          BNE      |L1.2204|
00087c  e599301c          LDR      r3,[r9,#0x1c]         ;304
000880  e5995018          LDR      r5,[r9,#0x18]         ;304
000884  e1a02005          MOV      r2,r5                 ;304
000888  e5947018          LDR      r7,[r4,#0x18]         ;304
00088c  e1a00007          MOV      r0,r7                 ;304
000890  e594101c          LDR      r1,[r4,#0x1c]         ;304
000894  ebfffffe          BL       __aeabi_cdcmpeq
000898  0a000001          BEQ      |L1.2212|
                  |L1.2204|
00089c  e3e00001          MVN      r0,#1                 ;304
0008a0  eaffffe5          B        |L1.2108|
                  |L1.2212|
0008a4  e3a00000          MOV      r0,#0                 ;304
0008a8  eaffffe3          B        |L1.2108|
                  |L1.2220|
0008ac  e1a00000          MOV      r0,r0                 ;305
0008b0  e5991010          LDR      r1,[r9,#0x10]         ;307
0008b4  e5940010          LDR      r0,[r4,#0x10]         ;307
0008b8  ebfffffe          BL       strcmp
0008bc  e3500000          CMP      r0,#0                 ;307
0008c0  0a000001          BEQ      |L1.2252|
0008c4  e3e00002          MVN      r0,#2                 ;307
0008c8  eaffffdb          B        |L1.2108|
                  |L1.2252|
0008cc  e3a00000          MOV      r0,#0                 ;307
0008d0  eaffffd9          B        |L1.2108|
                  |L1.2260|
0008d4  e1a00000          MOV      r0,r0                 ;308
0008d8  e5944008          LDR      r4,[r4,#8]            ;309
0008dc  e5999008          LDR      r9,[r9,#8]            ;309
0008e0  ea000009          B        |L1.2316|
                  |L1.2276|
0008e4  e1a01009          MOV      r1,r9                 ;311
0008e8  e1a00004          MOV      r0,r4                 ;311
0008ec  ebfffffe          BL       cJSONUtils_Compare
0008f0  e1a05000          MOV      r5,r0                 ;311
0008f4  e3550000          CMP      r5,#0                 ;312
0008f8  0a000001          BEQ      |L1.2308|
0008fc  e1a00005          MOV      r0,r5                 ;314
000900  eaffffcd          B        |L1.2108|
                  |L1.2308|
000904  e5944000          LDR      r4,[r4,#0]            ;309
000908  e5999000          LDR      r9,[r9,#0]            ;309
                  |L1.2316|
00090c  e3540000          CMP      r4,#0                 ;309
000910  0a000001          BEQ      |L1.2332|
000914  e3590000          CMP      r9,#0                 ;309
000918  1afffff1          BNE      |L1.2276|
                  |L1.2332|
00091c  e3540000          CMP      r4,#0                 ;318
000920  1a000001          BNE      |L1.2348|
000924  e3590000          CMP      r9,#0                 ;318
000928  0a000001          BEQ      |L1.2356|
                  |L1.2348|
00092c  e3e00003          MVN      r0,#3                 ;318
000930  eaffffc1          B        |L1.2108|
                  |L1.2356|
000934  e3a00000          MOV      r0,#0                 ;318
000938  eaffffbf          B        |L1.2108|
                  |L1.2364|
00093c  e1a00000          MOV      r0,r0                 ;319
000940  e1a00004          MOV      r0,r4                 ;320
000944  ebfffffe          BL       cJSONUtils_SortObject
000948  e1a00009          MOV      r0,r9                 ;321
00094c  ebfffffe          BL       cJSONUtils_SortObject
000950  e5944008          LDR      r4,[r4,#8]            ;322
000954  e5999008          LDR      r9,[r9,#8]            ;323
000958  ea000012          B        |L1.2472|
                  |L1.2396|
00095c  e3a05000          MOV      r5,#0                 ;326
000960  e5991020          LDR      r1,[r9,#0x20]         ;328
000964  e5940020          LDR      r0,[r4,#0x20]         ;328
000968  ebfffffe          BL       cJSONUtils_strcasecmp
00096c  e3500000          CMP      r0,#0                 ;328
000970  0a000001          BEQ      |L1.2428|
000974  e3e00005          MVN      r0,#5                 ;331
000978  eaffffaf          B        |L1.2108|
                  |L1.2428|
00097c  e1a01009          MOV      r1,r9                 ;333
000980  e1a00004          MOV      r0,r4                 ;333
000984  ebfffffe          BL       cJSONUtils_Compare
000988  e1a05000          MOV      r5,r0                 ;333
00098c  e3550000          CMP      r5,#0                 ;334
000990  0a000001          BEQ      |L1.2460|
000994  e1a00005          MOV      r0,r5                 ;336
000998  eaffffa7          B        |L1.2108|
                  |L1.2460|
00099c  e5944000          LDR      r4,[r4,#0]            ;338
0009a0  e5999000          LDR      r9,[r9,#0]            ;339
0009a4  e1a00000          MOV      r0,r0                 ;340
                  |L1.2472|
0009a8  e3540000          CMP      r4,#0                 ;324
0009ac  0a000001          BEQ      |L1.2488|
0009b0  e3590000          CMP      r9,#0                 ;324
0009b4  1affffe8          BNE      |L1.2396|
                  |L1.2488|
0009b8  e3540000          CMP      r4,#0                 ;342
0009bc  1a000001          BNE      |L1.2504|
0009c0  e3590000          CMP      r9,#0                 ;342
0009c4  0a000001          BEQ      |L1.2512|
                  |L1.2504|
0009c8  e3e00004          MVN      r0,#4                 ;342
0009cc  eaffff9a          B        |L1.2108|
                  |L1.2512|
0009d0  e3a00000          MOV      r0,#0                 ;342
0009d4  eaffff98          B        |L1.2108|
                  |L1.2520|
0009d8  e1a00000          MOV      r0,r0                 ;344
0009dc  e1a00000          MOV      r0,r0                 ;345
0009e0  e1a00000          MOV      r0,r0                 ;345
0009e4  e3a00000          MOV      r0,#0                 ;348
0009e8  eaffff93          B        |L1.2108|
;;;350    
                          ENDP

                  cJSONUtils_ApplyPatch PROC
;;;351    static int cJSONUtils_ApplyPatch(cJSON *object, cJSON *patch)
0009ec  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;352    {
0009f0  e24dd00c          SUB      sp,sp,#0xc
0009f4  e1a0b001          MOV      r11,r1
;;;353        cJSON *op = NULL;
0009f8  e3a05000          MOV      r5,#0
;;;354        cJSON *path = NULL;
0009fc  e3a08000          MOV      r8,#0
;;;355        cJSON *value = NULL;
000a00  e3a06000          MOV      r6,#0
;;;356        cJSON *parent = NULL;
000a04  e3a09000          MOV      r9,#0
;;;357        int opcode = 0;
000a08  e3a04000          MOV      r4,#0
;;;358        unsigned char *parentptr = NULL;
000a0c  e3a00000          MOV      r0,#0
000a10  e58d0008          STR      r0,[sp,#8]
;;;359        unsigned char *childptr = NULL;
000a14  e3a07000          MOV      r7,#0
;;;360    
;;;361        op = cJSON_GetObjectItem(patch, "op");
000a18  e28f1fbe          ADR      r1,|L1.3352|
000a1c  e1a0000b          MOV      r0,r11
000a20  ebfffffe          BL       cJSON_GetObjectItem
000a24  e1a05000          MOV      r5,r0
;;;362        path = cJSON_GetObjectItem(patch, "path");
000a28  e28f1fbb          ADR      r1,|L1.3356|
000a2c  e1a0000b          MOV      r0,r11
000a30  ebfffffe          BL       cJSON_GetObjectItem
000a34  e1a08000          MOV      r8,r0
;;;363        if (!op || !path)
000a38  e3550000          CMP      r5,#0
000a3c  0a000001          BEQ      |L1.2632|
000a40  e3580000          CMP      r8,#0
000a44  1a000002          BNE      |L1.2644|
                  |L1.2632|
;;;364        {
;;;365            /* malformed patch. */
;;;366            return 2;
000a48  e3a00002          MOV      r0,#2
                  |L1.2636|
000a4c  e28dd014          ADD      sp,sp,#0x14
;;;367        }
;;;368    
;;;369        /* decode operation */
;;;370        if (!strcmp(op->valuestring, "add"))
;;;371        {
;;;372            opcode = 0;
;;;373        }
;;;374        else if (!strcmp(op->valuestring, "remove"))
;;;375        {
;;;376            opcode = 1;
;;;377        }
;;;378        else if (!strcmp(op->valuestring, "replace"))
;;;379        {
;;;380            opcode = 2;
;;;381        }
;;;382        else if (!strcmp(op->valuestring, "move"))
;;;383        {
;;;384            opcode = 3;
;;;385        }
;;;386        else if (!strcmp(op->valuestring, "copy"))
;;;387        {
;;;388            opcode = 4;
;;;389        }
;;;390        else if (!strcmp(op->valuestring, "test"))
;;;391        {
;;;392            /* compare value: {...} with the given path */
;;;393            return cJSONUtils_Compare(cJSONUtils_GetPointer(object, path->valuestring), cJSON_GetObjectItem(patch, "value"));
;;;394        }
;;;395        else
;;;396        {
;;;397            /* unknown opcode. */
;;;398            return 3;
;;;399        }
;;;400    
;;;401        /* Remove/Replace */
;;;402        if ((opcode == 1) || (opcode == 2))
;;;403        {
;;;404            /* Get rid of old. */
;;;405            cJSON_Delete(cJSONUtils_PatchDetach(object, (unsigned char*)path->valuestring));
;;;406            if (opcode == 1)
;;;407            {
;;;408                /* For Remove, this is job done. */
;;;409                return 0;
;;;410            }
;;;411        }
;;;412    
;;;413        /* Copy/Move uses "from". */
;;;414        if ((opcode == 3) || (opcode == 4))
;;;415        {
;;;416            cJSON *from = cJSON_GetObjectItem(patch, "from");
;;;417            if (!from)
;;;418            {
;;;419                /* missing "from" for copy/move. */
;;;420                return 4;
;;;421            }
;;;422    
;;;423            if (opcode == 3)
;;;424            {
;;;425                /* move */
;;;426                value = cJSONUtils_PatchDetach(object, (unsigned char*)from->valuestring);
;;;427            }
;;;428            if (opcode == 4)
;;;429            {
;;;430                /* copy */
;;;431                value = cJSONUtils_GetPointer(object, from->valuestring);
;;;432            }
;;;433            if (!value)
;;;434            {
;;;435                /* missing "from" for copy/move. */
;;;436                return 5;
;;;437            }
;;;438            if (opcode == 4)
;;;439            {
;;;440                value = cJSON_Duplicate(value, 1);
;;;441            }
;;;442            if (!value)
;;;443            {
;;;444                /* out of memory for copy/move. */
;;;445                return 6;
;;;446            }
;;;447        }
;;;448        else /* Add/Replace uses "value". */
;;;449        {
;;;450            value = cJSON_GetObjectItem(patch, "value");
;;;451            if (!value)
;;;452            {
;;;453                /* missing "value" for add/replace. */
;;;454                return 7;
;;;455            }
;;;456            value = cJSON_Duplicate(value, 1);
;;;457            if (!value)
;;;458            {
;;;459                /* out of memory for add/replace. */
;;;460                return 8;
;;;461            }
;;;462        }
;;;463    
;;;464        /* Now, just add "value" to "path". */
;;;465    
;;;466        /* split pointer in parent and child */
;;;467        parentptr = cJSONUtils_strdup((unsigned char*)path->valuestring);
;;;468        childptr = (unsigned char*)strrchr((char*)parentptr, '/');
;;;469        if (childptr)
;;;470        {
;;;471            *childptr++ = '\0';
;;;472        }
;;;473        parent = cJSONUtils_GetPointer(object, (char*)parentptr);
;;;474        cJSONUtils_InplaceDecodePointerString(childptr);
;;;475    
;;;476        /* add, remove, replace, move, copy, test. */
;;;477        if (!parent)
;;;478        {
;;;479            /* Couldn't find object to add to. */
;;;480            vPortFree(parentptr);
;;;481            cJSON_Delete(value);
;;;482            return 9;
;;;483        }
;;;484        else if ((parent->type & 0xFF) == cJSON_Array)
;;;485        {
;;;486            if (!strcmp((char*)childptr, "-"))
;;;487            {
;;;488                cJSON_AddItemToArray(parent, value);
;;;489            }
;;;490            else
;;;491            {
;;;492                cJSON_InsertItemInArray(parent, atoi((char*)childptr), value);
;;;493            }
;;;494        }
;;;495        else if ((parent->type & 0xFF) == cJSON_Object)
;;;496        {
;;;497            cJSON_DeleteItemFromObject(parent, (char*)childptr);
;;;498            cJSON_AddItemToObject(parent, (char*)childptr, value);
;;;499        }
;;;500        else
;;;501        {
;;;502            cJSON_Delete(value);
;;;503        }
;;;504        vPortFree(parentptr);
;;;505    
;;;506        return 0;
;;;507    }
000a50  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2644|
000a54  e28f1fb2          ADR      r1,|L1.3364|
000a58  e5950010          LDR      r0,[r5,#0x10]         ;370
000a5c  ebfffffe          BL       strcmp
000a60  e3500000          CMP      r0,#0                 ;370
000a64  1a000001          BNE      |L1.2672|
000a68  e3a04000          MOV      r4,#0                 ;372
000a6c  ea00002d          B        |L1.2856|
                  |L1.2672|
000a70  e28f1e2b          ADR      r1,|L1.3368|
000a74  e5950010          LDR      r0,[r5,#0x10]         ;374
000a78  ebfffffe          BL       strcmp
000a7c  e3500000          CMP      r0,#0                 ;374
000a80  1a000001          BNE      |L1.2700|
000a84  e3a04001          MOV      r4,#1                 ;376
000a88  ea000026          B        |L1.2856|
                  |L1.2700|
000a8c  e28f1fa7          ADR      r1,|L1.3376|
000a90  e5950010          LDR      r0,[r5,#0x10]         ;378
000a94  ebfffffe          BL       strcmp
000a98  e3500000          CMP      r0,#0                 ;378
000a9c  1a000001          BNE      |L1.2728|
000aa0  e3a04002          MOV      r4,#2                 ;380
000aa4  ea00001f          B        |L1.2856|
                  |L1.2728|
000aa8  e28f1fa2          ADR      r1,|L1.3384|
000aac  e5950010          LDR      r0,[r5,#0x10]         ;382
000ab0  ebfffffe          BL       strcmp
000ab4  e3500000          CMP      r0,#0                 ;382
000ab8  1a000001          BNE      |L1.2756|
000abc  e3a04003          MOV      r4,#3                 ;384
000ac0  ea000018          B        |L1.2856|
                  |L1.2756|
000ac4  e28f1f9d          ADR      r1,|L1.3392|
000ac8  e5950010          LDR      r0,[r5,#0x10]         ;386
000acc  ebfffffe          BL       strcmp
000ad0  e3500000          CMP      r0,#0                 ;386
000ad4  1a000001          BNE      |L1.2784|
000ad8  e3a04004          MOV      r4,#4                 ;388
000adc  ea000011          B        |L1.2856|
                  |L1.2784|
000ae0  e28f1e26          ADR      r1,|L1.3400|
000ae4  e5950010          LDR      r0,[r5,#0x10]         ;390
000ae8  ebfffffe          BL       strcmp
000aec  e3500000          CMP      r0,#0                 ;390
000af0  1a00000a          BNE      |L1.2848|
000af4  e28f1f95          ADR      r1,|L1.3408|
000af8  e1a0000b          MOV      r0,r11                ;393
000afc  ebfffffe          BL       cJSON_GetObjectItem
000b00  e1a0a000          MOV      r10,r0                ;393
000b04  e5981010          LDR      r1,[r8,#0x10]         ;393
000b08  e59d000c          LDR      r0,[sp,#0xc]          ;393
000b0c  ebfffffe          BL       cJSONUtils_GetPointer
000b10  e1a0100a          MOV      r1,r10                ;393
000b14  e58d0004          STR      r0,[sp,#4]            ;393
000b18  ebfffffe          BL       cJSONUtils_Compare
000b1c  eaffffca          B        |L1.2636|
                  |L1.2848|
000b20  e3a00003          MOV      r0,#3                 ;398
000b24  eaffffc8          B        |L1.2636|
                  |L1.2856|
000b28  e3540001          CMP      r4,#1                 ;402
000b2c  0a000001          BEQ      |L1.2872|
000b30  e3540002          CMP      r4,#2                 ;402
000b34  1a000008          BNE      |L1.2908|
                  |L1.2872|
000b38  e5981010          LDR      r1,[r8,#0x10]         ;405
000b3c  e59d000c          LDR      r0,[sp,#0xc]          ;405
000b40  ebfffffe          BL       cJSONUtils_PatchDetach
000b44  e1a0a000          MOV      r10,r0                ;405
000b48  ebfffffe          BL       cJSON_Delete
000b4c  e3540001          CMP      r4,#1                 ;406
000b50  1a000001          BNE      |L1.2908|
000b54  e3a00000          MOV      r0,#0                 ;409
000b58  eaffffbb          B        |L1.2636|
                  |L1.2908|
000b5c  e3540003          CMP      r4,#3                 ;414
000b60  0a000001          BEQ      |L1.2924|
000b64  e3540004          CMP      r4,#4                 ;414
000b68  1a000022          BNE      |L1.3064|
                  |L1.2924|
000b6c  e28f1f79          ADR      r1,|L1.3416|
000b70  e1a0000b          MOV      r0,r11                ;416
000b74  ebfffffe          BL       cJSON_GetObjectItem
000b78  e1a0a000          MOV      r10,r0                ;416
000b7c  e35a0000          CMP      r10,#0                ;417
000b80  1a000001          BNE      |L1.2956|
000b84  e3a00004          MOV      r0,#4                 ;420
000b88  eaffffaf          B        |L1.2636|
                  |L1.2956|
000b8c  e3540003          CMP      r4,#3                 ;423
000b90  1a000003          BNE      |L1.2980|
000b94  e59a1010          LDR      r1,[r10,#0x10]        ;426
000b98  e59d000c          LDR      r0,[sp,#0xc]          ;426
000b9c  ebfffffe          BL       cJSONUtils_PatchDetach
000ba0  e1a06000          MOV      r6,r0                 ;426
                  |L1.2980|
000ba4  e3540004          CMP      r4,#4                 ;428
000ba8  1a000003          BNE      |L1.3004|
000bac  e59a1010          LDR      r1,[r10,#0x10]        ;431
000bb0  e59d000c          LDR      r0,[sp,#0xc]          ;431
000bb4  ebfffffe          BL       cJSONUtils_GetPointer
000bb8  e1a06000          MOV      r6,r0                 ;431
                  |L1.3004|
000bbc  e3560000          CMP      r6,#0                 ;433
000bc0  1a000001          BNE      |L1.3020|
000bc4  e3a00005          MOV      r0,#5                 ;436
000bc8  eaffff9f          B        |L1.2636|
                  |L1.3020|
000bcc  e3540004          CMP      r4,#4                 ;438
000bd0  1a000003          BNE      |L1.3044|
000bd4  e3a01001          MOV      r1,#1                 ;440
000bd8  e1a00006          MOV      r0,r6                 ;440
000bdc  ebfffffe          BL       cJSON_Duplicate
000be0  e1a06000          MOV      r6,r0                 ;440
                  |L1.3044|
000be4  e3560000          CMP      r6,#0                 ;442
000be8  1a000001          BNE      |L1.3060|
000bec  e3a00006          MOV      r0,#6                 ;445
000bf0  eaffff95          B        |L1.2636|
                  |L1.3060|
000bf4  ea00000f          B        |L1.3128|
                  |L1.3064|
000bf8  e28f1e15          ADR      r1,|L1.3408|
000bfc  e1a0000b          MOV      r0,r11                ;450
000c00  ebfffffe          BL       cJSON_GetObjectItem
000c04  e1a06000          MOV      r6,r0                 ;450
000c08  e3560000          CMP      r6,#0                 ;451
000c0c  1a000001          BNE      |L1.3096|
000c10  e3a00007          MOV      r0,#7                 ;454
000c14  eaffff8c          B        |L1.2636|
                  |L1.3096|
000c18  e3a01001          MOV      r1,#1                 ;456
000c1c  e1a00006          MOV      r0,r6                 ;456
000c20  ebfffffe          BL       cJSON_Duplicate
000c24  e1a06000          MOV      r6,r0                 ;456
000c28  e3560000          CMP      r6,#0                 ;457
000c2c  1a000001          BNE      |L1.3128|
000c30  e3a00008          MOV      r0,#8                 ;460
000c34  eaffff84          B        |L1.2636|
                  |L1.3128|
000c38  e5980010          LDR      r0,[r8,#0x10]         ;467
000c3c  ebfffffe          BL       cJSONUtils_strdup
000c40  e58d0008          STR      r0,[sp,#8]            ;467
000c44  e3a0102f          MOV      r1,#0x2f              ;468
000c48  e59d0008          LDR      r0,[sp,#8]            ;468
000c4c  ebfffffe          BL       strrchr
000c50  e1a07000          MOV      r7,r0                 ;468
000c54  e3570000          CMP      r7,#0                 ;469
000c58  0a000001          BEQ      |L1.3172|
000c5c  e3a00000          MOV      r0,#0                 ;471
000c60  e4c70001          STRB     r0,[r7],#1            ;471
                  |L1.3172|
000c64  e59d000c          LDR      r0,[sp,#0xc]          ;473
000c68  e59d1008          LDR      r1,[sp,#8]            ;473
000c6c  ebfffffe          BL       cJSONUtils_GetPointer
000c70  e1a09000          MOV      r9,r0                 ;473
000c74  e1a00007          MOV      r0,r7                 ;474
000c78  ebfffffe          BL       cJSONUtils_InplaceDecodePointerString
000c7c  e3590000          CMP      r9,#0                 ;477
000c80  1a000005          BNE      |L1.3228|
000c84  e59d0008          LDR      r0,[sp,#8]            ;480
000c88  ebfffffe          BL       vPortFree
000c8c  e1a00006          MOV      r0,r6                 ;481
000c90  ebfffffe          BL       cJSON_Delete
000c94  e3a00009          MOV      r0,#9                 ;482
000c98  eaffff6b          B        |L1.2636|
                  |L1.3228|
000c9c  e5d9000c          LDRB     r0,[r9,#0xc]          ;484
000ca0  e3500020          CMP      r0,#0x20              ;484
000ca4  1a000010          BNE      |L1.3308|
000ca8  e28f10b0          ADR      r1,|L1.3424|
000cac  e1a00007          MOV      r0,r7                 ;486
000cb0  ebfffffe          BL       strcmp
000cb4  e3500000          CMP      r0,#0                 ;486
000cb8  1a000003          BNE      |L1.3276|
000cbc  e1a01006          MOV      r1,r6                 ;488
000cc0  e1a00009          MOV      r0,r9                 ;488
000cc4  ebfffffe          BL       cJSON_AddItemToArray
000cc8  ea000027          B        |L1.3436|
                  |L1.3276|
000ccc  e1a00007          MOV      r0,r7                 ;492
000cd0  ebfffffe          BL       atoi
000cd4  e1a0a000          MOV      r10,r0                ;492
000cd8  e1a02006          MOV      r2,r6                 ;492
000cdc  e1a0100a          MOV      r1,r10                ;492
000ce0  e1a00009          MOV      r0,r9                 ;492
000ce4  ebfffffe          BL       cJSON_InsertItemInArray
000ce8  ea00001f          B        |L1.3436|
                  |L1.3308|
000cec  e5d9000c          LDRB     r0,[r9,#0xc]          ;495
000cf0  e3500040          CMP      r0,#0x40              ;495
000cf4  1a00001a          BNE      |L1.3428|
000cf8  e1a01007          MOV      r1,r7                 ;497
000cfc  e1a00009          MOV      r0,r9                 ;497
000d00  ebfffffe          BL       cJSON_DeleteItemFromObject
000d04  e1a02006          MOV      r2,r6                 ;498
000d08  e1a01007          MOV      r1,r7                 ;498
000d0c  e1a00009          MOV      r0,r9                 ;498
000d10  ebfffffe          BL       cJSON_AddItemToObject
000d14  ea000014          B        |L1.3436|
                  |L1.3352|
000d18  6f7000            DCB      "op",0
000d1b  00                DCB      0
                  |L1.3356|
000d1c  70617468          DCB      "path",0
000d20  00      
000d21  00                DCB      0
000d22  00                DCB      0
000d23  00                DCB      0
                  |L1.3364|
000d24  61646400          DCB      "add",0
                  |L1.3368|
000d28  72656d6f          DCB      "remove",0
000d2c  766500  
000d2f  00                DCB      0
                  |L1.3376|
000d30  7265706c          DCB      "replace",0
000d34  61636500
                  |L1.3384|
000d38  6d6f7665          DCB      "move",0
000d3c  00      
000d3d  00                DCB      0
000d3e  00                DCB      0
000d3f  00                DCB      0
                  |L1.3392|
000d40  636f7079          DCB      "copy",0
000d44  00      
000d45  00                DCB      0
000d46  00                DCB      0
000d47  00                DCB      0
                  |L1.3400|
000d48  74657374          DCB      "test",0
000d4c  00      
000d4d  00                DCB      0
000d4e  00                DCB      0
000d4f  00                DCB      0
                  |L1.3408|
000d50  76616c75          DCB      "value",0
000d54  6500    
000d56  00                DCB      0
000d57  00                DCB      0
                  |L1.3416|
000d58  66726f6d          DCB      "from",0
000d5c  00      
000d5d  00                DCB      0
000d5e  00                DCB      0
000d5f  00                DCB      0
                  |L1.3424|
000d60  2d00              DCB      "-",0
000d62  00                DCB      0
000d63  00                DCB      0
                  |L1.3428|
000d64  e1a00006          MOV      r0,r6                 ;502
000d68  ebfffffe          BL       cJSON_Delete
                  |L1.3436|
000d6c  e59d0008          LDR      r0,[sp,#8]            ;504
000d70  ebfffffe          BL       vPortFree
000d74  e3a00000          MOV      r0,#0                 ;506
000d78  eaffff33          B        |L1.2636|
;;;508    
                          ENDP

                  cJSONUtils_ApplyPatches PROC
;;;509    int cJSONUtils_ApplyPatches(cJSON *object, cJSON *patches)
000d7c  e92d4070          PUSH     {r4-r6,lr}
;;;510    {
000d80  e1a05000          MOV      r5,r0
000d84  e1a04001          MOV      r4,r1
;;;511        int err = 0;
000d88  e3a06000          MOV      r6,#0
;;;512    
;;;513        if (patches == NULL)
000d8c  e3540000          CMP      r4,#0
000d90  1a000001          BNE      |L1.3484|
;;;514        {
;;;515            return 1;
000d94  e3a00001          MOV      r0,#1
                  |L1.3480|
;;;516        }
;;;517    
;;;518        if ((patches->type & 0xFF) != cJSON_Array)
;;;519        {
;;;520            /* malformed patches. */
;;;521            return 1;
;;;522        }
;;;523        if (patches)
;;;524        {
;;;525            patches = patches->child;
;;;526        }
;;;527        while (patches)
;;;528        {
;;;529            if ((err = cJSONUtils_ApplyPatch(object, patches)))
;;;530            {
;;;531                return err;
;;;532            }
;;;533            patches = patches->next;
;;;534        }
;;;535    
;;;536        return 0;
;;;537    }
000d98  e8bd8070          POP      {r4-r6,pc}
                  |L1.3484|
000d9c  e5d4000c          LDRB     r0,[r4,#0xc]          ;518
000da0  e3500020          CMP      r0,#0x20              ;518
000da4  0a000001          BEQ      |L1.3504|
000da8  e3a00001          MOV      r0,#1                 ;521
000dac  eafffff9          B        |L1.3480|
                  |L1.3504|
000db0  e3540000          CMP      r4,#0                 ;523
000db4  0a000000          BEQ      |L1.3516|
000db8  e5944008          LDR      r4,[r4,#8]            ;525
                  |L1.3516|
000dbc  ea000007          B        |L1.3552|
                  |L1.3520|
000dc0  e1a01004          MOV      r1,r4                 ;529
000dc4  e1a00005          MOV      r0,r5                 ;529
000dc8  ebfffffe          BL       cJSONUtils_ApplyPatch
000dcc  e1b06000          MOVS     r6,r0                 ;529
000dd0  0a000001          BEQ      |L1.3548|
000dd4  e1a00006          MOV      r0,r6                 ;531
000dd8  eaffffee          B        |L1.3480|
                  |L1.3548|
000ddc  e5944000          LDR      r4,[r4,#0]            ;533
                  |L1.3552|
000de0  e3540000          CMP      r4,#0                 ;527
000de4  1afffff5          BNE      |L1.3520|
000de8  e3a00000          MOV      r0,#0                 ;536
000dec  eaffffe9          B        |L1.3480|
;;;538    
                          ENDP

                  cJSONUtils_GeneratePatch PROC
;;;539    static void cJSONUtils_GeneratePatch(cJSON *patches, const unsigned char *op, const unsigned char *path, const unsigned char *suffix, cJSON *val)
000df0  e92d4ff8          PUSH     {r3-r11,lr}
;;;540    {
000df4  e1a09000          MOV      r9,r0
000df8  e1a05001          MOV      r5,r1
000dfc  e1a06002          MOV      r6,r2
000e00  e1a04003          MOV      r4,r3
000e04  e59d7028          LDR      r7,[sp,#0x28]
;;;541        cJSON *patch = cJSON_CreateObject();
000e08  ebfffffe          BL       cJSON_CreateObject
000e0c  e58d0000          STR      r0,[sp,#0]
;;;542        cJSON_AddItemToObject(patch, "op", cJSON_CreateString((const char*)op));
000e10  e1a00005          MOV      r0,r5
000e14  ebfffffe          BL       cJSON_CreateString
000e18  e1a08000          MOV      r8,r0
000e1c  e1a02008          MOV      r2,r8
000e20  e24f1e11          ADR      r1,|L1.3352|
000e24  e59d0000          LDR      r0,[sp,#0]
000e28  ebfffffe          BL       cJSON_AddItemToObject
;;;543        if (suffix)
000e2c  e3540000          CMP      r4,#0
000e30  0a00001b          BEQ      |L1.3748|
;;;544        {
;;;545            unsigned char *newpath = (unsigned char*)(uint8_t *)pvPortMalloc(strlen((const char*)path) + cJSONUtils_PointerEncodedstrlen(suffix) + 2);
000e34  e1a00006          MOV      r0,r6
000e38  ebfffffe          BL       strlen
000e3c  e1a0b000          MOV      r11,r0
000e40  e1a00004          MOV      r0,r4
000e44  ebfffffe          BL       cJSONUtils_PointerEncodedstrlen
000e48  e080000b          ADD      r0,r0,r11
000e4c  e280a002          ADD      r10,r0,#2
000e50  e1a0000a          MOV      r0,r10
000e54  ebfffffe          BL       pvPortMalloc
000e58  e1a08000          MOV      r8,r0
;;;546            cJSONUtils_PointerEncodedstrcpy(newpath + sprintf((char*)newpath, "%s/", (const char*)path), suffix);
000e5c  e1a02006          MOV      r2,r6
000e60  e28f1e2e          ADR      r1,|L1.4424|
000e64  e1a00008          MOV      r0,r8
000e68  ebfffffe          BL       __2sprintf
000e6c  e080a008          ADD      r10,r0,r8
000e70  e1a01004          MOV      r1,r4
000e74  e1a0000a          MOV      r0,r10
000e78  ebfffffe          BL       cJSONUtils_PointerEncodedstrcpy
;;;547            cJSON_AddItemToObject(patch, "path", cJSON_CreateString((const char*)newpath));
000e7c  e1a00008          MOV      r0,r8
000e80  ebfffffe          BL       cJSON_CreateString
000e84  e1a0a000          MOV      r10,r0
000e88  e1a0200a          MOV      r2,r10
000e8c  e24f1f5e          ADR      r1,|L1.3356|
000e90  e59d0000          LDR      r0,[sp,#0]
000e94  ebfffffe          BL       cJSON_AddItemToObject
;;;548            vPortFree(newpath);
000e98  e1a00008          MOV      r0,r8
000e9c  ebfffffe          BL       vPortFree
;;;549        }
000ea0  ea000006          B        |L1.3776|
                  |L1.3748|
;;;550        else
;;;551        {
;;;552            cJSON_AddItemToObject(patch, "path", cJSON_CreateString((const char*)path));
000ea4  e1a00006          MOV      r0,r6
000ea8  ebfffffe          BL       cJSON_CreateString
000eac  e1a08000          MOV      r8,r0
000eb0  e1a02008          MOV      r2,r8
000eb4  e24f1e1a          ADR      r1,|L1.3356|
000eb8  e59d0000          LDR      r0,[sp,#0]
000ebc  ebfffffe          BL       cJSON_AddItemToObject
                  |L1.3776|
;;;553        }
;;;554        if (val)
000ec0  e3570000          CMP      r7,#0
000ec4  0a000007          BEQ      |L1.3816|
;;;555        {
;;;556            cJSON_AddItemToObject(patch, "value", cJSON_Duplicate(val, 1));
000ec8  e3a01001          MOV      r1,#1
000ecc  e1a00007          MOV      r0,r7
000ed0  ebfffffe          BL       cJSON_Duplicate
000ed4  e1a08000          MOV      r8,r0
000ed8  e1a02008          MOV      r2,r8
000edc  e24f1f65          ADR      r1,|L1.3408|
000ee0  e59d0000          LDR      r0,[sp,#0]
000ee4  ebfffffe          BL       cJSON_AddItemToObject
                  |L1.3816|
;;;557        }
;;;558        cJSON_AddItemToArray(patches, patch);
000ee8  e1a00009          MOV      r0,r9
000eec  e59d1000          LDR      r1,[sp,#0]
000ef0  ebfffffe          BL       cJSON_AddItemToArray
;;;559    }
000ef4  e8bd8ff8          POP      {r3-r11,pc}
;;;560    
                          ENDP

                  cJSONUtils_AddPatchToArray PROC
;;;561    void cJSONUtils_AddPatchToArray(cJSON *array, const char *op, const char *path, cJSON *val)
000ef8  e92d40f8          PUSH     {r3-r7,lr}
;;;562    {
000efc  e1a05000          MOV      r5,r0
000f00  e1a06001          MOV      r6,r1
000f04  e1a07002          MOV      r7,r2
000f08  e1a04003          MOV      r4,r3
;;;563        cJSONUtils_GeneratePatch(array, (const unsigned char*)op, (const unsigned char*)path, 0, val);
000f0c  e3a03000          MOV      r3,#0
000f10  e1a02007          MOV      r2,r7
000f14  e1a01006          MOV      r1,r6
000f18  e1a00005          MOV      r0,r5
000f1c  e58d4000          STR      r4,[sp,#0]
000f20  ebfffffe          BL       cJSONUtils_GeneratePatch
;;;564    }
000f24  e8bd80f8          POP      {r3-r7,pc}
;;;565    
                          ENDP

                  cJSONUtils_CompareToPatch PROC
;;;566    static void cJSONUtils_CompareToPatch(cJSON *patches, const unsigned char *path, cJSON *from, cJSON *to)
000f28  e92d4fff          PUSH     {r0-r11,lr}
;;;567    {
000f2c  e24dd004          SUB      sp,sp,#4
000f30  e1a0a001          MOV      r10,r1
000f34  e1a09002          MOV      r9,r2
000f38  e1a04003          MOV      r4,r3
;;;568        if ((from == NULL) || (to == NULL))
000f3c  e3590000          CMP      r9,#0
000f40  0a000001          BEQ      |L1.3916|
000f44  e3540000          CMP      r4,#0
000f48  1a000001          BNE      |L1.3924|
                  |L1.3916|
;;;569        {
;;;570            return;
;;;571        }
;;;572    
;;;573        if ((from->type & 0xFF) != (to->type & 0xFF))
;;;574        {
;;;575            cJSONUtils_GeneratePatch(patches, (const unsigned char*)"replace", path, 0, to);
;;;576            return;
;;;577        }
;;;578    
;;;579        switch ((from->type & 0xFF))
;;;580        {
;;;581            case cJSON_Number:
;;;582                if ((from->valueint != to->valueint) || (from->valuedouble != to->valuedouble))
;;;583                {
;;;584                    cJSONUtils_GeneratePatch(patches, (const unsigned char*)"replace", path, 0, to);
;;;585                }
;;;586                return;
;;;587    
;;;588            case cJSON_String:
;;;589                if (strcmp(from->valuestring, to->valuestring) != 0)
;;;590                {
;;;591                    cJSONUtils_GeneratePatch(patches, (const unsigned char*)"replace", path, 0, to);
;;;592                }
;;;593                return;
;;;594    
;;;595            case cJSON_Array:
;;;596            {
;;;597                size_t c = 0;
;;;598                unsigned char *newpath = (unsigned char*)(uint8_t *)pvPortMalloc(strlen((const char*)path) + 23); /* Allow space for 64bit int. */
;;;599                /* generate patches for all array elements that exist in "from" and "to" */
;;;600                for (c = 0, from = from->child, to = to->child; from && to; from = from->next, to = to->next, c++)
;;;601                {
;;;602                    /* check if conversion to unsigned long is valid
;;;603                     * This should be eliminated at compile time by dead code elimination
;;;604                     * if size_t is an alias of unsigned long, or if it is bigger */
;;;605                    if (c > ULONG_MAX)
;;;606                    {
;;;607                        vPortFree(newpath);
;;;608                        return;
;;;609                    }
;;;610                    sprintf((char*)newpath, "%s/%lu", path, (unsigned long)c); /* path of the current array element */
;;;611                    cJSONUtils_CompareToPatch(patches, newpath, from, to);
;;;612                }
;;;613                /* remove leftover elements from 'from' that are not in 'to' */
;;;614                for (; from; from = from->next, c++)
;;;615                {
;;;616                    /* check if conversion to unsigned long is valid
;;;617                     * This should be eliminated at compile time by dead code elimination
;;;618                     * if size_t is an alias of unsigned long, or if it is bigger */
;;;619                    if (c > ULONG_MAX)
;;;620                    {
;;;621                        vPortFree(newpath);
;;;622                        return;
;;;623                    }
;;;624                    sprintf((char*)newpath, "%lu", (unsigned long)c);
;;;625                    cJSONUtils_GeneratePatch(patches, (const unsigned char*)"remove", path, newpath, 0);
;;;626                }
;;;627                /* add new elements in 'to' that were not in 'from' */
;;;628                for (; to; to = to->next, c++)
;;;629                {
;;;630                    cJSONUtils_GeneratePatch(patches, (const unsigned char*)"add", path, (const unsigned char*)"-", to);
;;;631                }
;;;632                vPortFree(newpath);
;;;633                return;
;;;634            }
;;;635    
;;;636            case cJSON_Object:
;;;637            {
;;;638                cJSON *a = NULL;
;;;639                cJSON *b = NULL;
;;;640                cJSONUtils_SortObject(from);
;;;641                cJSONUtils_SortObject(to);
;;;642    
;;;643                a = from->child;
;;;644                b = to->child;
;;;645                /* for all object values in the object with more of them */
;;;646                while (a || b)
;;;647                {
;;;648                    int diff = (!a) ? 1 : ((!b) ? -1 : cJSONUtils_strcasecmp((unsigned char*)a->string, (unsigned char*)b->string));
;;;649                    if (!diff)
;;;650                    {
;;;651                        /* both object keys are the same */
;;;652                        unsigned char *newpath = (unsigned char*)(uint8_t *)pvPortMalloc(strlen((const char*)path) + cJSONUtils_PointerEncodedstrlen((unsigned char*)a->string) + 2);
;;;653                        cJSONUtils_PointerEncodedstrcpy(newpath + sprintf((char*)newpath, "%s/", path), (unsigned char*)a->string);
;;;654                        /* create a patch for the element */
;;;655                        cJSONUtils_CompareToPatch(patches, newpath, a, b);
;;;656                        vPortFree(newpath);
;;;657                        a = a->next;
;;;658                        b = b->next;
;;;659                    }
;;;660                    else if (diff < 0)
;;;661                    {
;;;662                        /* object element doesn't exist in 'to' --> remove it */
;;;663                        cJSONUtils_GeneratePatch(patches, (const unsigned char*)"remove", path, (unsigned char*)a->string, 0);
;;;664                        a = a->next;
;;;665                    }
;;;666                    else
;;;667                    {
;;;668                        /* object element doesn't exist in 'from' --> add it */
;;;669                        cJSONUtils_GeneratePatch(patches, (const unsigned char*)"add", path, (unsigned char*)b->string, b);
;;;670                        b = b->next;
;;;671                    }
;;;672                }
;;;673                return;
;;;674            }
;;;675    
;;;676            default:
;;;677                break;
;;;678        }
;;;679    }
000f4c  e28dd014          ADD      sp,sp,#0x14
000f50  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.3924|
000f54  e5d9000c          LDRB     r0,[r9,#0xc]          ;573
000f58  e5d4100c          LDRB     r1,[r4,#0xc]          ;573
000f5c  e1500001          CMP      r0,r1                 ;573
000f60  0a000006          BEQ      |L1.3968|
000f64  e3a03000          MOV      r3,#0                 ;575
000f68  e1a0200a          MOV      r2,r10                ;575
000f6c  e24f1f91          ADR      r1,|L1.3376|
000f70  e58d4000          STR      r4,[sp,#0]            ;575
000f74  e59d0004          LDR      r0,[sp,#4]            ;575
000f78  ebfffffe          BL       cJSONUtils_GeneratePatch
000f7c  eafffff2          B        |L1.3916|
                  |L1.3968|
000f80  e5d9000c          LDRB     r0,[r9,#0xc]          ;579
000f84  e3500008          CMP      r0,#8                 ;579
000f88  0a000006          BEQ      |L1.4008|
000f8c  e3500010          CMP      r0,#0x10              ;579
000f90  0a000018          BEQ      |L1.4088|
000f94  e3500020          CMP      r0,#0x20              ;579
000f98  0a000023          BEQ      |L1.4140|
000f9c  e3500040          CMP      r0,#0x40              ;579
000fa0  1a0000ae          BNE      |L1.4704|
000fa4  ea00005d          B        |L1.4384|
                  |L1.4008|
000fa8  e1a00000          MOV      r0,r0                 ;581
000fac  e5990014          LDR      r0,[r9,#0x14]         ;582
000fb0  e5941014          LDR      r1,[r4,#0x14]         ;582
000fb4  e1500001          CMP      r0,r1                 ;582
000fb8  1a000007          BNE      |L1.4060|
000fbc  e594301c          LDR      r3,[r4,#0x1c]         ;582
000fc0  e5945018          LDR      r5,[r4,#0x18]         ;582
000fc4  e1a02005          MOV      r2,r5                 ;582
000fc8  e5997018          LDR      r7,[r9,#0x18]         ;582
000fcc  e1a00007          MOV      r0,r7                 ;582
000fd0  e599101c          LDR      r1,[r9,#0x1c]         ;582
000fd4  ebfffffe          BL       __aeabi_cdcmpeq
000fd8  0a000005          BEQ      |L1.4084|
                  |L1.4060|
000fdc  e3a03000          MOV      r3,#0                 ;584
000fe0  e1a0200a          MOV      r2,r10                ;584
000fe4  e24f1faf          ADR      r1,|L1.3376|
000fe8  e58d4000          STR      r4,[sp,#0]            ;584
000fec  e59d0004          LDR      r0,[sp,#4]            ;584
000ff0  ebfffffe          BL       cJSONUtils_GeneratePatch
                  |L1.4084|
000ff4  eaffffd4          B        |L1.3916|
                  |L1.4088|
000ff8  e1a00000          MOV      r0,r0                 ;588
000ffc  e5941010          LDR      r1,[r4,#0x10]         ;589
001000  e5990010          LDR      r0,[r9,#0x10]         ;589
001004  ebfffffe          BL       strcmp
001008  e3500000          CMP      r0,#0                 ;589
00100c  0a000005          BEQ      |L1.4136|
001010  e3a03000          MOV      r3,#0                 ;591
001014  e1a0200a          MOV      r2,r10                ;591
001018  e24f1e2f          ADR      r1,|L1.3376|
00101c  e58d4000          STR      r4,[sp,#0]            ;591
001020  e59d0004          LDR      r0,[sp,#4]            ;591
001024  ebfffffe          BL       cJSONUtils_GeneratePatch
                  |L1.4136|
001028  eaffffc7          B        |L1.3916|
                  |L1.4140|
00102c  e1a00000          MOV      r0,r0                 ;595
001030  e3a05000          MOV      r5,#0                 ;597
001034  e1a0000a          MOV      r0,r10                ;598
001038  ebfffffe          BL       strlen
00103c  e2807017          ADD      r7,r0,#0x17           ;598
001040  e1a00007          MOV      r0,r7                 ;598
001044  ebfffffe          BL       pvPortMalloc
001048  e1a06000          MOV      r6,r0                 ;598
00104c  e1a00000          MOV      r0,r0                 ;600
001050  e5999008          LDR      r9,[r9,#8]            ;600
001054  e5944008          LDR      r4,[r4,#8]            ;600
001058  ea00000d          B        |L1.4244|
                  |L1.4188|
00105c  e1a00000          MOV      r0,r0                 ;605
001060  e1a03005          MOV      r3,r5                 ;610
001064  e1a0200a          MOV      r2,r10                ;610
001068  e28f10dc          ADR      r1,|L1.4428|
00106c  e1a00006          MOV      r0,r6                 ;610
001070  ebfffffe          BL       __2sprintf
001074  e1a03004          MOV      r3,r4                 ;611
001078  e1a02009          MOV      r2,r9                 ;611
00107c  e1a01006          MOV      r1,r6                 ;611
001080  e59d0004          LDR      r0,[sp,#4]            ;611
001084  ebfffffe          BL       cJSONUtils_CompareToPatch
001088  e5999000          LDR      r9,[r9,#0]            ;600
00108c  e5944000          LDR      r4,[r4,#0]            ;600
001090  e2855001          ADD      r5,r5,#1              ;600
                  |L1.4244|
001094  e3590000          CMP      r9,#0                 ;600
001098  0a000001          BEQ      |L1.4260|
00109c  e3540000          CMP      r4,#0                 ;600
0010a0  1affffed          BNE      |L1.4188|
                  |L1.4260|
0010a4  ea00000d          B        |L1.4320|
                  |L1.4264|
0010a8  e1a00000          MOV      r0,r0                 ;619
0010ac  e1a02005          MOV      r2,r5                 ;624
0010b0  e28f109c          ADR      r1,|L1.4436|
0010b4  e1a00006          MOV      r0,r6                 ;624
0010b8  ebfffffe          BL       __2sprintf
0010bc  e3a00000          MOV      r0,#0                 ;625
0010c0  e1a03006          MOV      r3,r6                 ;625
0010c4  e1a0200a          MOV      r2,r10                ;625
0010c8  e24f1fea          ADR      r1,|L1.3368|
0010cc  e58d0000          STR      r0,[sp,#0]            ;625
0010d0  e59d0004          LDR      r0,[sp,#4]            ;625
0010d4  ebfffffe          BL       cJSONUtils_GeneratePatch
0010d8  e5999000          LDR      r9,[r9,#0]            ;614
0010dc  e2855001          ADD      r5,r5,#1              ;614
                  |L1.4320|
0010e0  e3590000          CMP      r9,#0                 ;614
0010e4  1affffef          BNE      |L1.4264|
0010e8  ea000007          B        |L1.4364|
                  |L1.4332|
0010ec  e24f3fe5          ADR      r3,|L1.3424|
0010f0  e1a0200a          MOV      r2,r10                ;630
0010f4  e24f1ff6          ADR      r1,|L1.3364|
0010f8  e58d4000          STR      r4,[sp,#0]            ;630
0010fc  e59d0004          LDR      r0,[sp,#4]            ;630
001100  ebfffffe          BL       cJSONUtils_GeneratePatch
001104  e5944000          LDR      r4,[r4,#0]            ;628
001108  e2855001          ADD      r5,r5,#1              ;628
                  |L1.4364|
00110c  e3540000          CMP      r4,#0                 ;628
001110  1afffff5          BNE      |L1.4332|
001114  e1a00006          MOV      r0,r6                 ;632
001118  ebfffffe          BL       vPortFree
00111c  eaffff8a          B        |L1.3916|
                  |L1.4384|
001120  e1a00000          MOV      r0,r0                 ;636
001124  e3a05000          MOV      r5,#0                 ;638
001128  e3a06000          MOV      r6,#0                 ;639
00112c  e1a00009          MOV      r0,r9                 ;640
001130  ebfffffe          BL       cJSONUtils_SortObject
001134  e1a00004          MOV      r0,r4                 ;641
001138  ebfffffe          BL       cJSONUtils_SortObject
00113c  e5995008          LDR      r5,[r9,#8]            ;643
001140  e5946008          LDR      r6,[r4,#8]            ;644
001144  ea000040          B        |L1.4684|
                  |L1.4424|
001148  25732f00          DCB      "%s/",0
                  |L1.4428|
00114c  25732f25          DCB      "%s/%lu",0
001150  6c7500  
001153  00                DCB      0
                  |L1.4436|
001154  256c7500          DCB      "%lu",0
                  |L1.4440|
001158  e3550000          CMP      r5,#0                 ;648
00115c  1a000001          BNE      |L1.4456|
001160  e3a00001          MOV      r0,#1                 ;648
001164  ea000006          B        |L1.4484|
                  |L1.4456|
001168  e3560000          CMP      r6,#0                 ;648
00116c  1a000001          BNE      |L1.4472|
001170  e3e00000          MVN      r0,#0                 ;648
001174  ea000002          B        |L1.4484|
                  |L1.4472|
001178  e5961020          LDR      r1,[r6,#0x20]         ;648
00117c  e5950020          LDR      r0,[r5,#0x20]         ;648
001180  ebfffffe          BL       cJSONUtils_strcasecmp
                  |L1.4484|
001184  e1a08000          MOV      r8,r0                 ;648
001188  e3580000          CMP      r8,#0                 ;649
00118c  1a00001b          BNE      |L1.4608|
001190  e1a0000a          MOV      r0,r10                ;652
001194  ebfffffe          BL       strlen
001198  e1a0b000          MOV      r11,r0                ;652
00119c  e5950020          LDR      r0,[r5,#0x20]         ;652
0011a0  ebfffffe          BL       cJSONUtils_PointerEncodedstrlen
0011a4  e080000b          ADD      r0,r0,r11             ;652
0011a8  e2800002          ADD      r0,r0,#2              ;652
0011ac  e58d0000          STR      r0,[sp,#0]            ;652
0011b0  ebfffffe          BL       pvPortMalloc
0011b4  e1a07000          MOV      r7,r0                 ;652
0011b8  e1a0200a          MOV      r2,r10                ;653
0011bc  e24f107c          ADR      r1,|L1.4424|
0011c0  e1a00007          MOV      r0,r7                 ;653
0011c4  ebfffffe          BL       __2sprintf
0011c8  e080b007          ADD      r11,r0,r7             ;653
0011cc  e1a0000b          MOV      r0,r11                ;653
0011d0  e5951020          LDR      r1,[r5,#0x20]         ;653
0011d4  ebfffffe          BL       cJSONUtils_PointerEncodedstrcpy
0011d8  e1a03006          MOV      r3,r6                 ;655
0011dc  e1a02005          MOV      r2,r5                 ;655
0011e0  e1a01007          MOV      r1,r7                 ;655
0011e4  e59d0004          LDR      r0,[sp,#4]            ;655
0011e8  ebfffffe          BL       cJSONUtils_CompareToPatch
0011ec  e1a00007          MOV      r0,r7                 ;656
0011f0  ebfffffe          BL       vPortFree
0011f4  e5955000          LDR      r5,[r5,#0]            ;657
0011f8  e5966000          LDR      r6,[r6,#0]            ;658
0011fc  ea000011          B        |L1.4680|
                  |L1.4608|
001200  e3580000          CMP      r8,#0                 ;660
001204  aa000008          BGE      |L1.4652|
001208  e3a00000          MOV      r0,#0                 ;663
00120c  e58d0000          STR      r0,[sp,#0]            ;663
001210  e1a0200a          MOV      r2,r10                ;663
001214  e59f12c0          LDR      r1,|L1.5340|
001218  e5953020          LDR      r3,[r5,#0x20]         ;663
00121c  e59d0004          LDR      r0,[sp,#4]            ;663
001220  ebfffffe          BL       cJSONUtils_GeneratePatch
001224  e5955000          LDR      r5,[r5,#0]            ;664
001228  ea000006          B        |L1.4680|
                  |L1.4652|
00122c  e58d6000          STR      r6,[sp,#0]            ;669
001230  e1a0200a          MOV      r2,r10                ;669
001234  e59f12a4          LDR      r1,|L1.5344|
001238  e5963020          LDR      r3,[r6,#0x20]         ;669
00123c  e59d0004          LDR      r0,[sp,#4]            ;669
001240  ebfffffe          BL       cJSONUtils_GeneratePatch
001244  e5966000          LDR      r6,[r6,#0]            ;670
                  |L1.4680|
001248  e1a00000          MOV      r0,r0                 ;672
                  |L1.4684|
00124c  e3550000          CMP      r5,#0                 ;646
001250  1affffc0          BNE      |L1.4440|
001254  e3560000          CMP      r6,#0                 ;646
001258  1affffbe          BNE      |L1.4440|
00125c  eaffff3a          B        |L1.3916|
                  |L1.4704|
001260  e1a00000          MOV      r0,r0                 ;676
001264  e1a00000          MOV      r0,r0                 ;677
001268  e1a00000          MOV      r0,r0                 ;677
00126c  e1a00000          MOV      r0,r0
001270  eaffff35          B        |L1.3916|
;;;680    
                          ENDP

                  cJSONUtils_GeneratePatches PROC
;;;681    cJSON* cJSONUtils_GeneratePatches(cJSON *from, cJSON *to)
001274  e92d4070          PUSH     {r4-r6,lr}
;;;682    {
001278  e1a04000          MOV      r4,r0
00127c  e1a05001          MOV      r5,r1
;;;683        cJSON *patches = cJSON_CreateArray();
001280  ebfffffe          BL       cJSON_CreateArray
001284  e1a06000          MOV      r6,r0
;;;684        cJSONUtils_CompareToPatch(patches, (const unsigned char*)"", from, to);
001288  e1a03005          MOV      r3,r5
00128c  e1a02004          MOV      r2,r4
001290  e28f1f93          ADR      r1,|L1.5348|
001294  e1a00006          MOV      r0,r6
001298  ebfffffe          BL       cJSONUtils_CompareToPatch
;;;685    
;;;686        return patches;
00129c  e1a00006          MOV      r0,r6
;;;687    }
0012a0  e8bd8070          POP      {r4-r6,pc}
;;;688    
                          ENDP

                  cJSONUtils_MergePatch PROC
;;;800    
;;;801    cJSON* cJSONUtils_MergePatch(cJSON *target, cJSON *patch)
0012a4  e92d41f0          PUSH     {r4-r8,lr}
;;;802    {
0012a8  e1a05000          MOV      r5,r0
0012ac  e1a04001          MOV      r4,r1
;;;803        if (!patch || ((patch->type & 0xFF) != cJSON_Object))
0012b0  e3540000          CMP      r4,#0
0012b4  0a000002          BEQ      |L1.4804|
0012b8  e5d4000c          LDRB     r0,[r4,#0xc]
0012bc  e3500040          CMP      r0,#0x40
0012c0  0a000005          BEQ      |L1.4828|
                  |L1.4804|
;;;804        {
;;;805            /* scalar value, array or NULL, just duplicate */
;;;806            cJSON_Delete(target);
0012c4  e1a00005          MOV      r0,r5
0012c8  ebfffffe          BL       cJSON_Delete
;;;807            return cJSON_Duplicate(patch, 1);
0012cc  e3a01001          MOV      r1,#1
0012d0  e1a00004          MOV      r0,r4
0012d4  ebfffffe          BL       cJSON_Duplicate
                  |L1.4824|
;;;808        }
;;;809    
;;;810        if (!target || ((target->type & 0xFF) != cJSON_Object))
;;;811        {
;;;812            cJSON_Delete(target);
;;;813            target = cJSON_CreateObject();
;;;814        }
;;;815    
;;;816        patch = patch->child;
;;;817        while (patch)
;;;818        {
;;;819            if ((patch->type & 0xFF) == cJSON_NULL)
;;;820            {
;;;821                /* NULL is the indicator to remove a value, see RFC7396 */
;;;822                cJSON_DeleteItemFromObject(target, patch->string);
;;;823            }
;;;824            else
;;;825            {
;;;826                cJSON *replaceme = cJSON_DetachItemFromObject(target, patch->string);
;;;827                cJSON_AddItemToObject(target, patch->string, cJSONUtils_MergePatch(replaceme, patch));
;;;828            }
;;;829            patch = patch->next;
;;;830        }
;;;831        return target;
;;;832    }
0012d8  e8bd81f0          POP      {r4-r8,pc}
                  |L1.4828|
0012dc  e3550000          CMP      r5,#0                 ;810
0012e0  0a000002          BEQ      |L1.4848|
0012e4  e5d5000c          LDRB     r0,[r5,#0xc]          ;810
0012e8  e3500040          CMP      r0,#0x40              ;810
0012ec  0a000003          BEQ      |L1.4864|
                  |L1.4848|
0012f0  e1a00005          MOV      r0,r5                 ;812
0012f4  ebfffffe          BL       cJSON_Delete
0012f8  ebfffffe          BL       cJSON_CreateObject
0012fc  e1a05000          MOV      r5,r0                 ;813
                  |L1.4864|
001300  e5944008          LDR      r4,[r4,#8]            ;816
001304  ea000014          B        |L1.4956|
                  |L1.4872|
001308  e5d4000c          LDRB     r0,[r4,#0xc]          ;819
00130c  e3500004          CMP      r0,#4                 ;819
001310  1a000003          BNE      |L1.4900|
001314  e1a00005          MOV      r0,r5                 ;822
001318  e5941020          LDR      r1,[r4,#0x20]         ;822
00131c  ebfffffe          BL       cJSON_DeleteItemFromObject
001320  ea00000c          B        |L1.4952|
                  |L1.4900|
001324  e1a00005          MOV      r0,r5                 ;826
001328  e5941020          LDR      r1,[r4,#0x20]         ;826
00132c  ebfffffe          BL       cJSON_DetachItemFromObject
001330  e1a06000          MOV      r6,r0                 ;826
001334  e1a01004          MOV      r1,r4                 ;827
001338  e1a00006          MOV      r0,r6                 ;827
00133c  ebfffffe          BL       cJSONUtils_MergePatch
001340  e1a07000          MOV      r7,r0                 ;827
001344  e1a02007          MOV      r2,r7                 ;827
001348  e1a00005          MOV      r0,r5                 ;827
00134c  e5941020          LDR      r1,[r4,#0x20]         ;827
001350  ebfffffe          BL       cJSON_AddItemToObject
001354  e1a00000          MOV      r0,r0                 ;828
                  |L1.4952|
001358  e5944000          LDR      r4,[r4,#0]            ;829
                  |L1.4956|
00135c  e3540000          CMP      r4,#0                 ;817
001360  1affffe8          BNE      |L1.4872|
001364  e1a00005          MOV      r0,r5                 ;831
001368  eaffffda          B        |L1.4824|
;;;833    
                          ENDP

                  cJSONUtils_GenerateMergePatch PROC
;;;834    cJSON *cJSONUtils_GenerateMergePatch(cJSON *from, cJSON *to)
00136c  e92d41f0          PUSH     {r4-r8,lr}
;;;835    {
001370  e1a05000          MOV      r5,r0
001374  e1a04001          MOV      r4,r1
;;;836        cJSON *patch = NULL;
001378  e3a06000          MOV      r6,#0
;;;837        if (!to)
00137c  e3540000          CMP      r4,#0
001380  1a000001          BNE      |L1.5004|
;;;838        {
;;;839            /* patch to delete everything */
;;;840            return cJSON_CreateNull();
001384  ebfffffe          BL       cJSON_CreateNull
                  |L1.5000|
;;;841        }
;;;842        if (((to->type & 0xFF) != cJSON_Object) || !from || ((from->type & 0xFF) != cJSON_Object))
;;;843        {
;;;844            return cJSON_Duplicate(to, 1);
;;;845        }
;;;846    
;;;847        cJSONUtils_SortObject(from);
;;;848        cJSONUtils_SortObject(to);
;;;849    
;;;850        from = from->child;
;;;851        to = to->child;
;;;852        patch = cJSON_CreateObject();
;;;853        while (from || to)
;;;854        {
;;;855            int compare = from ? (to ? strcmp(from->string, to->string) : -1) : 1;
;;;856            if (compare < 0)
;;;857            {
;;;858                /* from has a value that to doesn't have -> remove */
;;;859                cJSON_AddItemToObject(patch, from->string, cJSON_CreateNull());
;;;860                from = from->next;
;;;861            }
;;;862            else if (compare > 0)
;;;863            {
;;;864                /* to has a value that from doesn't have -> add to patch */
;;;865                cJSON_AddItemToObject(patch, to->string, cJSON_Duplicate(to, 1));
;;;866                to = to->next;
;;;867            }
;;;868            else
;;;869            {
;;;870                /* object key exists in both objects */
;;;871                if (cJSONUtils_Compare(from, to))
;;;872                {
;;;873                    /* not identical --> generate a patch */
;;;874                    cJSON_AddItemToObject(patch, to->string, cJSONUtils_GenerateMergePatch(from, to));
;;;875                }
;;;876                /* next key in the object */
;;;877                from = from->next;
;;;878                to = to->next;
;;;879            }
;;;880        }
;;;881        if (!patch->child)
;;;882        {
;;;883            cJSON_Delete(patch);
;;;884            return NULL;
;;;885        }
;;;886    
;;;887        return patch;
;;;888    }
001388  e8bd81f0          POP      {r4-r8,pc}
                  |L1.5004|
00138c  e5d4000c          LDRB     r0,[r4,#0xc]          ;842
001390  e3500040          CMP      r0,#0x40              ;842
001394  1a000004          BNE      |L1.5036|
001398  e3550000          CMP      r5,#0                 ;842
00139c  0a000002          BEQ      |L1.5036|
0013a0  e5d5000c          LDRB     r0,[r5,#0xc]          ;842
0013a4  e3500040          CMP      r0,#0x40              ;842
0013a8  0a000003          BEQ      |L1.5052|
                  |L1.5036|
0013ac  e3a01001          MOV      r1,#1                 ;844
0013b0  e1a00004          MOV      r0,r4                 ;844
0013b4  ebfffffe          BL       cJSON_Duplicate
0013b8  eafffff2          B        |L1.5000|
                  |L1.5052|
0013bc  e1a00005          MOV      r0,r5                 ;847
0013c0  ebfffffe          BL       cJSONUtils_SortObject
0013c4  e1a00004          MOV      r0,r4                 ;848
0013c8  ebfffffe          BL       cJSONUtils_SortObject
0013cc  e5955008          LDR      r5,[r5,#8]            ;850
0013d0  e5944008          LDR      r4,[r4,#8]            ;851
0013d4  ebfffffe          BL       cJSON_CreateObject
0013d8  e1a06000          MOV      r6,r0                 ;852
0013dc  ea000031          B        |L1.5288|
                  |L1.5088|
0013e0  e3550000          CMP      r5,#0                 ;855
0013e4  0a000007          BEQ      |L1.5128|
0013e8  e3540000          CMP      r4,#0                 ;855
0013ec  0a000003          BEQ      |L1.5120|
0013f0  e5941020          LDR      r1,[r4,#0x20]         ;855
0013f4  e5950020          LDR      r0,[r5,#0x20]         ;855
0013f8  ebfffffe          BL       strcmp
0013fc  ea000002          B        |L1.5132|
                  |L1.5120|
001400  e3e00000          MVN      r0,#0                 ;855
001404  ea000000          B        |L1.5132|
                  |L1.5128|
001408  e3a00001          MOV      r0,#1                 ;855
                  |L1.5132|
00140c  e1a07000          MOV      r7,r0                 ;855
001410  e3570000          CMP      r7,#0                 ;856
001414  aa000007          BGE      |L1.5176|
001418  ebfffffe          BL       cJSON_CreateNull
00141c  e1a08000          MOV      r8,r0                 ;859
001420  e1a02008          MOV      r2,r8                 ;859
001424  e1a00006          MOV      r0,r6                 ;859
001428  e5951020          LDR      r1,[r5,#0x20]         ;859
00142c  ebfffffe          BL       cJSON_AddItemToObject
001430  e5955000          LDR      r5,[r5,#0]            ;860
001434  ea00001a          B        |L1.5284|
                  |L1.5176|
001438  e3570000          CMP      r7,#0                 ;862
00143c  da000009          BLE      |L1.5224|
001440  e3a01001          MOV      r1,#1                 ;865
001444  e1a00004          MOV      r0,r4                 ;865
001448  ebfffffe          BL       cJSON_Duplicate
00144c  e1a08000          MOV      r8,r0                 ;865
001450  e1a02008          MOV      r2,r8                 ;865
001454  e1a00006          MOV      r0,r6                 ;865
001458  e5941020          LDR      r1,[r4,#0x20]         ;865
00145c  ebfffffe          BL       cJSON_AddItemToObject
001460  e5944000          LDR      r4,[r4,#0]            ;866
001464  ea00000e          B        |L1.5284|
                  |L1.5224|
001468  e1a01004          MOV      r1,r4                 ;871
00146c  e1a00005          MOV      r0,r5                 ;871
001470  ebfffffe          BL       cJSONUtils_Compare
001474  e3500000          CMP      r0,#0                 ;871
001478  0a000007          BEQ      |L1.5276|
00147c  e1a01004          MOV      r1,r4                 ;874
001480  e1a00005          MOV      r0,r5                 ;874
001484  ebfffffe          BL       cJSONUtils_GenerateMergePatch
001488  e1a08000          MOV      r8,r0                 ;874
00148c  e1a02008          MOV      r2,r8                 ;874
001490  e1a00006          MOV      r0,r6                 ;874
001494  e5941020          LDR      r1,[r4,#0x20]         ;874
001498  ebfffffe          BL       cJSON_AddItemToObject
                  |L1.5276|
00149c  e5955000          LDR      r5,[r5,#0]            ;877
0014a0  e5944000          LDR      r4,[r4,#0]            ;878
                  |L1.5284|
0014a4  e1a00000          MOV      r0,r0                 ;880
                  |L1.5288|
0014a8  e3550000          CMP      r5,#0                 ;853
0014ac  1affffcb          BNE      |L1.5088|
0014b0  e3540000          CMP      r4,#0                 ;853
0014b4  1affffc9          BNE      |L1.5088|
0014b8  e5960008          LDR      r0,[r6,#8]            ;881
0014bc  e3500000          CMP      r0,#0                 ;881
0014c0  1a000003          BNE      |L1.5332|
0014c4  e1a00006          MOV      r0,r6                 ;883
0014c8  ebfffffe          BL       cJSON_Delete
0014cc  e3a00000          MOV      r0,#0                 ;884
0014d0  eaffffac          B        |L1.5000|
                  |L1.5332|
0014d4  e1a00006          MOV      r0,r6                 ;887
0014d8  eaffffaa          B        |L1.5000|
                  |L1.5340|
                          DCD      ||.text||+0xd28
                  |L1.5344|
                          DCD      ||.text||+0xd24
                  |L1.5348|
0014e4  00                DCB      0
0014e5  00                DCB      0
0014e6  00                DCB      0
0014e7  00                DCB      0
                          ENDP

