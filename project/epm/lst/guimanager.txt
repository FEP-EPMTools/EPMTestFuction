; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\guimanager.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\guimanager.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\guimanager.crf src\User\guimanager.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GuiManagerRefreshScreen PROC
;;;328    
;;;329    BOOL GuiManagerRefreshScreen(void)
000000  e92d4010          PUSH     {r4,lr}
;;;330    {
;;;331        if(pCurrentGuiInstance != NULL)
000004  e59f01fc          LDR      r0,|L1.520|
000008  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
00000c  e3500000          CMP      r0,#0
000010  0a000011          BEQ      |L1.92|
;;;332        {
;;;333            sysprintf("\r\n  = ############ => GuiManagerRefreshScreen start...\r\n");
000014  e28f0e1f          ADR      r0,|L1.524|
000018  ebfffffe          BL       sysprintf
;;;334            pCurrentGuiInstance->guiInstance->onDraw(currentGuiId, GUI_REDRAW_PARA_REFRESH, currentPara2, currentPara3);
00001c  e59f01e4          LDR      r0,|L1.520|
000020  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
000024  e5900004          LDR      r0,[r0,#4]
000028  e590c000          LDR      r12,[r0,#0]
00002c  e59f0214          LDR      r0,|L1.584|
000030  e5903000          LDR      r3,[r0,#0]  ; currentPara3
000034  e59f0210          LDR      r0,|L1.588|
000038  e3a01003          MOV      r1,#3
00003c  e5902000          LDR      r2,[r0,#0]  ; currentPara2
000040  e59f0208          LDR      r0,|L1.592|
000044  e5d00000          LDRB     r0,[r0,#0]  ; currentGuiId
000048  e12fff3c          BLX      r12
;;;335            sysprintf("  = ############ => GuiManagerRefreshScreen END...\r\n");
00004c  e28f0c02          ADR      r0,|L1.596|
000050  ebfffffe          BL       sysprintf
;;;336            return TRUE;
000054  e3a00001          MOV      r0,#1
                  |L1.88|
;;;337        }
;;;338        else
;;;339        {
;;;340            return FALSE;
;;;341        }
;;;342    }
000058  e8bd8010          POP      {r4,pc}
                  |L1.92|
00005c  e3a00000          MOV      r0,#0                 ;340
000060  eafffffc          B        |L1.88|
;;;343    
                          ENDP

                  redrawscreen PROC
;;;157    /*-----------------------------------------*/
;;;158    static void redrawscreen(void)
000064  e92d4010          PUSH     {r4,lr}
;;;159    {
;;;160        GuiManagerRefreshScreen();
000068  ebfffffe          BL       GuiManagerRefreshScreen
;;;161    }
00006c  e8bd8010          POP      {r4,pc}
;;;162    
                          ENDP

                  GuiManagerShowScreen PROC
;;;276    
;;;277    uint8_t GuiManagerShowScreen(uint8_t guiId, uint8_t para, int para2, int para3)
000070  e92d4ff8          PUSH     {r3-r11,lr}
;;;278    {
000074  e1a09000          MOV      r9,r0
000078  e1a05001          MOV      r5,r1
00007c  e1a06002          MOV      r6,r2
000080  e1a07003          MOV      r7,r3
;;;279        int i;
;;;280        uint8_t oriGuid;
;;;281        uint8_t reVal = GUI_SHOW_SCREEN_ERROR;
000084  e3a0a002          MOV      r10,#2
;;;282        xSemaphoreTake(xSemaphore, portMAX_DELAY);
000088  e3a03000          MOV      r3,#0
00008c  e3e02000          MVN      r2,#0
000090  e1a01003          MOV      r1,r3
000094  e59f01f0          LDR      r0,|L1.652|
000098  e5900000          LDR      r0,[r0,#0]  ; xSemaphore
00009c  ebfffffe          BL       xQueueGenericReceive
;;;283        
;;;284        //sysprintf("  ==> GUIManagerShowScreen %d start...\r\n", guiId);
;;;285        if(pCurrentGuiInstance != NULL)
0000a0  e59f0160          LDR      r0,|L1.520|
0000a4  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
0000a8  e3500000          CMP      r0,#0
0000ac  0a000003          BEQ      |L1.192|
;;;286        {
;;;287            oriGuid = pCurrentGuiInstance->guiId;
0000b0  e59f0150          LDR      r0,|L1.520|
0000b4  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
0000b8  e5d08000          LDRB     r8,[r0,#0]
0000bc  ea000000          B        |L1.196|
                  |L1.192|
;;;288        }
;;;289        else
;;;290        {
;;;291            oriGuid = NULL;
0000c0  e3a08000          MOV      r8,#0
                  |L1.196|
;;;292        }
;;;293        for(i = 0; ; i++)
0000c4  e3a04000          MOV      r4,#0
0000c8  e1a00000          MOV      r0,r0
                  |L1.204|
;;;294        {
;;;295            //sysprintf("  ==> check %d start...\r\n", guiId);
;;;296            if(userGuiInstance[i].guiId == 0xff)
0000cc  e59f01bc          LDR      r0,|L1.656|
0000d0  e7d00184          LDRB     r0,[r0,r4,LSL #3]
0000d4  e35000ff          CMP      r0,#0xff
0000d8  1a000000          BNE      |L1.224|
;;;297            {
;;;298                break;
0000dc  ea000028          B        |L1.388|
                  |L1.224|
;;;299            }
;;;300            else 
;;;301            {
;;;302                if(userGuiInstance[i].guiId == guiId)
0000e0  e59f01a8          LDR      r0,|L1.656|
0000e4  e7d00184          LDRB     r0,[r0,r4,LSL #3]
0000e8  e1500009          CMP      r0,r9
0000ec  1a000022          BNE      |L1.380|
;;;303                {
;;;304                    if(userGuiInstance[i].guiId == pCurrentGuiInstance->guiId)
0000f0  e59f0198          LDR      r0,|L1.656|
0000f4  e7d00184          LDRB     r0,[r0,r4,LSL #3]
0000f8  e59f1108          LDR      r1,|L1.520|
0000fc  e5911000          LDR      r1,[r1,#0]  ; pCurrentGuiInstance
000100  e5d11000          LDRB     r1,[r1,#0]
000104  e1500001          CMP      r0,r1
000108  1a000003          BNE      |L1.284|
;;;305                    {
;;;306                        //GuiManagerRefreshScreen();
;;;307                        sysprintf("  ==> GUIShowScreen Get it, but the same --> ignore...\r\n");
00010c  e28f0d06          ADR      r0,|L1.660|
000110  ebfffffe          BL       sysprintf
;;;308                        reVal = GUI_SHOW_SCREEN_IGNORE;
000114  e3a0a003          MOV      r10,#3
000118  ea000016          B        |L1.376|
                  |L1.284|
;;;309                    }
;;;310                    else
;;;311                    {
;;;312                        //sysprintf("  ==> GUIShowScreen Get it...\r\n");
;;;313                        pCurrentGuiInstance = &userGuiInstance[i];
00011c  e59f016c          LDR      r0,|L1.656|
000120  e0800184          ADD      r0,r0,r4,LSL #3
000124  e59f10dc          LDR      r1,|L1.520|
000128  e5810000          STR      r0,[r1,#0]  ; pCurrentGuiInstance
;;;314                        GuiSetInstance(&userGuiInstance[i], oriGuid, para, para2, para3);
00012c  e59f115c          LDR      r1,|L1.656|
000130  e0810184          ADD      r0,r1,r4,LSL #3
000134  e1a03006          MOV      r3,r6
000138  e1a02005          MOV      r2,r5
00013c  e1a01008          MOV      r1,r8
000140  e58d7000          STR      r7,[sp,#0]
000144  ebfffffe          BL       GuiSetInstance
;;;315                        currentPara =para;
000148  e59f0180          LDR      r0,|L1.720|
00014c  e5805000          STR      r5,[r0,#0]  ; currentPara
;;;316                        currentPara2=para2;
000150  e59f00f4          LDR      r0,|L1.588|
000154  e5806000          STR      r6,[r0,#0]  ; currentPara2
;;;317                        currentPara3=para3;
000158  e59f00e8          LDR      r0,|L1.584|
00015c  e5807000          STR      r7,[r0,#0]  ; currentPara3
;;;318                        currentGuiId=pCurrentGuiInstance->guiId;
000160  e59f00a0          LDR      r0,|L1.520|
000164  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
000168  e5d00000          LDRB     r0,[r0,#0]
00016c  e59f10dc          LDR      r1,|L1.592|
000170  e5c10000          STRB     r0,[r1,#0]  ; currentGuiId
;;;319                        reVal = GUI_SHOW_SCREEN_OK;
000174  e3a0a001          MOV      r10,#1
                  |L1.376|
;;;320                    }
;;;321                    break;
000178  ea000001          B        |L1.388|
                  |L1.380|
00017c  e2844001          ADD      r4,r4,#1              ;293
000180  eaffffd1          B        |L1.204|
                  |L1.388|
000184  e1a00000          MOV      r0,r0                 ;298
;;;322                }
;;;323            }
;;;324        }
;;;325        xSemaphoreGive(xSemaphore);
000188  e3a03000          MOV      r3,#0
00018c  e1a02003          MOV      r2,r3
000190  e1a01003          MOV      r1,r3
000194  e59f00f0          LDR      r0,|L1.652|
000198  e5900000          LDR      r0,[r0,#0]  ; xSemaphore
00019c  ebfffffe          BL       xQueueGenericSend
;;;326        return reVal;
0001a0  e1a0000a          MOV      r0,r10
;;;327    }
0001a4  e8bd8ff8          POP      {r3-r11,pc}
;;;328    
                          ENDP

                  vGuiManagerTestTask PROC
;;;163    #if (ENABLE_BURNIN_TESTER)
;;;164    static void vGuiManagerTestTask(void *pvParameters)
0001a8  ebfffffe          BL       GetCurrentUTCTime
;;;165    {
;;;166        time_t lastTime = GetCurrentUTCTime();
0001ac  e1a05000          MOV      r5,r0
;;;167        time_t currentTime;
;;;168        BOOL testLoop = FALSE;
0001b0  e3a06000          MOV      r6,#0
;;;169        terninalPrintf("vGuiManagerTestTask Going...\r\n");
0001b4  e28f0f46          ADR      r0,|L1.724|
0001b8  ebfffffe          BL       terninalPrintf
;;;170        
;;;171        for(;;)
0001bc  e1a00000          MOV      r0,r0
                  |L1.448|
;;;172        {
;;;173            if (GetPrepareStopBurninFlag())
0001c0  ebfffffe          BL       GetPrepareStopBurninFlag
0001c4  e3500000          CMP      r0,#0
0001c8  0a000003          BEQ      |L1.476|
;;;174            {
;;;175                terninalPrintf("vGuiManagerTestTask Terminated !!\r\n");
0001cc  e28f0e12          ADR      r0,|L1.756|
0001d0  ebfffffe          BL       terninalPrintf
;;;176                vTaskDelete(NULL);
0001d4  e3a00000          MOV      r0,#0
0001d8  ebfffffe          BL       vTaskDelete
                  |L1.476|
;;;177            }
;;;178            currentTime = GetCurrentUTCTime();
0001dc  ebfffffe          BL       GetCurrentUTCTime
0001e0  e1a04000          MOV      r4,r0
;;;179            if ((currentTime - lastTime) > BURNIN_EPD_REFRESH_INTERVAL)
0001e4  e0440005          SUB      r0,r4,r5
0001e8  e350002d          CMP      r0,#0x2d
0001ec  9a000000          BLS      |L1.500|
;;;180            {
;;;181                //terninalPrintf("vGuiManagerTestTask heartbeat.\r\n");
;;;182                //lastTime = currentTime;
;;;183                testLoop = TRUE;
0001f0  e3a06001          MOV      r6,#1
                  |L1.500|
;;;184            }
;;;185            if (!testLoop)
0001f4  e3560000          CMP      r6,#0
0001f8  1a000046          BNE      |L1.792|
;;;186            {
;;;187                vTaskDelay(100 / portTICK_RATE_MS);
0001fc  e3a0000a          MOV      r0,#0xa
000200  ebfffffe          BL       vTaskDelay
;;;188                continue;
000204  eaffffed          B        |L1.448|
                  |L1.520|
                          DCD      pCurrentGuiInstance
                  |L1.524|
00020c  0d0a2020          DCB      "\r\n  = ############ => GuiManagerRefreshScreen start.."
000210  3d202323
000214  23232323
000218  23232323
00021c  2323203d
000220  3e204775
000224  694d616e
000228  61676572
00022c  52656672
000230  65736853
000234  63726565
000238  6e207374
00023c  6172742e
000240  2e      
000241  2e0d0a00          DCB      ".\r\n",0
000245  00                DCB      0
000246  00                DCB      0
000247  00                DCB      0
                  |L1.584|
                          DCD      currentPara3
                  |L1.588|
                          DCD      currentPara2
                  |L1.592|
                          DCD      currentGuiId
                  |L1.596|
000254  20203d20          DCB      "  = ############ => GuiManagerRefreshScreen END...\r\n",0
000258  23232323
00025c  23232323
000260  23232323
000264  203d3e20
000268  4775694d
00026c  616e6167
000270  65725265
000274  66726573
000278  68536372
00027c  65656e20
000280  454e442e
000284  2e2e0d0a
000288  00      
000289  00                DCB      0
00028a  00                DCB      0
00028b  00                DCB      0
                  |L1.652|
                          DCD      xSemaphore
                  |L1.656|
                          DCD      userGuiInstance
                  |L1.660|
000294  20203d3d          DCB      "  ==> GUIShowScreen Get it, but the same --> ignore...\r"
000298  3e204755
00029c  4953686f
0002a0  77536372
0002a4  65656e20
0002a8  47657420
0002ac  69742c20
0002b0  62757420
0002b4  74686520
0002b8  73616d65
0002bc  202d2d3e
0002c0  2069676e
0002c4  6f72652e
0002c8  2e2e0d  
0002cb  0a00              DCB      "\n",0
0002cd  00                DCB      0
0002ce  00                DCB      0
0002cf  00                DCB      0
                  |L1.720|
                          DCD      currentPara
                  |L1.724|
0002d4  76477569          DCB      "vGuiManagerTestTask Going...\r\n",0
0002d8  4d616e61
0002dc  67657254
0002e0  65737454
0002e4  61736b20
0002e8  476f696e
0002ec  672e2e2e
0002f0  0d0a00  
0002f3  00                DCB      0
                  |L1.756|
0002f4  76477569          DCB      "vGuiManagerTestTask Terminated !!\r\n",0
0002f8  4d616e61
0002fc  67657254
000300  65737454
000304  61736b20
000308  5465726d
00030c  696e6174
000310  65642021
000314  210d0a00
                  |L1.792|
;;;189            }
;;;190            testLoop = FALSE;
000318  e3a06000          MOV      r6,#0
;;;191            if (epdErrorFlag == FALSE)
00031c  e59f0310          LDR      r0,|L1.1588|
000320  e5d00000          LDRB     r0,[r0,#0]  ; epdErrorFlag
000324  e3500000          CMP      r0,#0
000328  1a000018          BNE      |L1.912|
;;;192            {
;;;193                
;;;194                EPDSetBacklight(TRUE);
00032c  e3a00001          MOV      r0,#1
000330  ebfffffe          BL       EPDSetBacklight
;;;195                GuiManagerShowScreen(GUI_NULL_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);
000334  e3a03000          MOV      r3,#0
000338  e1a02003          MOV      r2,r3
00033c  e3a01003          MOV      r1,#3
000340  e3a00018          MOV      r0,#0x18
000344  ebfffffe          BL       GuiManagerShowScreen
;;;196                EPDShowBGScreen(EPD_PICT_ALL_BLACK_INDEX, TRUE);
000348  e3a01001          MOV      r1,#1
00034c  e3a00004          MOV      r0,#4
000350  ebfffffe          BL       EPDShowBGScreen
;;;197                vTaskDelay(1000 / portTICK_RATE_MS);
000354  e3a00064          MOV      r0,#0x64
000358  ebfffffe          BL       vTaskDelay
;;;198                            //EPDShowBGScreen(EPD_PICT_ALL_WHITE_INDEX, TRUE);
;;;199                epdBurninCounter++;
00035c  e59f02d4          LDR      r0,|L1.1592|
000360  e5900000          LDR      r0,[r0,#0]  ; epdBurninCounter
000364  e2800001          ADD      r0,r0,#1
000368  e59f12c8          LDR      r1,|L1.1592|
00036c  e5810000          STR      r0,[r1,#0]  ; epdBurninCounter
;;;200                            //terninalPrintf("EpdBurninCounter = %d\r\n", GetEpdBurninTestCounter());
;;;201                GuiManagerShowScreen(GUI_BURNIN_TESTER_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);
000370  e3a03000          MOV      r3,#0
000374  e1a02003          MOV      r2,r3
000378  e3a01003          MOV      r1,#3
00037c  e3a0001e          MOV      r0,#0x1e
000380  ebfffffe          BL       GuiManagerShowScreen
;;;202                EPDSetBacklight(FALSE);
000384  e3a00000          MOV      r0,#0
000388  ebfffffe          BL       EPDSetBacklight
00038c  ea000009          B        |L1.952|
                  |L1.912|
;;;203                
;;;204            }
;;;205            else
;;;206            {
;;;207                epdBurninCounter++;
000390  e59f02a0          LDR      r0,|L1.1592|
000394  e5900000          LDR      r0,[r0,#0]  ; epdBurninCounter
000398  e2800001          ADD      r0,r0,#1
00039c  e59f1294          LDR      r1,|L1.1592|
0003a0  e5810000          STR      r0,[r1,#0]  ; epdBurninCounter
;;;208                epdBurninErrorCounter++;
0003a4  e59f0290          LDR      r0,|L1.1596|
0003a8  e5900000          LDR      r0,[r0,#0]  ; epdBurninErrorCounter
0003ac  e2800001          ADD      r0,r0,#1
0003b0  e59f1284          LDR      r1,|L1.1596|
0003b4  e5810000          STR      r0,[r1,#0]  ; epdBurninErrorCounter
                  |L1.952|
;;;209            }
;;;210            lastTime = GetCurrentUTCTime();
0003b8  ebfffffe          BL       GetCurrentUTCTime
0003bc  e1a05000          MOV      r5,r0
0003c0  eaffff7e          B        |L1.448|
;;;211        }
;;;212    }
;;;213    #endif
                          ENDP

                  GetEpdBurninTestCounter PROC
;;;220    #if (ENABLE_BURNIN_TESTER)
;;;221    uint32_t GetEpdBurninTestCounter(void)
0003c4  e59f026c          LDR      r0,|L1.1592|
;;;222    {
;;;223        return epdBurninCounter;
0003c8  e5900000          LDR      r0,[r0,#0]  ; epdBurninCounter
;;;224    }
0003cc  e12fff1e          BX       lr
;;;225    
                          ENDP

                  GetEpdBurninTestErrorCounter PROC
;;;226    uint32_t GetEpdBurninTestErrorCounter(void)
0003d0  e59f0264          LDR      r0,|L1.1596|
;;;227    {
;;;228        return epdBurninErrorCounter;
0003d4  e5900000          LDR      r0,[r0,#0]  ; epdBurninErrorCounter
;;;229    }
0003d8  e12fff1e          BX       lr
;;;230    
                          ENDP

                  SetEpdErrorFlag PROC
;;;231    void SetEpdErrorFlag(BOOL flag)
0003dc  e59f1250          LDR      r1,|L1.1588|
;;;232    {
;;;233        epdErrorFlag = flag;
0003e0  e5c10000          STRB     r0,[r1,#0]  ; epdErrorFlag
;;;234    }
0003e4  e12fff1e          BX       lr
;;;235    #endif
                          ENDP

                  GuiManagerInit PROC
;;;237    
;;;238    BOOL GuiManagerInit(void)
0003e8  e92d401c          PUSH     {r2-r4,lr}
;;;239    {   
;;;240        //EPDShowBGScreen(EPD_PICT_ALL_WHITE_INDEX, FALSE); 
;;;241        //EPDDrawAllScreen(FALSE);
;;;242        //EPDDrawAllDepositTime(TRUE);
;;;243        EPDSetReinitCallbackFunc(redrawscreen);
0003ec  e59f024c          LDR      r0,|L1.1600|
0003f0  ebfffffe          BL       EPDSetReinitCallbackFunc
;;;244        xSemaphore = xSemaphoreCreateMutex();
0003f4  e3a00001          MOV      r0,#1
0003f8  ebfffffe          BL       xQueueCreateMutex
0003fc  e51f1178          LDR      r1,|L1.652|
000400  e5810000          STR      r0,[r1,#0]  ; xSemaphore
;;;245        switch(GetMeterData()->runningStatus)
000404  ebfffffe          BL       GetMeterData
000408  e5d00110          LDRB     r0,[r0,#0x110]
00040c  e3500000          CMP      r0,#0
000410  0a000006          BEQ      |L1.1072|
000414  e3500001          CMP      r0,#1
000418  0a000009          BEQ      |L1.1092|
00041c  e3500002          CMP      r0,#2
000420  0a00000e          BEQ      |L1.1120|
000424  e3500003          CMP      r0,#3
000428  1a000010          BNE      |L1.1136|
00042c  ea00000d          B        |L1.1128|
                  |L1.1072|
;;;246        {
;;;247            case RUNNING_STATUS_INIT:
000430  e1a00000          MOV      r0,r0
;;;248    //            GuiManagerShowScreen(GUI_HW_TEST_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);
;;;249                //GuiManagerShowScreen(GUI_FILE_DOWNLOAD_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);  
;;;250                GetMeterData()->runningStatus = RUNNING_STATUS_NORMAL;
000434  ebfffffe          BL       GetMeterData
000438  e3a01003          MOV      r1,#3
00043c  e5c01110          STRB     r1,[r0,#0x110]
;;;251                break;
000440  ea00000a          B        |L1.1136|
                  |L1.1092|
;;;252            case RUNNING_STATUS_FILE_DOWNLOAD:
000444  e1a00000          MOV      r0,r0
;;;253                #if(ENABLE_MODEM_AGENT_DRIVER)
;;;254                GuiManagerShowScreen(GUI_FILE_DOWNLOAD_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);
000448  e3a03000          MOV      r3,#0
00044c  e1a02003          MOV      r2,r3
000450  e3a01003          MOV      r1,#3
000454  e3a0000b          MOV      r0,#0xb
000458  ebfffffe          BL       GuiManagerShowScreen
;;;255                #else
;;;256                GuiManagerShowScreen(GUI_STANDBY_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);
;;;257                //GuiManagerShowScreen(GUI_FILE_DOWNLOAD_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);
;;;258                GetMeterData()->runningStatus = RUNNING_STATUS_NORMAL;
;;;259                #endif
;;;260                break;
00045c  ea000003          B        |L1.1136|
                  |L1.1120|
;;;261            case RUNNING_STATUS_ERROR:
000460  e1a00000          MOV      r0,r0
;;;262                break;
000464  ea000001          B        |L1.1136|
                  |L1.1128|
;;;263            case RUNNING_STATUS_NORMAL:
000468  e1a00000          MOV      r0,r0
;;;264                break;
00046c  e1a00000          MOV      r0,r0
                  |L1.1136|
000470  e1a00000          MOV      r0,r0                 ;251
;;;265        }
;;;266         
;;;267    #if (ENABLE_BURNIN_TESTER)
;;;268        if (EnabledBurninTestMode())
000474  ebfffffe          BL       EnabledBurninTestMode
000478  e3500000          CMP      r0,#0
00047c  0a000008          BEQ      |L1.1188|
;;;269        {
;;;270            xTaskCreate(vGuiManagerTestTask, "vGuiManagerTestTask", 1024*20, NULL, GUI_MANAGER_THREAD_PROI, NULL);
000480  e3a00000          MOV      r0,#0
000484  e3a01014          MOV      r1,#0x14
000488  e58d0004          STR      r0,[sp,#4]
00048c  e1a03000          MOV      r3,r0
000490  e3a02a05          MOV      r2,#0x5000
000494  e58d1000          STR      r1,[sp,#0]
000498  e28f1f69          ADR      r1,|L1.1604|
00049c  e59f01b4          LDR      r0,|L1.1624|
0004a0  ebfffffe          BL       xTaskCreate
                  |L1.1188|
;;;271        }
;;;272    #endif
;;;273        
;;;274        return TRUE;
0004a4  e3a00001          MOV      r0,#1
;;;275    }
0004a8  e8bd801c          POP      {r2-r4,pc}
;;;276    
                          ENDP

                  GuiManagerTimerSet PROC
;;;343    
;;;344    BOOL GuiManagerTimerSet(uint8_t reFreshPara)
0004ac  e92d4010          PUSH     {r4,lr}
;;;345    {
0004b0  e1a04000          MOV      r4,r0
;;;346        if(pCurrentGuiInstance != NULL)
0004b4  e51f02b4          LDR      r0,|L1.520|
0004b8  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
0004bc  e3500000          CMP      r0,#0
0004c0  0a000011          BEQ      |L1.1292|
;;;347        {
;;;348            sysprintf("\r\n  = ############ => GuiManagerTimerSet start...\r\n");
0004c4  e28f0e19          ADR      r0,|L1.1628|
0004c8  ebfffffe          BL       sysprintf
;;;349            pCurrentGuiInstance->guiInstance->onDraw(currentGuiId, reFreshPara, currentPara2, currentPara3);
0004cc  e51f02cc          LDR      r0,|L1.520|
0004d0  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
0004d4  e5900004          LDR      r0,[r0,#4]
0004d8  e590c000          LDR      r12,[r0,#0]
0004dc  e51f029c          LDR      r0,|L1.584|
0004e0  e5903000          LDR      r3,[r0,#0]  ; currentPara3
0004e4  e51f02a0          LDR      r0,|L1.588|
0004e8  e1a01004          MOV      r1,r4
0004ec  e5902000          LDR      r2,[r0,#0]  ; currentPara2
0004f0  e51f02a8          LDR      r0,|L1.592|
0004f4  e5d00000          LDRB     r0,[r0,#0]  ; currentGuiId
0004f8  e12fff3c          BLX      r12
;;;350            sysprintf("  = ############ => GuiManagerTimerSet END...\r\n");
0004fc  e28f0f63          ADR      r0,|L1.1680|
000500  ebfffffe          BL       sysprintf
;;;351            return TRUE;
000504  e3a00001          MOV      r0,#1
                  |L1.1288|
;;;352        }
;;;353        else
;;;354        {
;;;355            return FALSE;
;;;356        }
;;;357    }
000508  e8bd8010          POP      {r4,pc}
                  |L1.1292|
00050c  e3a00000          MOV      r0,#0                 ;355
000510  eafffffc          B        |L1.1288|
;;;358    
                          ENDP

                  GuiManagerCleanMessage PROC
;;;359    
;;;360    BOOL GuiManagerCleanMessage(uint8_t reFreshPara)
000514  e92d4010          PUSH     {r4,lr}
;;;361    {
000518  e1a04000          MOV      r4,r0
;;;362        if(pCurrentGuiInstance != NULL)
00051c  e51f031c          LDR      r0,|L1.520|
000520  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
000524  e3500000          CMP      r0,#0
000528  0a000011          BEQ      |L1.1396|
;;;363        {
;;;364            sysprintf("\r\n  = ############ => GuiManagerCleanMessage start...\r\n");
00052c  e28f0f63          ADR      r0,|L1.1728|
000530  ebfffffe          BL       sysprintf
;;;365            pCurrentGuiInstance->guiInstance->onDraw(currentGuiId, reFreshPara, currentPara2, currentPara3);
000534  e51f0334          LDR      r0,|L1.520|
000538  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
00053c  e5900004          LDR      r0,[r0,#4]
000540  e590c000          LDR      r12,[r0,#0]
000544  e51f0304          LDR      r0,|L1.584|
000548  e5903000          LDR      r3,[r0,#0]  ; currentPara3
00054c  e51f0308          LDR      r0,|L1.588|
000550  e1a01004          MOV      r1,r4
000554  e5902000          LDR      r2,[r0,#0]  ; currentPara2
000558  e51f0310          LDR      r0,|L1.592|
00055c  e5d00000          LDRB     r0,[r0,#0]  ; currentGuiId
000560  e12fff3c          BLX      r12
;;;366            sysprintf("  = ############ => GuiManagerCleanMessage END...\r\n");
000564  e28f0f63          ADR      r0,|L1.1784|
000568  ebfffffe          BL       sysprintf
;;;367            return TRUE;
00056c  e3a00001          MOV      r0,#1
                  |L1.1392|
;;;368        }
;;;369        else
;;;370        {
;;;371            return FALSE;
;;;372        }
;;;373    }
000570  e8bd8010          POP      {r4,pc}
                  |L1.1396|
000574  e3a00000          MOV      r0,#0                 ;371
000578  eafffffc          B        |L1.1392|
;;;374    
                          ENDP

                  GuiManagerUpdateMessage PROC
;;;375    
;;;376    BOOL GuiManagerUpdateMessage(uint8_t reFreshPara,int UpdatePara2,int UpdatePara3)
00057c  e92d4070          PUSH     {r4-r6,lr}
;;;377    {
000580  e1a04000          MOV      r4,r0
000584  e1a05001          MOV      r5,r1
000588  e1a06002          MOV      r6,r2
;;;378        if(pCurrentGuiInstance != NULL)
00058c  e51f038c          LDR      r0,|L1.520|
000590  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
000594  e3500000          CMP      r0,#0
000598  0a00000f          BEQ      |L1.1500|
;;;379        {
;;;380            sysprintf("\r\n  = ############ => GuiManagerCleanMessage start...\r\n");
00059c  e28f0f47          ADR      r0,|L1.1728|
0005a0  ebfffffe          BL       sysprintf
;;;381            pCurrentGuiInstance->guiInstance->onDraw(currentGuiId, reFreshPara, UpdatePara2, UpdatePara3);
0005a4  e51f03a4          LDR      r0,|L1.520|
0005a8  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
0005ac  e5900004          LDR      r0,[r0,#4]
0005b0  e1a03006          MOV      r3,r6
0005b4  e1a02005          MOV      r2,r5
0005b8  e1a01004          MOV      r1,r4
0005bc  e590c000          LDR      r12,[r0,#0]
0005c0  e51f0378          LDR      r0,|L1.592|
0005c4  e5d00000          LDRB     r0,[r0,#0]  ; currentGuiId
0005c8  e12fff3c          BLX      r12
;;;382            sysprintf("  = ############ => GuiManagerCleanMessage END...\r\n");
0005cc  e28f0f49          ADR      r0,|L1.1784|
0005d0  ebfffffe          BL       sysprintf
;;;383            return TRUE;
0005d4  e3a00001          MOV      r0,#1
                  |L1.1496|
;;;384        }
;;;385        else
;;;386        {
;;;387            return FALSE;
;;;388        }
;;;389    }
0005d8  e8bd8070          POP      {r4-r6,pc}
                  |L1.1500|
0005dc  e3a00000          MOV      r0,#0                 ;387
0005e0  eafffffc          B        |L1.1496|
;;;390    
                          ENDP

                  GuiManagerUpdateScreen PROC
;;;391    
;;;392    BOOL GuiManagerUpdateScreen(void)
0005e4  e92d4010          PUSH     {r4,lr}
;;;393    {
;;;394        if(pCurrentGuiInstance != NULL)
0005e8  e51f03e8          LDR      r0,|L1.520|
0005ec  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
0005f0  e3500000          CMP      r0,#0
0005f4  0a00005a          BEQ      |L1.1892|
;;;395        {
;;;396            sysprintf("\r\n  = ############ => GuiManagerUpdateScreen start...\r\n");
0005f8  e28f0f4b          ADR      r0,|L1.1836|
0005fc  ebfffffe          BL       sysprintf
;;;397            if(pCurrentGuiInstance->guiInstance->updateData != NULL)
000600  e51f0400          LDR      r0,|L1.520|
000604  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
000608  e5900004          LDR      r0,[r0,#4]
00060c  e5900004          LDR      r0,[r0,#4]
000610  e3500000          CMP      r0,#0
000614  0a000004          BEQ      |L1.1580|
;;;398                pCurrentGuiInstance->guiInstance->updateData();
000618  e51f1418          LDR      r1,|L1.520|
00061c  e5911000          LDR      r1,[r1,#0]  ; pCurrentGuiInstance
000620  e5911004          LDR      r1,[r1,#4]
000624  e5910004          LDR      r0,[r1,#4]
000628  e12fff30          BLX      r0
                  |L1.1580|
;;;399            return TRUE;
00062c  e3a00001          MOV      r0,#1
                  |L1.1584|
;;;400        }
;;;401        else
;;;402        {
;;;403            return FALSE;
;;;404        }
;;;405    }
000630  e8bd8010          POP      {r4,pc}
                  |L1.1588|
                          DCD      epdErrorFlag
                  |L1.1592|
                          DCD      epdBurninCounter
                  |L1.1596|
                          DCD      epdBurninErrorCounter
                  |L1.1600|
                          DCD      redrawscreen
                  |L1.1604|
000644  76477569          DCB      "vGuiManagerTestTask",0
000648  4d616e61
00064c  67657254
000650  65737454
000654  61736b00
                  |L1.1624|
                          DCD      vGuiManagerTestTask
                  |L1.1628|
00065c  0d0a2020          DCB      "\r\n  = ############ => GuiManagerTimerSet start...\r\n"
000660  3d202323
000664  23232323
000668  23232323
00066c  2323203d
000670  3e204775
000674  694d616e
000678  61676572
00067c  54696d65
000680  72536574
000684  20737461
000688  72742e2e
00068c  2e0d0a  
00068f  00                DCB      0
                  |L1.1680|
000690  20203d20          DCB      "  = ############ => GuiManagerTimerSet END...\r\n",0
000694  23232323
000698  23232323
00069c  23232323
0006a0  203d3e20
0006a4  4775694d
0006a8  616e6167
0006ac  65725469
0006b0  6d657253
0006b4  65742045
0006b8  4e442e2e
0006bc  2e0d0a00
                  |L1.1728|
0006c0  0d0a2020          DCB      "\r\n  = ############ => GuiManagerCleanMessage start..."
0006c4  3d202323
0006c8  23232323
0006cc  23232323
0006d0  2323203d
0006d4  3e204775
0006d8  694d616e
0006dc  61676572
0006e0  436c6561
0006e4  6e4d6573
0006e8  73616765
0006ec  20737461
0006f0  72742e2e
0006f4  2e      
0006f5  0d0a00            DCB      "\r\n",0
                  |L1.1784|
0006f8  20203d20          DCB      "  = ############ => GuiManagerCleanMessage END...\r\n",0
0006fc  23232323
000700  23232323
000704  23232323
000708  203d3e20
00070c  4775694d
000710  616e6167
000714  6572436c
000718  65616e4d
00071c  65737361
000720  67652045
000724  4e442e2e
000728  2e0d0a00
                  |L1.1836|
00072c  0d0a2020          DCB      "\r\n  = ############ => GuiManagerUpdateScreen start..."
000730  3d202323
000734  23232323
000738  23232323
00073c  2323203d
000740  3e204775
000744  694d616e
000748  61676572
00074c  55706461
000750  74655363
000754  7265656e
000758  20737461
00075c  72742e2e
000760  2e      
000761  0d0a00            DCB      "\r\n",0
                  |L1.1892|
000764  e3a00000          MOV      r0,#0                 ;403
000768  eaffffb0          B        |L1.1584|
;;;406    
                          ENDP

                  GuiManagerCompareCurrentScreenId PROC
;;;407    BOOL GuiManagerCompareCurrentScreenId(uint8_t guiId)
00076c  e1a01000          MOV      r1,r0
;;;408    {
;;;409        if(guiId == pCurrentGuiInstance->guiId)
000770  e51f0570          LDR      r0,|L1.520|
000774  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
000778  e5d00000          LDRB     r0,[r0,#0]
00077c  e1500001          CMP      r0,r1
000780  1a000001          BNE      |L1.1932|
;;;410        {        
;;;411            return TRUE;
000784  e3a00001          MOV      r0,#1
                  |L1.1928|
;;;412        }
;;;413        else
;;;414        {
;;;415            return FALSE;
;;;416        }
;;;417    }
000788  e12fff1e          BX       lr
                  |L1.1932|
00078c  e3a00000          MOV      r0,#0                 ;415
000790  eafffffc          B        |L1.1928|
;;;418    
                          ENDP

                  GuiManagerResetInstance PROC
;;;419    BOOL GuiManagerResetInstance(void)
000794  e92d4038          PUSH     {r3-r5,lr}
;;;420    {
;;;421    #if (ENABLE_BURNIN_TESTER)
;;;422        if (EnabledBurninTestMode() == FALSE)
000798  ebfffffe          BL       EnabledBurninTestMode
00079c  e3500000          CMP      r0,#0
0007a0  1a000001          BNE      |L1.1964|
;;;423    #endif
;;;424        {
;;;425            GUIDrvInit(FALSE);
0007a4  e3a00000          MOV      r0,#0
0007a8  ebfffffe          BL       GUIDrvInit
                  |L1.1964|
;;;426        }
;;;427        if(pCurrentGuiInstance == NULL)
0007ac  e51f05ac          LDR      r0,|L1.520|
0007b0  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
0007b4  e3500000          CMP      r0,#0
0007b8  1a000001          BNE      |L1.1988|
;;;428        {
;;;429            return FALSE;
0007bc  e3a00000          MOV      r0,#0
                  |L1.1984|
;;;430        }
;;;431        else
;;;432        {
;;;433            for(int i = 0; ; i++)
;;;434            {
;;;435                if(userGuiInstance[i].guiId == 0xff)
;;;436                    return FALSE;
;;;437                else 
;;;438                {
;;;439                    if(userGuiInstance[i].guiId == currentGuiId)
;;;440                        return GuiSetInstance(&userGuiInstance[i],currentGuiId, currentPara, currentPara2, currentPara3);
;;;441                }
;;;442            }
;;;443        }
;;;444    }
0007c0  e8bd8038          POP      {r3-r5,pc}
                  |L1.1988|
0007c4  e3a04000          MOV      r4,#0                 ;433
0007c8  e1a00000          MOV      r0,r0                 ;433
                  |L1.1996|
0007cc  e51f0544          LDR      r0,|L1.656|
0007d0  e7d00184          LDRB     r0,[r0,r4,LSL #3]     ;435
0007d4  e35000ff          CMP      r0,#0xff              ;435
0007d8  1a000001          BNE      |L1.2020|
0007dc  e3a00000          MOV      r0,#0                 ;436
0007e0  eafffff6          B        |L1.1984|
                  |L1.2020|
0007e4  e51f055c          LDR      r0,|L1.656|
0007e8  e7d00184          LDRB     r0,[r0,r4,LSL #3]     ;439
0007ec  e51f15a4          LDR      r1,|L1.592|
0007f0  e5d11000          LDRB     r1,[r1,#0]            ;439  ; currentGuiId
0007f4  e1500001          CMP      r0,r1                 ;439
0007f8  1a00000c          BNE      |L1.2096|
0007fc  e51f05bc          LDR      r0,|L1.584|
000800  e5900000          LDR      r0,[r0,#0]            ;440  ; currentPara3
000804  e51f153c          LDR      r1,|L1.720|
000808  e58d0000          STR      r0,[sp,#0]            ;440
00080c  e5d12000          LDRB     r2,[r1,#0]            ;440  ; currentPara
000810  e51f1588          LDR      r1,|L1.656|
000814  e0810184          ADD      r0,r1,r4,LSL #3       ;440
000818  e51f15d4          LDR      r1,|L1.588|
00081c  e5913000          LDR      r3,[r1,#0]            ;440  ; currentPara2
000820  e51f15d8          LDR      r1,|L1.592|
000824  e5d11000          LDRB     r1,[r1,#0]            ;440  ; currentGuiId
000828  ebfffffe          BL       GuiSetInstance
00082c  eaffffe3          B        |L1.1984|
                  |L1.2096|
000830  e2844001          ADD      r4,r4,#1              ;433
000834  eaffffe4          B        |L1.1996|
;;;445    
                          ENDP

                  GuiManagerOnclickListener PROC
;;;446    BOOL GuiManagerOnclickListener(guiKeyCallbackFunc listener){
000838  e1a01000          MOV      r1,r0
;;;447        if(pCurrentGuiInstance == NULL)
00083c  e51f063c          LDR      r0,|L1.520|
000840  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
000844  e3500000          CMP      r0,#0
000848  1a000001          BNE      |L1.2132|
;;;448        {
;;;449            return FALSE;
00084c  e3a00000          MOV      r0,#0
                  |L1.2128|
;;;450        }
;;;451        if(listener == NULL)
;;;452        {
;;;453            return FALSE;
;;;454        }
;;;455        pCurrentGuiInstance->guiInstance->keyCallback = listener;
;;;456        return TRUE;
;;;457    }
000850  e12fff1e          BX       lr
                  |L1.2132|
000854  e3510000          CMP      r1,#0                 ;451
000858  1a000001          BNE      |L1.2148|
00085c  e3a00000          MOV      r0,#0                 ;453
000860  eafffffa          B        |L1.2128|
                  |L1.2148|
000864  e51f0664          LDR      r0,|L1.520|
000868  e5900000          LDR      r0,[r0,#0]            ;455  ; pCurrentGuiInstance
00086c  e5900004          LDR      r0,[r0,#4]            ;455
000870  e5801008          STR      r1,[r0,#8]            ;455
000874  e3a00001          MOV      r0,#1                 ;456
000878  eafffff4          B        |L1.2128|
;;;458    
                          ENDP

                  GuiManagerResetKeyCallbackFunc PROC
;;;459    BOOL GuiManagerResetKeyCallbackFunc(void)
00087c  e92d4010          PUSH     {r4,lr}
;;;460    {
;;;461        if(pCurrentGuiInstance == NULL)
000880  e51f0680          LDR      r0,|L1.520|
000884  e5900000          LDR      r0,[r0,#0]  ; pCurrentGuiInstance
000888  e3500000          CMP      r0,#0
00088c  1a000003          BNE      |L1.2208|
;;;462        {
;;;463            terninalPrintf("[ERROR]<GUIManager>ResetKeyCallbackFunc Fail [pCurrentGuiInstance is NULL]\r\n");
000890  e59f0064          LDR      r0,|L1.2300|
000894  ebfffffe          BL       terninalPrintf
;;;464            return FALSE;
000898  e3a00000          MOV      r0,#0
                  |L1.2204|
;;;465        }
;;;466        else 
;;;467        {
;;;468            //terninalPrintf( "pCurrentGuiInstance->guiId [%d]\r\n" , pCurrentGuiInstance->guiId );
;;;469            //terninalPrintf( "currentGuiId               [%d]\r\n" , currentGuiId );
;;;470            for(int i = 0; ; i++)
;;;471            {
;;;472                if(userGuiInstance[i].guiId == 0xff)
;;;473                    return FALSE;
;;;474                else 
;;;475                {
;;;476                    if(userGuiInstance[i].guiId == currentGuiId)
;;;477                        GuiSetKeyCallbackFunc(userGuiInstance[i].guiInstance->keyCallback);
;;;478                        GUIDrvInit(FALSE);
;;;479                    return TRUE;
;;;480                }
;;;481            }
;;;482        }
;;;483    }
00089c  e8bd8010          POP      {r4,pc}
                  |L1.2208|
0008a0  e3a04000          MOV      r4,#0                 ;470
0008a4  e1a00000          MOV      r0,r0                 ;470
0008a8  e51f0620          LDR      r0,|L1.656|
0008ac  e7d00184          LDRB     r0,[r0,r4,LSL #3]     ;472
0008b0  e35000ff          CMP      r0,#0xff              ;472
0008b4  1a000001          BNE      |L1.2240|
0008b8  e3a00000          MOV      r0,#0                 ;473
0008bc  eafffff6          B        |L1.2204|
                  |L1.2240|
0008c0  e51f0638          LDR      r0,|L1.656|
0008c4  e7d00184          LDRB     r0,[r0,r4,LSL #3]     ;476
0008c8  e51f1680          LDR      r1,|L1.592|
0008cc  e5d11000          LDRB     r1,[r1,#0]            ;476  ; currentGuiId
0008d0  e1500001          CMP      r0,r1                 ;476
0008d4  1a000004          BNE      |L1.2284|
0008d8  e51f1650          LDR      r1,|L1.656|
0008dc  e0811184          ADD      r1,r1,r4,LSL #3       ;477
0008e0  e5911004          LDR      r1,[r1,#4]            ;477
0008e4  e5910008          LDR      r0,[r1,#8]            ;477
0008e8  ebfffffe          BL       GuiSetKeyCallbackFunc
                  |L1.2284|
0008ec  e3a00000          MOV      r0,#0                 ;478
0008f0  ebfffffe          BL       GUIDrvInit
0008f4  e3a00001          MOV      r0,#1                 ;479
0008f8  eaffffe7          B        |L1.2204|
;;;484    
                          ENDP

                  |L1.2300|
                          DCD      ||.constdata||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  5b455252          DCB      0x5b,0x45,0x52,0x52
000004  4f525d3c          DCB      0x4f,0x52,0x5d,0x3c
000008  4755494d          DCB      0x47,0x55,0x49,0x4d
00000c  616e6167          DCB      0x61,0x6e,0x61,0x67
000010  65723e52          DCB      0x65,0x72,0x3e,0x52
000014  65736574          DCB      0x65,0x73,0x65,0x74
000018  4b657943          DCB      0x4b,0x65,0x79,0x43
00001c  616c6c62          DCB      0x61,0x6c,0x6c,0x62
000020  61636b46          DCB      0x61,0x63,0x6b,0x46
000024  756e6320          DCB      0x75,0x6e,0x63,0x20
000028  4661696c          DCB      0x46,0x61,0x69,0x6c
00002c  205b7043          DCB      0x20,0x5b,0x70,0x43
000030  75727265          DCB      0x75,0x72,0x72,0x65
000034  6e744775          DCB      0x6e,0x74,0x47,0x75
000038  69496e73          DCB      0x69,0x49,0x6e,0x73
00003c  74616e63          DCB      0x74,0x61,0x6e,0x63
000040  65206973          DCB      0x65,0x20,0x69,0x73
000044  204e554c          DCB      0x20,0x4e,0x55,0x4c
000048  4c5d0d0a          DCB      0x4c,0x5d,0x0d,0x0a
00004c  00                DCB      0x00

                          AREA ||.data||, DATA, ALIGN=2

                  guiInstanceHardwareTest
                          DCD      GuiHWTestOnDraw
                          DCD      GuiHWTestUpdateData
                          DCD      GuiHWTestKeyCallback
                          DCD      GuiHWTestTimerCallback
                          DCD      GuiHWTestPowerCallbackFunc
                  guiInstanceSingleTest
                          DCD      GuiSingleTestOnDraw
                          DCD      GuiSingleTestUpdateData
                          DCD      GuiSingleTestKeyCallback
                          DCD      GuiSingleTestTimerCallback
                          DCD      GuiSingleTestPowerCallbackFunc
                  guiInstanceTool
                          DCD      GuiToolOnDraw
                          DCD      GuiToolUpdateData
                          DCD      GuiToolKeyCallback
                          DCD      GuiToolTimerCallback
                          DCD      GuiToolPowerCallbackFunc
                  guiInstanceSettingId
                          DCD      GuiSettingIdOnDraw
                          DCD      GuiSettingIdUpdateData
                          DCD      GuiSettingIdKeyCallback
                          DCD      GuiSettingIdTimerCallback
                          DCD      GuiSettingIdPowerCallbackFunc
                  guiInstanceShowCardId
                          DCD      GuiShowCardIdOnDraw
                          DCD      GuiShowCardIdUpdateData
                          DCD      GuiShowCardIdKeyCallback
                          DCD      GuiShowCardIdTimerCallback
                          DCD      GuiShowCardIdPowerCallbackFunc
                  guiInstanceRadar
                          DCD      GuiRadarOnDraw
                          DCD      GuiRadarUpdateData
                          DCD      GuiRadarKeyCallback
                          DCD      GuiRadarTimerCallback
                          DCD      GuiRadarPowerCallbackFunc
                  guiInstanceUsbCam
                          DCD      GuiUsbCamOnDraw
                          DCD      GuiUsbCamUpdateData
                          DCD      GuiUsbCamKeyCallback
                          DCD      GuiUsbCamTimerCallback
                          DCD      GuiUsbCamPowerCallbackFunc
                  guiInstanceLidar
                          DCD      GuiLidarOnDraw
                          DCD      GuiLidarUpdateData
                          DCD      GuiLidarKeyCallback
                          DCD      GuiLidarTimerCallback
                          DCD      GuiLidarPowerCallbackFunc
                  guiInstanceNull
                          DCD      GuiNullOnDraw
                          DCD      GuiNullUpdateData
                          DCD      GuiNullKeyCallback
                          DCD      GuiNullTimerCallback
                          DCD      GuiNullPowerCallbackFunc
                  guiInstanceCalibration
                          DCD      GuiCalibrationOnDraw
                          DCD      GuiCalibrationUpdateData
                          DCD      GuiCalibrationKeyCallback
                          DCD      GuiCalibrationTimerCallback
                          DCD      GuiCalibrationPowerCallbackFunc
                  guiInstanceVersion
                          DCD      GuiVersionOnDraw
                          DCD      GuiVersionUpdateData
                          DCD      GuiVersionKeyCallback
                          DCD      GuiVersionTimerCallback
                          DCD      GuiVersionPowerCallbackFunc
                  guiInstanceBlank
                          DCD      GuiBlankOnDraw
                          DCD      GuiBlankUpdateData
                          DCD      GuiBlankKeyCallback
                          DCD      GuiBlankTimerCallback
                          DCD      GuiBlankPowerCallbackFunc
                  guiInstanceEpdflashTool
                          DCD      GuiEpdflashToolOnDraw
                          DCD      GuiEpdflashToolUpdateData
                          DCD      GuiEpdflashToolKeyCallback
                          DCD      GuiEpdflashToolTimerCallback
                          DCD      GuiEpdflashToolPowerCallbackFunc
                  guiInstanceRadarOTATool
                          DCD      GuiRadarOTAToolOnDraw
                          DCD      GuiRadarOTAToolUpdateData
                          DCD      GuiRadarOTAToolKeyCallback
                          DCD      GuiRadarOTAToolTimerCallback
                          DCD      GuiRadarOTAToolPowerCallbackFunc
                  guiInstanceBurninTester
                          DCD      GuiBurninTesterOnDraw
                          DCD      GuiBurninTesterUpdateData
                          DCD      GuiBurninTesterKeyCallback
                          DCD      GuiBurninTesterTimerCallback
                          DCD      GuiBurninTesterPowerCallbackFunc
                  guiInstanceRTCTool
                          DCD      GuiRTCToolOnDraw
                          DCD      GuiRTCToolUpdateData
                          DCD      GuiRTCToolKeyCallback
                          DCD      GuiRTCToolTimerCallback
                          DCD      GuiRTCToolPowerCallbackFunc
                  guiInstanceRadarTool
                          DCD      GuiRadarToolOnDraw
                          DCD      GuiRadarToolUpdateData
                          DCD      GuiRadarToolKeyCallback
                          DCD      GuiRadarToolTimerCallback
                          DCD      GuiRadarToolPowerCallbackFunc
                  userGuiInstance
000154  0e000000          DCB      0x0e,0x00,0x00,0x00
                          DCD      guiInstanceHardwareTest
00015c  10000000          DCB      0x10,0x00,0x00,0x00
                          DCD      guiInstanceSingleTest
000164  11000000          DCB      0x11,0x00,0x00,0x00
                          DCD      guiInstanceTool
00016c  13000000          DCB      0x13,0x00,0x00,0x00
                          DCD      guiInstanceSettingId
000174  14000000          DCB      0x14,0x00,0x00,0x00
                          DCD      guiInstanceShowCardId
00017c  15000000          DCB      0x15,0x00,0x00,0x00
                          DCD      guiInstanceRadar
000184  16000000          DCB      0x16,0x00,0x00,0x00
                          DCD      guiInstanceUsbCam
00018c  17000000          DCB      0x17,0x00,0x00,0x00
                          DCD      guiInstanceLidar
000194  19000000          DCB      0x19,0x00,0x00,0x00
                          DCD      guiInstanceCalibration
00019c  18000000          DCB      0x18,0x00,0x00,0x00
                          DCD      guiInstanceNull
0001a4  1a000000          DCB      0x1a,0x00,0x00,0x00
                          DCD      guiInstanceVersion
0001ac  1b000000          DCB      0x1b,0x00,0x00,0x00
                          DCD      guiInstanceBlank
0001b4  1c000000          DCB      0x1c,0x00,0x00,0x00
                          DCD      guiInstanceEpdflashTool
0001bc  1d000000          DCB      0x1d,0x00,0x00,0x00
                          DCD      guiInstanceRadarOTATool
0001c4  1e000000          DCB      0x1e,0x00,0x00,0x00
                          DCD      guiInstanceBurninTester
0001cc  1f000000          DCB      0x1f,0x00,0x00,0x00
                          DCD      guiInstanceRTCTool
0001d4  20000000          DCB      0x20,0x00,0x00,0x00
                          DCD      guiInstanceRadarTool
0001dc  ff000000          DCB      0xff,0x00,0x00,0x00
                          DCD      0x00000000
                  pCurrentGuiInstance
                          DCD      0x00000000
                  epdBurninCounter
                          DCD      0x00000000
                  epdBurninErrorCounter
                          DCD      0x00000000
                  epdErrorFlag
0001f0  00000000          DCB      0x00,0x00,0x00,0x00
                  xSemaphore
                          DCD      0x00000000
                  currentPara
                          DCD      0x00000000
                  currentPara2
                          DCD      0x00000000
                  currentPara3
                          DCD      0x00000000
                  currentGuiId
000204  00                DCB      0x00
