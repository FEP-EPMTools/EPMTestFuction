; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\mtdcore.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\mtdcore.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\mtdcore.crf ..\..\common\src\BSP\ThirdParty\yaffs2\mtdcore.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  add_mtd_device PROC
;;;18     
;;;19     int add_mtd_device(struct mtd_info *mtd)
000000  e92d4070          PUSH     {r4-r6,lr}
;;;20     {
000004  e1a05000          MOV      r5,r0
;;;21     	int i;
;;;22     
;;;23     	BUG_ON(mtd->writesize == 0);
000008  e1a00000          MOV      r0,r0
00000c  e5950014          LDR      r0,[r5,#0x14]
000010  e3500000          CMP      r0,#0
000014  1a000005          BNE      |L1.48|
000018  e1a00000          MOV      r0,r0
00001c  e3a02017          MOV      r2,#0x17
000020  e28f1e1e          ADR      r1,|L1.520|
000024  e28f0e21          ADR      r0,|L1.572|
000028  ebfffffe          BL       sysprintf
00002c  e1a00000          MOV      r0,r0
                  |L1.48|
000030  e1a00000          MOV      r0,r0
;;;24     
;;;25     	for (i = 0; i < MAX_MTD_DEVICES; i++)
000034  e3a04000          MOV      r4,#0
000038  ea00000a          B        |L1.104|
                  |L1.60|
;;;26     		if (!mtd_table[i]) {
00003c  e59f0210          LDR      r0,|L1.596|
000040  e7900104          LDR      r0,[r0,r4,LSL #2]
000044  e3500000          CMP      r0,#0
000048  1a000005          BNE      |L1.100|
;;;27     			mtd_table[i] = mtd;
00004c  e59f0200          LDR      r0,|L1.596|
000050  e7805104          STR      r5,[r0,r4,LSL #2]
;;;28     			mtd->index = i;
000054  e5854024          STR      r4,[r5,#0x24]
;;;29     			mtd->usecount = 0;
000058  e3a00000          MOV      r0,#0
00005c  e585009c          STR      r0,[r5,#0x9c]
                  |L1.96|
;;;30     
;;;31     			/* No need to get a refcount on the module containing
;;;32     			   the notifier, since we hold the mtd_table_mutex */
;;;33     
;;;34     			/* We _know_ we aren't being removed, because
;;;35     			   our caller is still holding us here. So none
;;;36     			   of this try_ nonsense, and no bitching about it
;;;37     			   either. :) */
;;;38     			return 0;
;;;39     		}
;;;40     
;;;41     	return 1;
;;;42     }
000060  e8bd8070          POP      {r4-r6,pc}
                  |L1.100|
000064  e2844001          ADD      r4,r4,#1              ;25
                  |L1.104|
000068  e3540020          CMP      r4,#0x20              ;25
00006c  bafffff2          BLT      |L1.60|
000070  e3a00001          MOV      r0,#1                 ;41
000074  eafffff9          B        |L1.96|
;;;43     
                          ENDP

                  del_mtd_device PROC
;;;52      */
;;;53     int del_mtd_device(struct mtd_info *mtd)
000078  e92d4070          PUSH     {r4-r6,lr}
;;;54     {
00007c  e1a04000          MOV      r4,r0
;;;55     	int ret;
;;;56     
;;;57     	if (mtd_table[mtd->index] != mtd) {
000080  e59f11cc          LDR      r1,|L1.596|
000084  e5940024          LDR      r0,[r4,#0x24]
000088  e7910100          LDR      r0,[r1,r0,LSL #2]
00008c  e1500004          CMP      r0,r4
000090  0a000001          BEQ      |L1.156|
;;;58     		ret = -ENODEV;
000094  e3e05012          MVN      r5,#0x12
000098  ea00000e          B        |L1.216|
                  |L1.156|
;;;59     	} else if (mtd->usecount) {
00009c  e594009c          LDR      r0,[r4,#0x9c]
0000a0  e3500000          CMP      r0,#0
0000a4  0a000006          BEQ      |L1.196|
;;;60     		printk(KERN_NOTICE "Removing MTD device #%d (%s)"
0000a8  e28f0f6a          ADR      r0,|L1.600|
0000ac  e5941024          LDR      r1,[r4,#0x24]
0000b0  e5942020          LDR      r2,[r4,#0x20]
0000b4  e594309c          LDR      r3,[r4,#0x9c]
0000b8  ebfffffe          BL       sysprintf
;;;61     				" with use count %d\n",
;;;62     				mtd->index, mtd->name, mtd->usecount);
;;;63     		ret = -EBUSY;
0000bc  e3e0500f          MVN      r5,#0xf
0000c0  ea000004          B        |L1.216|
                  |L1.196|
;;;64     	} else {
;;;65     		/* No need to get a refcount on the module containing
;;;66     		 * the notifier, since we hold the mtd_table_mutex */
;;;67     		mtd_table[mtd->index] = NULL;
0000c4  e3a00000          MOV      r0,#0
0000c8  e59f2184          LDR      r2,|L1.596|
0000cc  e5941024          LDR      r1,[r4,#0x24]
0000d0  e7820101          STR      r0,[r2,r1,LSL #2]
;;;68     
;;;69     		ret = 0;
0000d4  e3a05000          MOV      r5,#0
                  |L1.216|
;;;70     	}
;;;71     
;;;72     	return ret;
0000d8  e1a00005          MOV      r0,r5
;;;73     }
0000dc  e8bd8070          POP      {r4-r6,pc}
;;;74     
                          ENDP

                  get_mtd_device PROC
;;;85      */
;;;86     struct mtd_info *get_mtd_device(struct mtd_info *mtd, int num)
0000e0  e92d4010          PUSH     {r4,lr}
;;;87     {
0000e4  e1a03000          MOV      r3,r0
0000e8  e1a0c001          MOV      r12,r1
;;;88     	struct mtd_info *ret = NULL;
0000ec  e3a01000          MOV      r1,#0
;;;89     	int i, err = -ENODEV;
0000f0  e3e04012          MVN      r4,#0x12
;;;90     
;;;91     	if (num == -1) {
0000f4  e37c0001          CMN      r12,#1
0000f8  1a00000b          BNE      |L1.300|
;;;92     		for (i = 0; i < MAX_MTD_DEVICES; i++)
0000fc  e3a02000          MOV      r2,#0
000100  ea000006          B        |L1.288|
                  |L1.260|
;;;93     			if (mtd_table[i] == mtd)
000104  e59f0148          LDR      r0,|L1.596|
000108  e7900102          LDR      r0,[r0,r2,LSL #2]
00010c  e1500003          CMP      r0,r3
000110  1a000001          BNE      |L1.284|
;;;94     				ret = mtd_table[i];
000114  e59f0138          LDR      r0,|L1.596|
000118  e7901102          LDR      r1,[r0,r2,LSL #2]
                  |L1.284|
00011c  e2822001          ADD      r2,r2,#1              ;92
                  |L1.288|
000120  e3520020          CMP      r2,#0x20              ;92
000124  bafffff6          BLT      |L1.260|
000128  ea000008          B        |L1.336|
                  |L1.300|
;;;95     	} else if (num < MAX_MTD_DEVICES) {
00012c  e35c0020          CMP      r12,#0x20
000130  aa000006          BGE      |L1.336|
;;;96     		ret = mtd_table[num];
000134  e59f0118          LDR      r0,|L1.596|
000138  e790110c          LDR      r1,[r0,r12,LSL #2]
;;;97     		if (mtd && mtd != ret)
00013c  e3530000          CMP      r3,#0
000140  0a000002          BEQ      |L1.336|
000144  e1530001          CMP      r3,r1
000148  0a000000          BEQ      |L1.336|
;;;98     			ret = NULL;
00014c  e3a01000          MOV      r1,#0
                  |L1.336|
;;;99     	}
;;;100    
;;;101    	if (!ret)
000150  e3510000          CMP      r1,#0
000154  1a000000          BNE      |L1.348|
;;;102    		goto out_unlock;
000158  ea000004          B        |L1.368|
                  |L1.348|
;;;103    
;;;104    	ret->usecount++;
00015c  e591009c          LDR      r0,[r1,#0x9c]
000160  e2800001          ADD      r0,r0,#1
000164  e581009c          STR      r0,[r1,#0x9c]
;;;105    	return ret;
000168  e1a00001          MOV      r0,r1
                  |L1.364|
;;;106    
;;;107    out_unlock:
;;;108    	return ((void *)(err));
;;;109    }
00016c  e8bd8010          POP      {r4,pc}
                  |L1.368|
000170  e1a00000          MOV      r0,r0                 ;107
000174  e1a00004          MOV      r0,r4                 ;108
000178  eafffffb          B        |L1.364|
;;;110    
                          ENDP

                  get_mtd_device_nm PROC
;;;118     */
;;;119    struct mtd_info *get_mtd_device_nm(const char *name)
00017c  e92d41f0          PUSH     {r4-r8,lr}
;;;120    {
000180  e1a06000          MOV      r6,r0
;;;121    	int i, err = -ENODEV;
000184  e3e07012          MVN      r7,#0x12
;;;122    	struct mtd_info *mtd = NULL;
000188  e3a05000          MOV      r5,#0
;;;123    
;;;124    	for (i = 0; i < MAX_MTD_DEVICES; i++) {
00018c  e3a04000          MOV      r4,#0
000190  ea00000e          B        |L1.464|
                  |L1.404|
;;;125    		if (mtd_table[i] && !strcmp(name, mtd_table[i]->name)) {
000194  e59f00b8          LDR      r0,|L1.596|
000198  e7900104          LDR      r0,[r0,r4,LSL #2]
00019c  e3500000          CMP      r0,#0
0001a0  0a000009          BEQ      |L1.460|
0001a4  e59f00a8          LDR      r0,|L1.596|
0001a8  e7900104          LDR      r0,[r0,r4,LSL #2]
0001ac  e5901020          LDR      r1,[r0,#0x20]
0001b0  e1a00006          MOV      r0,r6
0001b4  ebfffffe          BL       strcmp
0001b8  e3500000          CMP      r0,#0
0001bc  1a000002          BNE      |L1.460|
;;;126    			mtd = mtd_table[i];
0001c0  e59f008c          LDR      r0,|L1.596|
0001c4  e7905104          LDR      r5,[r0,r4,LSL #2]
;;;127    			break;
0001c8  ea000002          B        |L1.472|
                  |L1.460|
0001cc  e2844001          ADD      r4,r4,#1              ;124
                  |L1.464|
0001d0  e3540020          CMP      r4,#0x20              ;124
0001d4  baffffee          BLT      |L1.404|
                  |L1.472|
0001d8  e1a00000          MOV      r0,r0
;;;128    		}
;;;129    	}
;;;130    
;;;131    	if (!mtd)
0001dc  e3550000          CMP      r5,#0
0001e0  1a000000          BNE      |L1.488|
;;;132    		goto out_unlock;
0001e4  ea000004          B        |L1.508|
                  |L1.488|
;;;133    
;;;134    	mtd->usecount++;
0001e8  e595009c          LDR      r0,[r5,#0x9c]
0001ec  e2800001          ADD      r0,r0,#1
0001f0  e585009c          STR      r0,[r5,#0x9c]
;;;135    	return mtd;
0001f4  e1a00005          MOV      r0,r5
                  |L1.504|
;;;136    
;;;137    out_unlock:
;;;138    	return ((void *)(err));
;;;139    }
0001f8  e8bd81f0          POP      {r4-r8,pc}
                  |L1.508|
0001fc  e1a00000          MOV      r0,r0                 ;137
000200  e1a00007          MOV      r0,r7                 ;138
000204  eafffffb          B        |L1.504|
                  |L1.520|
000208  2e2e5c2e          DCB      "..\\..\\common\\src\\BSP\\ThirdParty\\yaffs2\\mtdcore.c"
00020c  2e5c636f
000210  6d6d6f6e
000214  5c737263
000218  5c425350
00021c  5c546869
000220  72645061
000224  7274795c
000228  79616666
00022c  73325c6d
000230  7464636f
000234  72652e63
000238  00                DCB      0
000239  00                DCB      0
00023a  00                DCB      0
00023b  00                DCB      0
                  |L1.572|
00023c  552d426f          DCB      "U-Boot BUG at %s:%d!\n",0
000240  6f742042
000244  55472061
000248  74202573
00024c  3a256421
000250  0a00    
000252  00                DCB      0
000253  00                DCB      0
                  |L1.596|
                          DCD      mtd_table
                  |L1.600|
000258  52656d6f          DCB      "Removing MTD device #%d (%s) with use count %d\n",0
00025c  76696e67
000260  204d5444
000264  20646576
000268  69636520
00026c  23256420
000270  28257329
000274  20776974
000278  68207573
00027c  6520636f
000280  756e7420
000284  25640a00
                          ENDP

                  put_mtd_device PROC
;;;140    
;;;141    void put_mtd_device(struct mtd_info *mtd)
000288  e92d4070          PUSH     {r4-r6,lr}
;;;142    {
00028c  e1a04000          MOV      r4,r0
;;;143    	int c;
;;;144    
;;;145    	c = --mtd->usecount;
000290  e594009c          LDR      r0,[r4,#0x9c]
000294  e2400001          SUB      r0,r0,#1
000298  e584009c          STR      r0,[r4,#0x9c]
00029c  e1a05000          MOV      r5,r0
;;;146    	BUG_ON(c < 0);
0002a0  e1a00000          MOV      r0,r0
0002a4  e3550000          CMP      r5,#0
0002a8  aa000005          BGE      |L1.708|
0002ac  e1a00000          MOV      r0,r0
0002b0  e3a02092          MOV      r2,#0x92
0002b4  e24f10b4          ADR      r1,|L1.520|
0002b8  e24f0084          ADR      r0,|L1.572|
0002bc  ebfffffe          BL       sysprintf
0002c0  e1a00000          MOV      r0,r0
                  |L1.708|
0002c4  e1a00000          MOV      r0,r0
;;;147    }
0002c8  e8bd8070          POP      {r4-r6,pc}
;;;148    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  mtd_table
                          %        128
