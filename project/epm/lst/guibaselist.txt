; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\guibaselist.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\guibaselist.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\guibaselist.crf src\user\guibaselist.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  updateBG PROC
;;;60     /*-----------------------------------------*/
;;;61     static void updateBG(void)
000000  e92d4038          PUSH     {r3-r5,lr}
;;;62     {
;;;63         EPDDrawContainByIDPos(TRUE,EPD_PICT_ALL_WHITE_INDEX,0,0);
000004  e3a03000          MOV      r3,#0
000008  e1a02003          MOV      r2,r3
00000c  e3a01003          MOV      r1,#3
000010  e3a00001          MOV      r0,#1
000014  ebfffffe          BL       EPDDrawContainByIDPos
;;;64         EPDDrawStringMax(FALSE,title,X_HEAD_TITLE,Y_HEAD_TITLE,FALSE);
000018  e3a00000          MOV      r0,#0
00001c  e3a0301c          MOV      r3,#0x1c
000020  e3a0205a          MOV      r2,#0x5a
000024  e58d0000          STR      r0,[sp,#0]
000028  e59f03c0          LDR      r0,|L1.1008|
00002c  e5901000          LDR      r1,[r0,#0]  ; title
000030  e3a00000          MOV      r0,#0
000034  ebfffffe          BL       EPDDrawStringMax
;;;65         //MENU
;;;66         for(int i = 0; ; i++)
000038  e3a04000          MOV      r4,#0
00003c  e1a00000          MOV      r0,r0
                  |L1.64|
;;;67         {
;;;68             //Dont Show Quit
;;;69             if(item[i].charItem == 'q')
000040  e59f03ac          LDR      r0,|L1.1012|
000044  e5900000          LDR      r0,[r0,#0]  ; item
000048  e7d00184          LDRB     r0,[r0,r4,LSL #3]
00004c  e3500071          CMP      r0,#0x71
000050  1a000002          BNE      |L1.96|
;;;70             {
;;;71                 maxSelectItem=i;
000054  e59f039c          LDR      r0,|L1.1016|
000058  e5804000          STR      r4,[r0,#0]  ; maxSelectItem
;;;72                 break;
00005c  ea000021          B        |L1.232|
                  |L1.96|
;;;73             }
;;;74             if(item[i].itemName == NULL)
000060  e59f038c          LDR      r0,|L1.1012|
000064  e5900000          LDR      r0,[r0,#0]  ; item
000068  e0800184          ADD      r0,r0,r4,LSL #3
00006c  e5900004          LDR      r0,[r0,#4]
000070  e3500000          CMP      r0,#0
000074  1a000002          BNE      |L1.132|
;;;75             {
;;;76                 maxSelectItem=i;
000078  e59f0378          LDR      r0,|L1.1016|
00007c  e5804000          STR      r4,[r0,#0]  ; maxSelectItem
;;;77                 break;
000080  ea000018          B        |L1.232|
                  |L1.132|
;;;78             }
;;;79             EPDDrawStringMax(FALSE,item[i].itemName,180,104+(i*STRING_HEIGHT),FALSE);
000084  e3a00000          MOV      r0,#0
000088  e58d0000          STR      r0,[sp,#0]
00008c  e0840184          ADD      r0,r4,r4,LSL #3
000090  e0800204          ADD      r0,r0,r4,LSL #4
000094  e3a02068          MOV      r2,#0x68
000098  e0823080          ADD      r3,r2,r0,LSL #1
00009c  e59f0350          LDR      r0,|L1.1012|
0000a0  e5900000          LDR      r0,[r0,#0]  ; item
0000a4  e0800184          ADD      r0,r0,r4,LSL #3
0000a8  e3a020b4          MOV      r2,#0xb4
0000ac  e5901004          LDR      r1,[r0,#4]
0000b0  e3a00000          MOV      r0,#0
0000b4  ebfffffe          BL       EPDDrawStringMax
;;;80             EPDDrawStringMax(FALSE,"-",150,104+(i*STRING_HEIGHT),TRUE);
0000b8  e3a00001          MOV      r0,#1
0000bc  e58d0000          STR      r0,[sp,#0]
0000c0  e0840184          ADD      r0,r4,r4,LSL #3
0000c4  e0800204          ADD      r0,r0,r4,LSL #4
0000c8  e3a01068          MOV      r1,#0x68
0000cc  e0813080          ADD      r3,r1,r0,LSL #1
0000d0  e3a02096          MOV      r2,#0x96
0000d4  e28f1e32          ADR      r1,|L1.1020|
0000d8  e3a00000          MOV      r0,#0
0000dc  ebfffffe          BL       EPDDrawStringMax
0000e0  e2844001          ADD      r4,r4,#1              ;66
0000e4  eaffffd5          B        |L1.64|
                  |L1.232|
0000e8  e1a00000          MOV      r0,r0                 ;72
;;;81             //EPDDrawContainByIDPos(FALSE,EPD_PICT_LINE_SMALL_2_INDEX,150,104+(i*STRING_HEIGHT));
;;;82         }
;;;83         //Select Item//
;;;84         EPDDrawContainByIDPos(TRUE,EPD_PICT_LINE_SMALL_2_I_INDEX,150,104+(oldIndex*STRING_HEIGHT));
0000ec  e59f030c          LDR      r0,|L1.1024|
0000f0  e5900000          LDR      r0,[r0,#0]  ; oldIndex
0000f4  e0801180          ADD      r1,r0,r0,LSL #3
0000f8  e0810200          ADD      r0,r1,r0,LSL #4
0000fc  e3a01068          MOV      r1,#0x68
000100  e0813080          ADD      r3,r1,r0,LSL #1
000104  e3a02096          MOV      r2,#0x96
000108  e3a0106b          MOV      r1,#0x6b
00010c  e3a00001          MOV      r0,#1
000110  ebfffffe          BL       EPDDrawContainByIDPos
;;;85         //terninalPrintf("======== Tool ========[INFO GUI] <GuiOnDraw>  [%d0'ms].\n", xTaskGetTickCount() - tickLocalStart);
;;;86     }
000114  e8bd8038          POP      {r3-r5,pc}
;;;87     
                          ENDP

                  vDrawingTask PROC
;;;88     static void vDrawingTask( void *pvParameters )
000118  e12fff1e          BX       lr
;;;89     {
;;;90         
;;;91     }
;;;92     /*-----------------------------------------*/
                          ENDP

                  GuiBaseListOnDraw PROC
;;;94     /*-----------------------------------------*/
;;;95     BOOL GuiBaseListOnDraw(uint8_t oriGuiId, uint8_t para, int para2, int para3)
00011c  e92d41f0          PUSH     {r4-r8,lr}
;;;96     {  
000120  e1a06000          MOV      r6,r0
000124  e1a07001          MOV      r7,r1
000128  e1a04002          MOV      r4,r2
00012c  e1a05003          MOV      r5,r3
;;;97         item = ((GUIBaseListItem*)para2)->lisitem;
000130  e59f12bc          LDR      r1,|L1.1012|
000134  e5940004          LDR      r0,[r4,#4]
000138  e5810000          STR      r0,[r1,#0]  ; item
;;;98         title= ((GUIBaseListItem*) para2) -> title;
00013c  e59f12ac          LDR      r1,|L1.1008|
000140  e5940000          LDR      r0,[r4,#0]
000144  e5810000          STR      r0,[r1,#0]  ; title
;;;99         keyinCallback = (KeyinCallback) para3;
000148  e59f02b4          LDR      r0,|L1.1028|
00014c  e5805000          STR      r5,[r0,#0]  ; keyinCallback
;;;100        powerStatus = FALSE;
000150  e3a00000          MOV      r0,#0
000154  e59f12ac          LDR      r1,|L1.1032|
000158  e5c10000          STRB     r0,[r1,#0]  ; powerStatus
;;;101        pGuiGetInterface = GuiGetInterface();
00015c  ebfffffe          BL       GuiGetInterface
000160  e59f12a4          LDR      r1,|L1.1036|
000164  e5810000          STR      r0,[r1,#0]  ; pGuiGetInterface
;;;102        pGuiGetInterface->setTimeoutFunc(UPDATE_BG_TIMER, UPDATE_BG_INTERVAL);
000168  e2810000          ADD      r0,r1,#0
00016c  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
000170  e3e01000          MVN      r1,#0
000174  e590200c          LDR      r2,[r0,#0xc]
000178  e3a00000          MOV      r0,#0
00017c  e12fff32          BLX      r2
;;;103        pGuiGetInterface->setTimeoutFunc(UPDATE_DATA_TIMER, UPDATE_DATA_INTERVAL); 
000180  e59f0284          LDR      r0,|L1.1036|
000184  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
000188  e3a01005          MOV      r1,#5
00018c  e590200c          LDR      r2,[r0,#0xc]
000190  e3a00001          MOV      r0,#1
000194  e12fff32          BLX      r2
;;;104        pGuiGetInterface->setTimeoutFunc(UPDATE_SPACE_DETECT_TIMER, UPDATE_SPACE_DETECT_INTERVAL);      
000198  e59f026c          LDR      r0,|L1.1036|
00019c  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
0001a0  e3e01000          MVN      r1,#0
0001a4  e590200c          LDR      r2,[r0,#0xc]
0001a8  e3a00002          MOV      r0,#2
0001ac  e12fff32          BLX      r2
;;;105        pGuiGetInterface->runTimeoutFunc(UPDATE_BG_TIMER);
0001b0  e59f0254          LDR      r0,|L1.1036|
0001b4  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
0001b8  e5901010          LDR      r1,[r0,#0x10]
0001bc  e3a00000          MOV      r0,#0
0001c0  e12fff31          BLX      r1
;;;106        
;;;107        updateBG();
0001c4  ebfffffe          BL       updateBG
;;;108        return TRUE;
0001c8  e3a00001          MOV      r0,#1
;;;109    }
0001cc  e8bd81f0          POP      {r4-r8,pc}
;;;110    
                          ENDP

                  GuiBaseListUpdateData PROC
;;;111    BOOL GuiBaseListUpdateData(void)
0001d0  e92d4010          PUSH     {r4,lr}
;;;112    {    
;;;113        sysprintf(" [INFO GUI] <Stand By> UpdateData\n");
0001d4  e28f0f8d          ADR      r0,|L1.1040|
0001d8  ebfffffe          BL       sysprintf
;;;114        pGuiGetInterface->runTimeoutFunc(UPDATE_DATA_TIMER);//更新畫面
0001dc  e59f0228          LDR      r0,|L1.1036|
0001e0  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
0001e4  e5901010          LDR      r1,[r0,#0x10]
0001e8  e3a00001          MOV      r0,#1
0001ec  e12fff31          BLX      r1
;;;115        return TRUE;
0001f0  e3a00001          MOV      r0,#1
;;;116    }
0001f4  e8bd8010          POP      {r4,pc}
;;;117    
                          ENDP

                  GuiBaseListKeyCallback PROC
;;;118    BOOL GuiBaseListKeyCallback(uint8_t keyId, uint8_t downUp)
0001f8  e92d4070          PUSH     {r4-r6,lr}
;;;119    {   
0001fc  e1a04000          MOV      r4,r0
000200  e1a05001          MOV      r5,r1
;;;120        BOOL reVal = FALSE; 
000204  e3a06000          MOV      r6,#0
;;;121        //sysprintf(" [INFO GUI] <Stand By> Key:  keyId = %d, downUp = %d\n", keyId, downUp);
;;;122        //if(keyIgnoreFlag)
;;;123        if(keyIgnoreFlag && (keyId < GUI_KEYPAD_NORMAL_ID))
000208  e59f0224          LDR      r0,|L1.1076|
00020c  e5d00000          LDRB     r0,[r0,#0]  ; keyIgnoreFlag
000210  e3500000          CMP      r0,#0
000214  0a000005          BEQ      |L1.560|
000218  e3540010          CMP      r4,#0x10
00021c  aa000003          BGE      |L1.560|
;;;124        {
;;;125            sysprintf(" [INFO GUI] <Stand By> Key:  ignore...\n"); 
000220  e28f0e21          ADR      r0,|L1.1080|
000224  ebfffffe          BL       sysprintf
;;;126            return reVal;
000228  e1a00006          MOV      r0,r6
                  |L1.556|
;;;127        }
;;;128        if(GUI_KEY_DOWN_INDEX == downUp)
;;;129        {
;;;130            switch(keyId)
;;;131            {
;;;132                case GUI_KEYPAD_ONE:
;;;133                    if((nowIndex>0)&&(nowIndex==oldIndex)){
;;;134                        oldIndex=nowIndex;
;;;135                        nowIndex--;
;;;136                        reVal = TRUE;
;;;137                    }
;;;138                    else if((nowIndex==oldIndex)&&(nowIndex==0)){
;;;139                        oldIndex=nowIndex;
;;;140                        nowIndex=MAX_SELECT_ITEM-1;
;;;141                        reVal = TRUE;
;;;142                    }
;;;143                    break;
;;;144                    
;;;145                case GUI_KEYPAD_TWO:
;;;146                    if((nowIndex<(MAX_SELECT_ITEM-1))&&(nowIndex==oldIndex)){
;;;147                        oldIndex=nowIndex;
;;;148                        nowIndex++;
;;;149                        reVal = TRUE;
;;;150                    }
;;;151                    else if((nowIndex==oldIndex)&&(nowIndex==MAX_SELECT_ITEM-1)){
;;;152                        oldIndex=nowIndex;
;;;153                        nowIndex=0;
;;;154                        reVal = TRUE;
;;;155                    }
;;;156                    break;
;;;157                
;;;158                case GUI_KEYPAD_THREE:
;;;159                    reVal = TRUE;
;;;160                    break;
;;;161                
;;;162                case GUI_KEYPAD_FOUR:
;;;163                    reVal = TRUE;
;;;164                    break;
;;;165                
;;;166                case GUI_KEYPAD_FIVE:
;;;167                    if(nowIndex == oldIndex)
;;;168                    {
;;;169                        keyinCallback(item[nowIndex].charItem);
;;;170                        reVal = TRUE;
;;;171                        reVal = TRUE;
;;;172                    }
;;;173                    break;
;;;174                case GUI_KEYPAD_SIX:
;;;175                    keyinCallback('q');
;;;176                    nowIndex = 0;
;;;177                    oldIndex = 0;
;;;178                    reVal = TRUE;
;;;179                    break;
;;;180                case GUI_KEYPAD_NORMAL_ID:                
;;;181                    break;
;;;182                case GUI_KEYPAD_REPLACE_BP_ID:
;;;183                    break;
;;;184                case GUI_KEYPAD_TESTER_ID:
;;;185                    break;
;;;186                 case GUI_KEYPAD_TESTER_KEYPAD_ID:
;;;187                    break;
;;;188                default:
;;;189                    sysprintf(" [INFO GUI] <Stand By> Key:  not support keyId 0x%02x...\n", keyId); 
;;;190                    break;
;;;191            }
;;;192        }
;;;193        return reVal;
;;;194    }
00022c  e8bd8070          POP      {r4-r6,pc}
                  |L1.560|
000230  e3550001          CMP      r5,#1                 ;128
000234  1a0000bc          BNE      |L1.1324|
000238  e3540005          CMP      r4,#5                 ;130
00023c  0a00008e          BEQ      |L1.1148|
000240  ca000007          BGT      |L1.612|
000244  e3540005          CMP      r4,#5                 ;130
000248  308ff104          ADDCC    pc,pc,r4,LSL #2       ;130
00024c  ea0000b0          B        |L1.1300|
000250  ea00009b          B        |L1.1220|
000254  ea000085          B        |L1.1136|
000258  ea000035          B        |L1.820|
00025c  ea000009          B        |L1.648|
000260  ea00007f          B        |L1.1124|
                  |L1.612|
000264  e3540010          CMP      r4,#0x10              ;130
000268  0a0000a1          BEQ      |L1.1268|
00026c  e3540011          CMP      r4,#0x11              ;130
000270  0a0000a1          BEQ      |L1.1276|
000274  e3540013          CMP      r4,#0x13              ;130
000278  0a0000a3          BEQ      |L1.1292|
00027c  e3540014          CMP      r4,#0x14              ;130
000280  1a0000a3          BNE      |L1.1300|
000284  ea00009e          B        |L1.1284|
                  |L1.648|
000288  e1a00000          MOV      r0,r0                 ;132
00028c  e59f01cc          LDR      r0,|L1.1120|
000290  e5900000          LDR      r0,[r0,#0]            ;133  ; nowIndex
000294  e3500000          CMP      r0,#0                 ;133
000298  da000010          BLE      |L1.736|
00029c  e59f01bc          LDR      r0,|L1.1120|
0002a0  e5900000          LDR      r0,[r0,#0]            ;133  ; nowIndex
0002a4  e59f1154          LDR      r1,|L1.1024|
0002a8  e5911000          LDR      r1,[r1,#0]            ;133  ; oldIndex
0002ac  e1500001          CMP      r0,r1                 ;133
0002b0  1a00000a          BNE      |L1.736|
0002b4  e59f01a4          LDR      r0,|L1.1120|
0002b8  e5900000          LDR      r0,[r0,#0]            ;134  ; nowIndex
0002bc  e59f113c          LDR      r1,|L1.1024|
0002c0  e5810000          STR      r0,[r1,#0]            ;134  ; oldIndex
0002c4  e59f0194          LDR      r0,|L1.1120|
0002c8  e5900000          LDR      r0,[r0,#0]            ;135  ; nowIndex
0002cc  e2400001          SUB      r0,r0,#1              ;135
0002d0  e59f1188          LDR      r1,|L1.1120|
0002d4  e5810000          STR      r0,[r1,#0]            ;135  ; nowIndex
0002d8  e3a06001          MOV      r6,#1                 ;136
0002dc  ea000013          B        |L1.816|
                  |L1.736|
0002e0  e59f0178          LDR      r0,|L1.1120|
0002e4  e5900000          LDR      r0,[r0,#0]            ;138  ; nowIndex
0002e8  e59f1110          LDR      r1,|L1.1024|
0002ec  e5911000          LDR      r1,[r1,#0]            ;138  ; oldIndex
0002f0  e1500001          CMP      r0,r1                 ;138
0002f4  1a00000d          BNE      |L1.816|
0002f8  e59f0160          LDR      r0,|L1.1120|
0002fc  e5900000          LDR      r0,[r0,#0]            ;138  ; nowIndex
000300  e3500000          CMP      r0,#0                 ;138
000304  1a000009          BNE      |L1.816|
000308  e59f0150          LDR      r0,|L1.1120|
00030c  e5900000          LDR      r0,[r0,#0]            ;139  ; nowIndex
000310  e59f10e8          LDR      r1,|L1.1024|
000314  e5810000          STR      r0,[r1,#0]            ;139  ; oldIndex
000318  e59f00d8          LDR      r0,|L1.1016|
00031c  e5900000          LDR      r0,[r0,#0]            ;140  ; maxSelectItem
000320  e2400001          SUB      r0,r0,#1              ;140
000324  e59f1134          LDR      r1,|L1.1120|
000328  e5810000          STR      r0,[r1,#0]            ;140  ; nowIndex
00032c  e3a06001          MOV      r6,#1                 ;141
                  |L1.816|
000330  ea00007c          B        |L1.1320|
                  |L1.820|
000334  e1a00000          MOV      r0,r0                 ;145
000338  e59f00b8          LDR      r0,|L1.1016|
00033c  e5900000          LDR      r0,[r0,#0]            ;146  ; maxSelectItem
000340  e2400001          SUB      r0,r0,#1              ;146
000344  e59f1114          LDR      r1,|L1.1120|
000348  e5911000          LDR      r1,[r1,#0]            ;146  ; nowIndex
00034c  e1500001          CMP      r0,r1                 ;146
000350  da000010          BLE      |L1.920|
000354  e59f0104          LDR      r0,|L1.1120|
000358  e5900000          LDR      r0,[r0,#0]            ;146  ; nowIndex
00035c  e59f109c          LDR      r1,|L1.1024|
000360  e5911000          LDR      r1,[r1,#0]            ;146  ; oldIndex
000364  e1500001          CMP      r0,r1                 ;146
000368  1a00000a          BNE      |L1.920|
00036c  e59f00ec          LDR      r0,|L1.1120|
000370  e5900000          LDR      r0,[r0,#0]            ;147  ; nowIndex
000374  e59f1084          LDR      r1,|L1.1024|
000378  e5810000          STR      r0,[r1,#0]            ;147  ; oldIndex
00037c  e59f00dc          LDR      r0,|L1.1120|
000380  e5900000          LDR      r0,[r0,#0]            ;148  ; nowIndex
000384  e2800001          ADD      r0,r0,#1              ;148
000388  e59f10d0          LDR      r1,|L1.1120|
00038c  e5810000          STR      r0,[r1,#0]            ;148  ; nowIndex
000390  e3a06001          MOV      r6,#1                 ;149
000394  ea000014          B        |L1.1004|
                  |L1.920|
000398  e59f00c0          LDR      r0,|L1.1120|
00039c  e5900000          LDR      r0,[r0,#0]            ;151  ; nowIndex
0003a0  e59f1058          LDR      r1,|L1.1024|
0003a4  e5911000          LDR      r1,[r1,#0]            ;151  ; oldIndex
0003a8  e1500001          CMP      r0,r1                 ;151
0003ac  1a00000e          BNE      |L1.1004|
0003b0  e59f0040          LDR      r0,|L1.1016|
0003b4  e5900000          LDR      r0,[r0,#0]            ;151  ; maxSelectItem
0003b8  e2400001          SUB      r0,r0,#1              ;151
0003bc  e59f109c          LDR      r1,|L1.1120|
0003c0  e5911000          LDR      r1,[r1,#0]            ;151  ; nowIndex
0003c4  e1500001          CMP      r0,r1                 ;151
0003c8  1a000007          BNE      |L1.1004|
0003cc  e59f008c          LDR      r0,|L1.1120|
0003d0  e5900000          LDR      r0,[r0,#0]            ;152  ; nowIndex
0003d4  e59f1024          LDR      r1,|L1.1024|
0003d8  e5810000          STR      r0,[r1,#0]            ;152  ; oldIndex
0003dc  e3a00000          MOV      r0,#0                 ;153
0003e0  e59f1078          LDR      r1,|L1.1120|
0003e4  e5810000          STR      r0,[r1,#0]            ;153  ; nowIndex
0003e8  e3a06001          MOV      r6,#1                 ;154
                  |L1.1004|
0003ec  ea00004d          B        |L1.1320|
                  |L1.1008|
                          DCD      title
                  |L1.1012|
                          DCD      item
                  |L1.1016|
                          DCD      maxSelectItem
                  |L1.1020|
0003fc  2d00              DCB      "-",0
0003fe  00                DCB      0
0003ff  00                DCB      0
                  |L1.1024|
                          DCD      oldIndex
                  |L1.1028|
                          DCD      keyinCallback
                  |L1.1032|
                          DCD      powerStatus
                  |L1.1036|
                          DCD      pGuiGetInterface
                  |L1.1040|
000410  205b494e          DCB      " [INFO GUI] <Stand By> UpdateData\n",0
000414  464f2047
000418  55495d20
00041c  3c537461
000420  6e642042
000424  793e2055
000428  70646174
00042c  65446174
000430  610a00  
000433  00                DCB      0
                  |L1.1076|
                          DCD      keyIgnoreFlag
                  |L1.1080|
000438  205b494e          DCB      " [INFO GUI] <Stand By> Key:  ignore...\n",0
00043c  464f2047
000440  55495d20
000444  3c537461
000448  6e642042
00044c  793e204b
000450  65793a20
000454  2069676e
000458  6f72652e
00045c  2e2e0a00
                  |L1.1120|
                          DCD      nowIndex
                  |L1.1124|
000464  e1a00000          MOV      r0,r0                 ;158
000468  e3a06001          MOV      r6,#1                 ;159
00046c  ea00002d          B        |L1.1320|
                  |L1.1136|
000470  e1a00000          MOV      r0,r0                 ;162
000474  e3a06001          MOV      r6,#1                 ;163
000478  ea00002a          B        |L1.1320|
                  |L1.1148|
00047c  e1a00000          MOV      r0,r0                 ;166
000480  e51f0028          LDR      r0,|L1.1120|
000484  e5900000          LDR      r0,[r0,#0]            ;167  ; nowIndex
000488  e51f1090          LDR      r1,|L1.1024|
00048c  e5911000          LDR      r1,[r1,#0]            ;167  ; oldIndex
000490  e1500001          CMP      r0,r1                 ;167
000494  1a000009          BNE      |L1.1216|
000498  e51f10ac          LDR      r1,|L1.1012|
00049c  e5911000          LDR      r1,[r1,#0]            ;169  ; item
0004a0  e51f2048          LDR      r2,|L1.1120|
0004a4  e5922000          LDR      r2,[r2,#0]            ;169  ; nowIndex
0004a8  e7d10182          LDRB     r0,[r1,r2,LSL #3]     ;169
0004ac  e51f10b0          LDR      r1,|L1.1028|
0004b0  e5911000          LDR      r1,[r1,#0]            ;169  ; keyinCallback
0004b4  e12fff31          BLX      r1                    ;169
0004b8  e3a06001          MOV      r6,#1                 ;170
0004bc  e1a00000          MOV      r0,r0                 ;171
                  |L1.1216|
0004c0  ea000018          B        |L1.1320|
                  |L1.1220|
0004c4  e1a00000          MOV      r0,r0                 ;174
0004c8  e3a00071          MOV      r0,#0x71              ;175
0004cc  e51f10d0          LDR      r1,|L1.1028|
0004d0  e5911000          LDR      r1,[r1,#0]            ;175  ; keyinCallback
0004d4  e12fff31          BLX      r1                    ;175
0004d8  e3a00000          MOV      r0,#0                 ;176
0004dc  e51f1084          LDR      r1,|L1.1120|
0004e0  e5810000          STR      r0,[r1,#0]            ;176  ; nowIndex
0004e4  e51f10ec          LDR      r1,|L1.1024|
0004e8  e5810000          STR      r0,[r1,#0]            ;177  ; oldIndex
0004ec  e3a06001          MOV      r6,#1                 ;178
0004f0  ea00000c          B        |L1.1320|
                  |L1.1268|
0004f4  e1a00000          MOV      r0,r0                 ;180
0004f8  ea00000a          B        |L1.1320|
                  |L1.1276|
0004fc  e1a00000          MOV      r0,r0                 ;182
000500  ea000008          B        |L1.1320|
                  |L1.1284|
000504  e1a00000          MOV      r0,r0                 ;184
000508  ea000006          B        |L1.1320|
                  |L1.1292|
00050c  e1a00000          MOV      r0,r0                 ;186
000510  ea000004          B        |L1.1320|
                  |L1.1300|
000514  e1a00000          MOV      r0,r0                 ;188
000518  e1a01004          MOV      r1,r4                 ;189
00051c  e28f0f5a          ADR      r0,|L1.1676|
000520  ebfffffe          BL       sysprintf
000524  e1a00000          MOV      r0,r0                 ;190
                  |L1.1320|
000528  e1a00000          MOV      r0,r0                 ;143
                  |L1.1324|
00052c  e1a00006          MOV      r0,r6                 ;193
000530  eaffff3d          B        |L1.556|
;;;195    BOOL GuiBaseListTimerCallback(uint8_t timerIndex)
                          ENDP

                  GuiBaseListTimerCallback PROC
000534  e92d4010          PUSH     {r4,lr}
;;;196    {
000538  e1a04000          MOV      r4,r0
;;;197        //sysprintf(" [INFO GUI] <Stand By> Timer [%d] : tick = %d!!\n", timerIndex, xTaskGetTickCount());
;;;198        powerStatus = FALSE;  
00053c  e3a00000          MOV      r0,#0
000540  e51f1140          LDR      r1,|L1.1032|
000544  e5c10000          STRB     r0,[r1,#0]  ; powerStatus
;;;199        keyIgnoreFlag = TRUE;
000548  e3a00001          MOV      r0,#1
00054c  e51f1120          LDR      r1,|L1.1076|
000550  e5c10000          STRB     r0,[r1,#0]  ; keyIgnoreFlag
;;;200        if(powerStatusFlag == FALSE)
000554  e59f016c          LDR      r0,|L1.1736|
000558  e5d00000          LDRB     r0,[r0,#0]  ; powerStatusFlag
00055c  e3500000          CMP      r0,#0
000560  1a00002b          BNE      |L1.1556|
;;;201        {
;;;202            switch(timerIndex)
000564  e3540000          CMP      r4,#0
000568  0a000004          BEQ      |L1.1408|
00056c  e3540001          CMP      r4,#1
000570  0a000004          BEQ      |L1.1416|
000574  e3540002          CMP      r4,#2
000578  1a000024          BNE      |L1.1552|
00057c  ea000021          B        |L1.1544|
                  |L1.1408|
;;;203            {
;;;204                case UPDATE_BG_TIMER:
000580  e1a00000          MOV      r0,r0
;;;205                    break;
000584  ea000021          B        |L1.1552|
                  |L1.1416|
;;;206                case UPDATE_DATA_TIMER:
000588  e1a00000          MOV      r0,r0
;;;207                    if(oldIndex!=nowIndex)
00058c  e51f0194          LDR      r0,|L1.1024|
000590  e5900000          LDR      r0,[r0,#0]  ; oldIndex
000594  e51f113c          LDR      r1,|L1.1120|
000598  e5911000          LDR      r1,[r1,#0]  ; nowIndex
00059c  e1500001          CMP      r0,r1
0005a0  0a000017          BEQ      |L1.1540|
;;;208                    {
;;;209                        //deselect item change to black
;;;210                        EPDDrawContainByIDPos(FALSE,EPD_PICT_LINE_SMALL_2_INDEX,150,104+(oldIndex*50));
0005a4  e51f01ac          LDR      r0,|L1.1024|
0005a8  e5900000          LDR      r0,[r0,#0]  ; oldIndex
0005ac  e0801180          ADD      r1,r0,r0,LSL #3
0005b0  e0810200          ADD      r0,r1,r0,LSL #4
0005b4  e3a01068          MOV      r1,#0x68
0005b8  e0813080          ADD      r3,r1,r0,LSL #1
0005bc  e3a02096          MOV      r2,#0x96
0005c0  e3a0105c          MOV      r1,#0x5c
0005c4  e3a00000          MOV      r0,#0
0005c8  ebfffffe          BL       EPDDrawContainByIDPos
;;;211                        //select item change to white
;;;212                        EPDDrawContainByIDPos(TRUE,EPD_PICT_LINE_SMALL_2_I_INDEX,150,104+(nowIndex*50));
0005cc  e51f0174          LDR      r0,|L1.1120|
0005d0  e5900000          LDR      r0,[r0,#0]  ; nowIndex
0005d4  e0801180          ADD      r1,r0,r0,LSL #3
0005d8  e0810200          ADD      r0,r1,r0,LSL #4
0005dc  e3a01068          MOV      r1,#0x68
0005e0  e0813080          ADD      r3,r1,r0,LSL #1
0005e4  e3a02096          MOV      r2,#0x96
0005e8  e3a0106b          MOV      r1,#0x6b
0005ec  e3a00001          MOV      r0,#1
0005f0  ebfffffe          BL       EPDDrawContainByIDPos
;;;213                        oldIndex=nowIndex;
0005f4  e51f019c          LDR      r0,|L1.1120|
0005f8  e5900000          LDR      r0,[r0,#0]  ; nowIndex
0005fc  e51f1204          LDR      r1,|L1.1024|
000600  e5810000          STR      r0,[r1,#0]  ; oldIndex
                  |L1.1540|
;;;214                    }
;;;215                    break;
000604  ea000001          B        |L1.1552|
                  |L1.1544|
;;;216                case UPDATE_SPACE_DETECT_TIMER:
000608  e1a00000          MOV      r0,r0
;;;217                    break;
00060c  e1a00000          MOV      r0,r0
                  |L1.1552|
000610  e1a00000          MOV      r0,r0                 ;205
                  |L1.1556|
;;;218            }
;;;219        }
;;;220        keyIgnoreFlag = FALSE;
000614  e3a00000          MOV      r0,#0
000618  e51f11ec          LDR      r1,|L1.1076|
00061c  e5c10000          STRB     r0,[r1,#0]  ; keyIgnoreFlag
;;;221        powerStatus = TRUE;  
000620  e3a00001          MOV      r0,#1
000624  e51f1224          LDR      r1,|L1.1032|
000628  e5c10000          STRB     r0,[r1,#0]  ; powerStatus
;;;222        return TRUE;
;;;223    }
00062c  e8bd8010          POP      {r4,pc}
;;;224    
                          ENDP

                  GuiBaseListPowerCallbackFunc PROC
;;;225    BOOL GuiBaseListPowerCallbackFunc(uint8_t type, int flag)
000630  e1a02000          MOV      r2,r0
;;;226    {
;;;227        switch(type)
000634  e3520001          CMP      r2,#1
000638  0a000006          BEQ      |L1.1624|
00063c  e3520002          CMP      r2,#2
000640  0a000008          BEQ      |L1.1640|
000644  e3520003          CMP      r2,#3
000648  0a000008          BEQ      |L1.1648|
00064c  e3520004          CMP      r2,#4
000650  1a00000a          BNE      |L1.1664|
000654  ea000007          B        |L1.1656|
                  |L1.1624|
;;;228        {
;;;229            case GUI_POWER_STATUS_INDEX:
000658  e1a00000          MOV      r0,r0
;;;230                return powerStatus;
00065c  e51f025c          LDR      r0,|L1.1032|
000660  e5d00000          LDRB     r0,[r0,#0]  ; powerStatus
                  |L1.1636|
;;;231            case GUI_POWER_ON_INDEX:      
;;;232                break;
;;;233            case GUI_POWER_OFF_INDEX:
;;;234                break;
;;;235            case GUI_POWER_PREV_OFF_INDEX:
;;;236                break;
;;;237        }
;;;238        return TRUE;
;;;239    }
000664  e12fff1e          BX       lr
                  |L1.1640|
000668  e1a00000          MOV      r0,r0                 ;231
00066c  ea000003          B        |L1.1664|
                  |L1.1648|
000670  e1a00000          MOV      r0,r0                 ;233
000674  ea000001          B        |L1.1664|
                  |L1.1656|
000678  e1a00000          MOV      r0,r0                 ;235
00067c  e1a00000          MOV      r0,r0                 ;236
                  |L1.1664|
000680  e1a00000          MOV      r0,r0                 ;232
000684  e3a00001          MOV      r0,#1                 ;238
000688  eafffff5          B        |L1.1636|
;;;240    
                          ENDP

                  |L1.1676|
00068c  205b494e          DCB      " [INFO GUI] <Stand By> Key:  not support keyId 0x%02x.."
000690  464f2047
000694  55495d20
000698  3c537461
00069c  6e642042
0006a0  793e204b
0006a4  65793a20
0006a8  206e6f74
0006ac  20737570
0006b0  706f7274
0006b4  206b6579
0006b8  49642030
0006bc  78253032
0006c0  782e2e  
0006c3  2e0a00            DCB      ".\n",0
0006c6  00                DCB      0
0006c7  00                DCB      0
                  |L1.1736|
                          DCD      powerStatusFlag

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  42617365          DCB      "BaseList",0
000004  4c697374
000008  00      

                          AREA ||.data||, DATA, ALIGN=2

                  maxSelectItem
                          DCD      0x00000000
                  pGuiGetInterface
                          DCD      0x00000000
                  powerStatus
000008  00                DCB      0x00
                  powerStatusFlag
000009  00                DCB      0x00
                  keyIgnoreFlag
00000a  0000              DCB      0x00,0x00
                  keyinCallback
                          DCD      0x00000000
                  nowIndex
                          DCD      0x00000000
                  oldIndex
                          DCD      0x00000000
                  title
                          DCD      ||.conststring||
                  item
                          DCD      0x00000000
