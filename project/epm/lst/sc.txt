; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\sc.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\sc.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\sc.crf ..\..\common\src\BSP\Driver\Source\sc.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SC_IsCardInserted PROC
;;;39       */
;;;40     uint32_t SC_IsCardInserted(UINT sc)
000000  e1a01000          MOV      r1,r0
;;;41     {
;;;42         uint32_t cond1;
;;;43         uint32_t cond2;
;;;44     
;;;45         if(sc == 0) {
000004  e3510000          CMP      r1,#0
000008  1a000008          BNE      |L1.48|
;;;46             cond1 = (inpw(REG_SC0_STATUS) & 0x2000) >> 13;
00000c  e59f05b8          LDR      r0,|L1.1484|
000010  e5900020          LDR      r0,[r0,#0x20]
000014  e2000a02          AND      r0,r0,#0x2000
000018  e1a036a0          LSR      r3,r0,#13
;;;47             cond2 = (inpw(REG_SC0_CTL) & 0x4000000) >> 26;
00001c  e59f05a8          LDR      r0,|L1.1484|
000020  e5900004          LDR      r0,[r0,#4]
000024  e2000301          AND      r0,r0,#0x4000000
000028  e1a02d20          LSR      r2,r0,#26
00002c  ea000007          B        |L1.80|
                  |L1.48|
;;;48         } else {
;;;49             cond1 = (inpw(REG_SC1_STATUS) & 0x2000) >> 13;
000030  e59f0598          LDR      r0,|L1.1488|
000034  e5900000          LDR      r0,[r0,#0]
000038  e2000a02          AND      r0,r0,#0x2000
00003c  e1a036a0          LSR      r3,r0,#13
;;;50             cond2 = (inpw(REG_SC1_CTL) & 0x4000000) >> 26;
000040  e59f058c          LDR      r0,|L1.1492|
000044  e5900000          LDR      r0,[r0,#0]
000048  e2000301          AND      r0,r0,#0x4000000
00004c  e1a02d20          LSR      r2,r0,#26
                  |L1.80|
;;;51         }
;;;52     
;;;53         if(sc == 0 && u32CardStateIgnore[0] == 1)
000050  e3510000          CMP      r1,#0
000054  1a000005          BNE      |L1.112|
000058  e59f0578          LDR      r0,|L1.1496|
00005c  e5900000          LDR      r0,[r0,#0]  ; u32CardStateIgnore
000060  e3500001          CMP      r0,#1
000064  1a000001          BNE      |L1.112|
;;;54             return TRUE;
000068  e3a00001          MOV      r0,#1
                  |L1.108|
;;;55         else if(sc == 1 && u32CardStateIgnore[1] == 1)
;;;56             return TRUE;
;;;57         else if(cond1 != cond2)
;;;58             return FALSE;
;;;59         else
;;;60             return TRUE;
;;;61     }
00006c  e12fff1e          BX       lr
                  |L1.112|
000070  e3510001          CMP      r1,#1                 ;55
000074  1a000005          BNE      |L1.144|
000078  e59f0558          LDR      r0,|L1.1496|
00007c  e5900004          LDR      r0,[r0,#4]            ;55  ; u32CardStateIgnore
000080  e3500001          CMP      r0,#1                 ;55
000084  1a000001          BNE      |L1.144|
000088  e3a00001          MOV      r0,#1                 ;56
00008c  eafffff6          B        |L1.108|
                  |L1.144|
000090  e1530002          CMP      r3,r2                 ;57
000094  0a000001          BEQ      |L1.160|
000098  e3a00000          MOV      r0,#0                 ;58
00009c  eafffff2          B        |L1.108|
                  |L1.160|
0000a0  e3a00001          MOV      r0,#1                 ;60
0000a4  eafffff0          B        |L1.108|
;;;62     
                          ENDP

                  SC_ClearFIFO PROC
;;;68       */
;;;69     void SC_ClearFIFO(UINT sc)
0000a8  e3500000          CMP      r0,#0
;;;70     {
;;;71         if(sc == 0)
0000ac  1a000005          BNE      |L1.200|
;;;72             outpw(REG_SC0_ALTCTL, inpw(REG_SC0_ALTCTL) | 0x3);
0000b0  e59f1514          LDR      r1,|L1.1484|
0000b4  e5911008          LDR      r1,[r1,#8]
0000b8  e3811003          ORR      r1,r1,#3
0000bc  e59f2508          LDR      r2,|L1.1484|
0000c0  e5821008          STR      r1,[r2,#8]
0000c4  ea000004          B        |L1.220|
                  |L1.200|
;;;73         else
;;;74             outpw(REG_SC1_ALTCTL, inpw(REG_SC1_ALTCTL) | 0x3);
0000c8  e59f150c          LDR      r1,|L1.1500|
0000cc  e5911000          LDR      r1,[r1,#0]
0000d0  e3811003          ORR      r1,r1,#3
0000d4  e59f2500          LDR      r2,|L1.1500|
0000d8  e5821000          STR      r1,[r2,#0]
                  |L1.220|
;;;75     }
0000dc  e12fff1e          BX       lr
;;;76     
                          ENDP

                  SC_Close PROC
;;;82       */
;;;83     void SC_Close(UINT sc)
0000e0  e3500000          CMP      r0,#0
;;;84     {
;;;85         if(sc == 0) {
0000e4  1a000006          BNE      |L1.260|
;;;86             outpw(REG_SC0_INTEN, 0);
0000e8  e3a01000          MOV      r1,#0
0000ec  e59f24d8          LDR      r2,|L1.1484|
0000f0  e5821018          STR      r1,[r2,#0x18]
;;;87             outpw(REG_SC0_PINCTL, 0);
0000f4  e5821024          STR      r1,[r2,#0x24]
;;;88             outpw(REG_SC0_ALTCTL, 0);
0000f8  e5821008          STR      r1,[r2,#8]
;;;89             outpw(REG_SC0_CTL, 0);
0000fc  e5821004          STR      r1,[r2,#4]
000100  ea000008          B        |L1.296|
                  |L1.260|
;;;90         } else {
;;;91             outpw(REG_SC1_INTEN, 0);
000104  e3a01000          MOV      r1,#0
000108  e59f24d0          LDR      r2,|L1.1504|
00010c  e5821000          STR      r1,[r2,#0]
;;;92             outpw(REG_SC1_PINCTL, 0);
000110  e282200c          ADD      r2,r2,#0xc
000114  e5821000          STR      r1,[r2,#0]
;;;93             outpw(REG_SC1_ALTCTL, 0);
000118  e242201c          SUB      r2,r2,#0x1c
00011c  e5821000          STR      r1,[r2,#0]
;;;94             outpw(REG_SC1_CTL, 0);
000120  e2422004          SUB      r2,r2,#4
000124  e5821000          STR      r1,[r2,#0]
                  |L1.296|
;;;95         }
;;;96     }
000128  e12fff1e          BX       lr
;;;97     
                          ENDP

                  SC_Open PROC
;;;110      */
;;;111    void SC_Open(UINT sc, UINT u32CD, UINT u32PWR)
00012c  e92d4010          PUSH     {r4,lr}
;;;112    {
;;;113        uint32_t u32Reg = 0;
000130  e3a03000          MOV      r3,#0
;;;114    
;;;115        if(u32CD != SC_PIN_STATE_IGNORE) {
000134  e3710001          CMN      r1,#1
000138  0a000009          BEQ      |L1.356|
;;;116            u32Reg = u32CD ? 0: SC_CTL_CDLV_Msk;
00013c  e3510000          CMP      r1,#0
000140  0a000001          BEQ      |L1.332|
000144  e3a0c000          MOV      r12,#0
000148  ea000000          B        |L1.336|
                  |L1.332|
00014c  e3a0c301          MOV      r12,#0x4000000
                  |L1.336|
000150  e1a0300c          MOV      r3,r12
;;;117            u32CardStateIgnore[sc] = 0;
000154  e3a0c000          MOV      r12,#0
000158  e59f4478          LDR      r4,|L1.1496|
00015c  e784c100          STR      r12,[r4,r0,LSL #2]
000160  ea000002          B        |L1.368|
                  |L1.356|
;;;118        } else {
;;;119            u32CardStateIgnore[sc] = 1;
000164  e3a0c001          MOV      r12,#1
000168  e59f4468          LDR      r4,|L1.1496|
00016c  e784c100          STR      r12,[r4,r0,LSL #2]
                  |L1.368|
;;;120        }
;;;121        if(sc == 0) {
000170  e3500000          CMP      r0,#0
000174  1a000014          BNE      |L1.460|
;;;122            while(inpw(REG_SC0_PINCTL) & SC_PINCTL_SYNC_Msk);
000178  e1a00000          MOV      r0,r0
                  |L1.380|
00017c  e59fc448          LDR      r12,|L1.1484|
000180  e59cc024          LDR      r12,[r12,#0x24]
000184  e31c0101          TST      r12,#0x40000000
000188  1afffffb          BNE      |L1.380|
;;;123            outpw(REG_SC0_PINCTL, u32PWR ? 0 : SC_PINCTL_PWRINV_Msk);
00018c  e3520000          CMP      r2,#0
000190  0a000001          BEQ      |L1.412|
000194  e3a0c000          MOV      r12,#0
000198  ea000000          B        |L1.416|
                  |L1.412|
00019c  e3a0cb02          MOV      r12,#0x800
                  |L1.416|
0001a0  e59f4424          LDR      r4,|L1.1484|
0001a4  e584c024          STR      r12,[r4,#0x24]
;;;124            while(inpw(REG_SC0_CTL) & SC_CTL_SYNC_Msk);
0001a8  e1a00000          MOV      r0,r0
                  |L1.428|
0001ac  e59fc418          LDR      r12,|L1.1484|
0001b0  e59cc004          LDR      r12,[r12,#4]
0001b4  e31c0101          TST      r12,#0x40000000
0001b8  1afffffb          BNE      |L1.428|
;;;125            outpw(REG_SC0_CTL, SC_CTL_SCEN_Msk | u32Reg);
0001bc  e383c001          ORR      r12,r3,#1
0001c0  e59f4404          LDR      r4,|L1.1484|
0001c4  e584c004          STR      r12,[r4,#4]
0001c8  ea000013          B        |L1.540|
                  |L1.460|
;;;126        } else {
;;;127            while(inpw(REG_SC1_PINCTL) & SC_PINCTL_SYNC_Msk);
0001cc  e1a00000          MOV      r0,r0
                  |L1.464|
0001d0  e59fc40c          LDR      r12,|L1.1508|
0001d4  e59cc000          LDR      r12,[r12,#0]
0001d8  e31c0101          TST      r12,#0x40000000
0001dc  1afffffb          BNE      |L1.464|
;;;128            outpw(REG_SC1_PINCTL, u32PWR ? 0 : SC_PINCTL_PWRINV_Msk);
0001e0  e3520000          CMP      r2,#0
0001e4  0a000001          BEQ      |L1.496|
0001e8  e3a0c000          MOV      r12,#0
0001ec  ea000000          B        |L1.500|
                  |L1.496|
0001f0  e3a0cb02          MOV      r12,#0x800
                  |L1.500|
0001f4  e59f43e8          LDR      r4,|L1.1508|
0001f8  e584c000          STR      r12,[r4,#0]
;;;129            while(inpw(REG_SC1_CTL) & SC_CTL_SYNC_Msk);
0001fc  e1a00000          MOV      r0,r0
                  |L1.512|
000200  e59fc3cc          LDR      r12,|L1.1492|
000204  e59cc000          LDR      r12,[r12,#0]
000208  e31c0101          TST      r12,#0x40000000
00020c  1afffffb          BNE      |L1.512|
;;;130            outpw(REG_SC1_CTL, SC_CTL_SCEN_Msk | u32Reg);
000210  e383c001          ORR      r12,r3,#1
000214  e59f43b8          LDR      r4,|L1.1492|
000218  e584c000          STR      r12,[r4,#0]
                  |L1.540|
;;;131        }
;;;132    }
00021c  e8bd8010          POP      {r4,pc}
;;;133    
                          ENDP

                  SC_ResetReader PROC
;;;139      */
;;;140    void SC_ResetReader(UINT sc)
000220  e3500000          CMP      r0,#0
;;;141    {
;;;142        if(sc == 0) {
000224  1a000021          BNE      |L1.688|
;;;143            // Reset FIFO, enable auto de-activation while card removal
;;;144            outpw(REG_SC0_ALTCTL, inpw(REG_SC0_ALTCTL) | SC_ALTCTL_TXRST_Msk | SC_ALTCTL_RXRST_Msk | SC_ALTCTL_ADACEN_Msk);
000228  e59f139c          LDR      r1,|L1.1484|
00022c  e5911008          LDR      r1,[r1,#8]
000230  e3811b02          ORR      r1,r1,#0x800
000234  e3811003          ORR      r1,r1,#3
000238  e59f238c          LDR      r2,|L1.1484|
00023c  e5821008          STR      r1,[r2,#8]
;;;145            // Set Rx trigger level to 1 character, longest card detect debounce period, disable error retry (EMV ATR does not use error retry)
;;;146            while(inpw(REG_SC0_CTL) & SC_CTL_SYNC_Msk);
000240  e1a00000          MOV      r0,r0
                  |L1.580|
000244  e59f1380          LDR      r1,|L1.1484|
000248  e5911004          LDR      r1,[r1,#4]
00024c  e3110101          TST      r1,#0x40000000
000250  1afffffb          BNE      |L1.580|
;;;147            // Enable auto convention, and all three smartcard internal timers
;;;148            outpw(REG_SC0_CTL, (inpw(REG_SC0_CTL) & ~(SC_CTL_RXTRGLV_Msk | SC_CTL_CDDBSEL_Msk | SC_CTL_TXRTY_Msk | SC_CTL_RXRTY_Msk)) | SC_CTL_AUTOCEN_Msk | SC_CTL_TMRSEL_Msk);
000254  e59f1370          LDR      r1,|L1.1484|
000258  e5911004          LDR      r1,[r1,#4]
00025c  e59f2384          LDR      r2,|L1.1512|
000260  e0011002          AND      r1,r1,r2
000264  e3811a06          ORR      r1,r1,#0x6000
000268  e3811008          ORR      r1,r1,#8
00026c  e59f2358          LDR      r2,|L1.1484|
000270  e5821004          STR      r1,[r2,#4]
;;;149    
;;;150            // Disable Rx timeout
;;;151            outpw(REG_SC0_RXTOUT, 0);
000274  e3a01000          MOV      r1,#0
000278  e5821010          STR      r1,[r2,#0x10]
;;;152            // 372 clocks per ETU by default
;;;153            outpw(REG_SC0_ETUCTL, 371);
00027c  e59f1368          LDR      r1,|L1.1516|
000280  e5821014          STR      r1,[r2,#0x14]
;;;154    
;;;155            /* Enable necessary interrupt for smartcard operation */
;;;156            if(u32CardStateIgnore[0]) // Do not enable card detect interrupt if card present state ignore
000284  e59f134c          LDR      r1,|L1.1496|
000288  e5911000          LDR      r1,[r1,#0]  ; u32CardStateIgnore
00028c  e3510000          CMP      r1,#0
000290  0a000002          BEQ      |L1.672|
;;;157                outpw(REG_SC0_INTEN, SC_INTEN_RDAIEN_Msk |
000294  e59f1354          LDR      r1,|L1.1520|
000298  e5821018          STR      r1,[r2,#0x18]
00029c  ea000027          B        |L1.832|
                  |L1.672|
;;;158                      SC_INTEN_TERRIEN_Msk |
;;;159                      SC_INTEN_TMR0IEN_Msk |
;;;160                      SC_INTEN_TMR1IEN_Msk |
;;;161                      SC_INTEN_TMR2IEN_Msk |
;;;162                      SC_INTEN_BGTIEN_Msk |
;;;163                      SC_INTEN_ACERRIEN_Msk);
;;;164            else
;;;165                outpw(REG_SC0_INTEN, SC_INTEN_RDAIEN_Msk |
0002a0  e59f134c          LDR      r1,|L1.1524|
0002a4  e59f2320          LDR      r2,|L1.1484|
0002a8  e5821018          STR      r1,[r2,#0x18]
0002ac  ea000023          B        |L1.832|
                  |L1.688|
;;;166                      SC_INTEN_TERRIEN_Msk |
;;;167                      SC_INTEN_TMR0IEN_Msk |
;;;168                      SC_INTEN_TMR1IEN_Msk |
;;;169                      SC_INTEN_TMR2IEN_Msk |
;;;170                      SC_INTEN_BGTIEN_Msk |
;;;171                      SC_INTEN_ACERRIEN_Msk |
;;;172                      SC_INTEN_CDIEN_Msk);
;;;173        } else {
;;;174            // Reset FIFO, enable auto de-activation while card removal
;;;175            outpw(REG_SC1_ALTCTL, inpw(REG_SC1_ALTCTL) | SC_ALTCTL_TXRST_Msk | SC_ALTCTL_RXRST_Msk | SC_ALTCTL_ADACEN_Msk);
0002b0  e59f1324          LDR      r1,|L1.1500|
0002b4  e5911000          LDR      r1,[r1,#0]
0002b8  e3811b02          ORR      r1,r1,#0x800
0002bc  e3811003          ORR      r1,r1,#3
0002c0  e59f2314          LDR      r2,|L1.1500|
0002c4  e5821000          STR      r1,[r2,#0]
;;;176            // Set Rx trigger level to 1 character, longest card detect debounce period, disable error retry (EMV ATR does not use error retry)
;;;177            while(inpw(REG_SC1_CTL) & SC_CTL_SYNC_Msk);
0002c8  e1a00000          MOV      r0,r0
                  |L1.716|
0002cc  e59f1300          LDR      r1,|L1.1492|
0002d0  e5911000          LDR      r1,[r1,#0]
0002d4  e3110101          TST      r1,#0x40000000
0002d8  1afffffb          BNE      |L1.716|
;;;178            // Enable auto convention, and all three smartcard internal timers
;;;179            outpw(REG_SC1_CTL, (inpw(REG_SC1_CTL) & ~(SC_CTL_RXTRGLV_Msk | SC_CTL_CDDBSEL_Msk | SC_CTL_TXRTY_Msk | SC_CTL_RXRTY_Msk)) | SC_CTL_AUTOCEN_Msk | SC_CTL_TMRSEL_Msk);
0002dc  e59f12f0          LDR      r1,|L1.1492|
0002e0  e5911000          LDR      r1,[r1,#0]
0002e4  e59f22fc          LDR      r2,|L1.1512|
0002e8  e0011002          AND      r1,r1,r2
0002ec  e3811a06          ORR      r1,r1,#0x6000
0002f0  e3811008          ORR      r1,r1,#8
0002f4  e59f22d8          LDR      r2,|L1.1492|
0002f8  e5821000          STR      r1,[r2,#0]
;;;180    
;;;181            // Disable Rx timeout
;;;182            outpw(REG_SC1_RXTOUT, 0);
0002fc  e3a01000          MOV      r1,#0
000300  e282200c          ADD      r2,r2,#0xc
000304  e5821000          STR      r1,[r2,#0]
;;;183            // 372 clocks per ETU by default
;;;184            outpw(REG_SC1_ETUCTL, 371);
000308  e59f12dc          LDR      r1,|L1.1516|
00030c  e2822004          ADD      r2,r2,#4
000310  e5821000          STR      r1,[r2,#0]
;;;185    
;;;186            /* Enable necessary interrupt for smartcard operation */
;;;187            if(u32CardStateIgnore[1]) // Do not enable card detect interrupt if card present state ignore
000314  e59f12bc          LDR      r1,|L1.1496|
000318  e5911004          LDR      r1,[r1,#4]  ; u32CardStateIgnore
00031c  e3510000          CMP      r1,#0
000320  0a000003          BEQ      |L1.820|
;;;188                outpw(REG_SC1_INTEN, SC_INTEN_RDAIEN_Msk |
000324  e59f12c4          LDR      r1,|L1.1520|
000328  e0822441          ADD      r2,r2,r1,ASR #8
00032c  e5821000          STR      r1,[r2,#0]
000330  ea000002          B        |L1.832|
                  |L1.820|
;;;189                      SC_INTEN_TERRIEN_Msk |
;;;190                      SC_INTEN_TMR0IEN_Msk |
;;;191                      SC_INTEN_TMR1IEN_Msk |
;;;192                      SC_INTEN_TMR2IEN_Msk |
;;;193                      SC_INTEN_BGTIEN_Msk |
;;;194                      SC_INTEN_ACERRIEN_Msk);
;;;195            else
;;;196                outpw(REG_SC1_INTEN, SC_INTEN_RDAIEN_Msk |
000334  e59f12b8          LDR      r1,|L1.1524|
000338  e59f22a0          LDR      r2,|L1.1504|
00033c  e5821000          STR      r1,[r2,#0]
                  |L1.832|
;;;197                      SC_INTEN_TERRIEN_Msk |
;;;198                      SC_INTEN_TMR0IEN_Msk |
;;;199                      SC_INTEN_TMR1IEN_Msk |
;;;200                      SC_INTEN_TMR2IEN_Msk |
;;;201                      SC_INTEN_BGTIEN_Msk |
;;;202                      SC_INTEN_ACERRIEN_Msk |
;;;203                      SC_INTEN_CDIEN_Msk);
;;;204        }
;;;205        return;
;;;206    }
000340  e12fff1e          BX       lr
;;;207    
                          ENDP

                  SC_SetBlockGuardTime PROC
;;;214      */
;;;215    void SC_SetBlockGuardTime(UINT sc, UINT u32BGT)
000344  e3500000          CMP      r0,#0
;;;216    {
;;;217        if(sc == 0)
000348  1a000007          BNE      |L1.876|
;;;218            outpw(REG_SC0_CTL, (inpw(REG_SC0_CTL) & ~0x1F00) | ((u32BGT - 1) << 8));
00034c  e59f2278          LDR      r2,|L1.1484|
000350  e5922004          LDR      r2,[r2,#4]
000354  e3c22c1f          BIC      r2,r2,#0x1f00
000358  e2413001          SUB      r3,r1,#1
00035c  e1822403          ORR      r2,r2,r3,LSL #8
000360  e59f3264          LDR      r3,|L1.1484|
000364  e5832004          STR      r2,[r3,#4]
000368  ea000006          B        |L1.904|
                  |L1.876|
;;;219        else
;;;220            outpw(REG_SC1_CTL, (inpw(REG_SC1_CTL) & ~0x1F00) | ((u32BGT - 1) << 8));
00036c  e59f2260          LDR      r2,|L1.1492|
000370  e5922000          LDR      r2,[r2,#0]
000374  e3c22c1f          BIC      r2,r2,#0x1f00
000378  e2413001          SUB      r3,r1,#1
00037c  e1822403          ORR      r2,r2,r3,LSL #8
000380  e59f324c          LDR      r3,|L1.1492|
000384  e5832000          STR      r2,[r3,#0]
                  |L1.904|
;;;221    }
000388  e12fff1e          BX       lr
;;;222    
                          ENDP

                  SC_SetCharGuardTime PROC
;;;229      */
;;;230    void SC_SetCharGuardTime(UINT sc, UINT u32CGT)
00038c  e3500000          CMP      r0,#0
;;;231    {
;;;232        if(sc == 0) {
000390  1a00000a          BNE      |L1.960|
;;;233            u32CGT -= inpw(REG_SC0_CTL) & SC_CTL_NSB_Msk ? 11 : 12;
000394  e59f2230          LDR      r2,|L1.1484|
000398  e5922004          LDR      r2,[r2,#4]
00039c  e3120902          TST      r2,#0x8000
0003a0  0a000001          BEQ      |L1.940|
0003a4  e3a0200b          MOV      r2,#0xb
0003a8  ea000000          B        |L1.944|
                  |L1.940|
0003ac  e3a0200c          MOV      r2,#0xc
                  |L1.944|
0003b0  e0411002          SUB      r1,r1,r2
;;;234            outpw(REG_SC0_EGT, u32CGT);
0003b4  e59f2210          LDR      r2,|L1.1484|
0003b8  e582100c          STR      r1,[r2,#0xc]
0003bc  ea000009          B        |L1.1000|
                  |L1.960|
;;;235        } else {
;;;236            u32CGT -= inpw(REG_SC1_CTL) & SC_CTL_NSB_Msk ? 11 : 12;
0003c0  e59f220c          LDR      r2,|L1.1492|
0003c4  e5922000          LDR      r2,[r2,#0]
0003c8  e3120902          TST      r2,#0x8000
0003cc  0a000001          BEQ      |L1.984|
0003d0  e3a0200b          MOV      r2,#0xb
0003d4  ea000000          B        |L1.988|
                  |L1.984|
0003d8  e3a0200c          MOV      r2,#0xc
                  |L1.988|
0003dc  e0411002          SUB      r1,r1,r2
;;;237            outpw(REG_SC1_EGT, u32CGT);
0003e0  e59f2210          LDR      r2,|L1.1528|
0003e4  e5821000          STR      r1,[r2,#0]
                  |L1.1000|
;;;238        }
;;;239    }
0003e8  e12fff1e          BX       lr
;;;240    
                          ENDP

                  SC_StopAllTimer PROC
;;;247      */
;;;248    void SC_StopAllTimer(UINT sc)
0003ec  e3500000          CMP      r0,#0
;;;249    {
;;;250        if(sc == 0)
0003f0  1a000005          BNE      |L1.1036|
;;;251            outpw(REG_SC0_ALTCTL, inpw(REG_SC0_ALTCTL) & ~(SC_ALTCTL_CNTEN0_Msk | SC_ALTCTL_CNTEN1_Msk | SC_ALTCTL_CNTEN2_Msk));
0003f4  e59f11d0          LDR      r1,|L1.1484|
0003f8  e5911008          LDR      r1,[r1,#8]
0003fc  e3c110e0          BIC      r1,r1,#0xe0
000400  e59f21c4          LDR      r2,|L1.1484|
000404  e5821008          STR      r1,[r2,#8]
000408  ea000004          B        |L1.1056|
                  |L1.1036|
;;;252        else
;;;253            outpw(REG_SC1_ALTCTL, inpw(REG_SC1_ALTCTL) & ~(SC_ALTCTL_CNTEN0_Msk | SC_ALTCTL_CNTEN1_Msk | SC_ALTCTL_CNTEN2_Msk));
00040c  e59f11c8          LDR      r1,|L1.1500|
000410  e5911000          LDR      r1,[r1,#0]
000414  e3c110e0          BIC      r1,r1,#0xe0
000418  e59f21bc          LDR      r2,|L1.1500|
00041c  e5821000          STR      r1,[r2,#0]
                  |L1.1056|
;;;254    }
000420  e12fff1e          BX       lr
;;;255    
                          ENDP

                  SC_StartTimer PROC
;;;277      */
;;;278    void SC_StartTimer(UINT sc, UINT u32TimerNum, UINT u32Mode, UINT u32ETUCount)
000424  e92d4030          PUSH     {r4,r5,lr}
;;;279    {
000428  e1a0c000          MOV      r12,r0
;;;280        uint32_t reg = u32Mode | (0xFFFFFF & (u32ETUCount - 1));
00042c  e2434001          SUB      r4,r3,#1
000430  e3c444ff          BIC      r4,r4,#0xff000000
000434  e1840002          ORR      r0,r4,r2
;;;281    
;;;282        if(sc == 0) {
000438  e35c0000          CMP      r12,#0
00043c  1a000018          BNE      |L1.1188|
;;;283            if(u32TimerNum == 0) {
000440  e3510000          CMP      r1,#0
000444  1a000006          BNE      |L1.1124|
;;;284                outpw(REG_SC0_TMRCTL0, reg);
000448  e59f417c          LDR      r4,|L1.1484|
00044c  e5840028          STR      r0,[r4,#0x28]
;;;285                outpw(REG_SC0_ALTCTL, inpw(REG_SC0_ALTCTL) | SC_ALTCTL_CNTEN0_Msk);
000450  e5944008          LDR      r4,[r4,#8]
000454  e3844020          ORR      r4,r4,#0x20
000458  e59f516c          LDR      r5,|L1.1484|
00045c  e5854008          STR      r4,[r5,#8]
000460  ea00002a          B        |L1.1296|
                  |L1.1124|
;;;286            } else if(u32TimerNum == 1) {
000464  e3510001          CMP      r1,#1
000468  1a000006          BNE      |L1.1160|
;;;287                outpw(REG_SC0_TMRCTL1, reg);
00046c  e59f4158          LDR      r4,|L1.1484|
000470  e584002c          STR      r0,[r4,#0x2c]
;;;288                outpw(REG_SC0_ALTCTL, inpw(REG_SC0_ALTCTL) | SC_ALTCTL_CNTEN1_Msk);
000474  e5944008          LDR      r4,[r4,#8]
000478  e3844040          ORR      r4,r4,#0x40
00047c  e59f5148          LDR      r5,|L1.1484|
000480  e5854008          STR      r4,[r5,#8]
000484  ea000021          B        |L1.1296|
                  |L1.1160|
;;;289            } else {   // timer 2
;;;290                outpw(REG_SC0_TMRCTL2, reg);
000488  e59f413c          LDR      r4,|L1.1484|
00048c  e5840030          STR      r0,[r4,#0x30]
;;;291                outpw(REG_SC0_ALTCTL, inpw(REG_SC0_ALTCTL) | SC_ALTCTL_CNTEN2_Msk);
000490  e5944008          LDR      r4,[r4,#8]
000494  e3844080          ORR      r4,r4,#0x80
000498  e59f512c          LDR      r5,|L1.1484|
00049c  e5854008          STR      r4,[r5,#8]
0004a0  ea00001a          B        |L1.1296|
                  |L1.1188|
;;;292            }
;;;293        } else {
;;;294            if(u32TimerNum == 0) {
0004a4  e3510000          CMP      r1,#0
0004a8  1a000007          BNE      |L1.1228|
;;;295                outpw(REG_SC1_TMRCTL0, reg);
0004ac  e59f4148          LDR      r4,|L1.1532|
0004b0  e5840000          STR      r0,[r4,#0]
;;;296                outpw(REG_SC1_ALTCTL, inpw(REG_SC1_ALTCTL) | SC_ALTCTL_CNTEN0_Msk);
0004b4  e2444020          SUB      r4,r4,#0x20
0004b8  e5944000          LDR      r4,[r4,#0]
0004bc  e3844020          ORR      r4,r4,#0x20
0004c0  e59f5114          LDR      r5,|L1.1500|
0004c4  e5854000          STR      r4,[r5,#0]
0004c8  ea000010          B        |L1.1296|
                  |L1.1228|
;;;297            } else if(u32TimerNum == 1) {
0004cc  e3510001          CMP      r1,#1
0004d0  1a000007          BNE      |L1.1268|
;;;298                outpw(REG_SC1_TMRCTL1, reg);
0004d4  e59f4124          LDR      r4,|L1.1536|
0004d8  e5840000          STR      r0,[r4,#0]
;;;299                outpw(REG_SC1_ALTCTL, inpw(REG_SC1_ALTCTL) | SC_ALTCTL_CNTEN1_Msk);
0004dc  e2444024          SUB      r4,r4,#0x24
0004e0  e5944000          LDR      r4,[r4,#0]
0004e4  e3844040          ORR      r4,r4,#0x40
0004e8  e59f50ec          LDR      r5,|L1.1500|
0004ec  e5854000          STR      r4,[r5,#0]
0004f0  ea000006          B        |L1.1296|
                  |L1.1268|
;;;300            } else {   // timer 2
;;;301                outpw(REG_SC1_TMRCTL2, reg);
0004f4  e59f4108          LDR      r4,|L1.1540|
0004f8  e5840000          STR      r0,[r4,#0]
;;;302                outpw(REG_SC1_ALTCTL, inpw(REG_SC1_ALTCTL) | SC_ALTCTL_CNTEN2_Msk);
0004fc  e2444028          SUB      r4,r4,#0x28
000500  e5944000          LDR      r4,[r4,#0]
000504  e3844080          ORR      r4,r4,#0x80
000508  e59f50cc          LDR      r5,|L1.1500|
00050c  e5854000          STR      r4,[r5,#0]
                  |L1.1296|
;;;303            }
;;;304    
;;;305        }
;;;306    }
000510  e8bd8030          POP      {r4,r5,pc}
;;;307    
                          ENDP

                  SC_StopTimer PROC
;;;315      */
;;;316    void SC_StopTimer(UINT sc, UINT u32TimerNum)
000514  e3500000          CMP      r0,#0
;;;317    {
;;;318        if(sc == 0) {
000518  1a000015          BNE      |L1.1396|
;;;319            if(u32TimerNum == 0)
00051c  e3510000          CMP      r1,#0
000520  1a000005          BNE      |L1.1340|
;;;320                outpw(REG_SC0_ALTCTL, inpw(REG_SC0_ALTCTL) & ~SC_ALTCTL_CNTEN0_Msk);
000524  e59f20a0          LDR      r2,|L1.1484|
000528  e5922008          LDR      r2,[r2,#8]
00052c  e3c22020          BIC      r2,r2,#0x20
000530  e59f3094          LDR      r3,|L1.1484|
000534  e5832008          STR      r2,[r3,#8]
000538  ea000022          B        |L1.1480|
                  |L1.1340|
;;;321            else if(u32TimerNum == 1)
00053c  e3510001          CMP      r1,#1
000540  1a000005          BNE      |L1.1372|
;;;322                outpw(REG_SC0_ALTCTL, inpw(REG_SC0_ALTCTL) & ~SC_ALTCTL_CNTEN1_Msk);
000544  e59f2080          LDR      r2,|L1.1484|
000548  e5922008          LDR      r2,[r2,#8]
00054c  e3c22040          BIC      r2,r2,#0x40
000550  e59f3074          LDR      r3,|L1.1484|
000554  e5832008          STR      r2,[r3,#8]
000558  ea00001a          B        |L1.1480|
                  |L1.1372|
;;;323            else    // timer 2
;;;324                outpw(REG_SC0_ALTCTL, inpw(REG_SC0_ALTCTL) & ~SC_ALTCTL_CNTEN2_Msk);
00055c  e59f2068          LDR      r2,|L1.1484|
000560  e5922008          LDR      r2,[r2,#8]
000564  e3c22080          BIC      r2,r2,#0x80
000568  e59f305c          LDR      r3,|L1.1484|
00056c  e5832008          STR      r2,[r3,#8]
000570  ea000014          B        |L1.1480|
                  |L1.1396|
;;;325    
;;;326        } else {
;;;327            if(u32TimerNum == 0)
000574  e3510000          CMP      r1,#0
000578  1a000005          BNE      |L1.1428|
;;;328                outpw(REG_SC1_ALTCTL, inpw(REG_SC1_ALTCTL) & ~SC_ALTCTL_CNTEN0_Msk);
00057c  e59f2058          LDR      r2,|L1.1500|
000580  e5922000          LDR      r2,[r2,#0]
000584  e3c22020          BIC      r2,r2,#0x20
000588  e59f304c          LDR      r3,|L1.1500|
00058c  e5832000          STR      r2,[r3,#0]
000590  ea00000c          B        |L1.1480|
                  |L1.1428|
;;;329            else if(u32TimerNum == 1)
000594  e3510001          CMP      r1,#1
000598  1a000005          BNE      |L1.1460|
;;;330                outpw(REG_SC1_ALTCTL, inpw(REG_SC1_ALTCTL) & ~SC_ALTCTL_CNTEN1_Msk);
00059c  e59f2038          LDR      r2,|L1.1500|
0005a0  e5922000          LDR      r2,[r2,#0]
0005a4  e3c22040          BIC      r2,r2,#0x40
0005a8  e59f302c          LDR      r3,|L1.1500|
0005ac  e5832000          STR      r2,[r3,#0]
0005b0  ea000004          B        |L1.1480|
                  |L1.1460|
;;;331            else    // timer 2
;;;332                outpw(REG_SC1_ALTCTL, inpw(REG_SC1_ALTCTL) & ~SC_ALTCTL_CNTEN2_Msk);
0005b4  e59f2020          LDR      r2,|L1.1500|
0005b8  e5922000          LDR      r2,[r2,#0]
0005bc  e3c22080          BIC      r2,r2,#0x80
0005c0  e59f3014          LDR      r3,|L1.1500|
0005c4  e5832000          STR      r2,[r3,#0]
                  |L1.1480|
;;;333        }
;;;334    }
0005c8  e12fff1e          BX       lr
;;;335    
                          ENDP

                  |L1.1484|
                          DCD      0xb8005000
                  |L1.1488|
                          DCD      0xb8005420
                  |L1.1492|
                          DCD      0xb8005404
                  |L1.1496|
                          DCD      u32CardStateIgnore
                  |L1.1500|
                          DCD      0xb8005408
                  |L1.1504|
                          DCD      0xb8005418
                  |L1.1508|
                          DCD      0xb8005424
                  |L1.1512|
                          DCD      0xfc88ff3f
                  |L1.1516|
                          DCD      0x00000173
                  |L1.1520|
                          DCD      0x0000047d
                  |L1.1524|
                          DCD      0x000004fd
                  |L1.1528|
                          DCD      0xb800540c
                  |L1.1532|
                          DCD      0xb8005428
                  |L1.1536|
                          DCD      0xb800542c
                  |L1.1540|
                          DCD      0xb8005430

                          AREA ||.data||, DATA, ALIGN=2

                  u32CardStateIgnore
                          DCD      0x00000000
                          DCD      0x00000000
