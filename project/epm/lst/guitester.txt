; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\guitester.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\guitester.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\guitester.crf src\User\guitester.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  updateContain PROC
;;;53     
;;;54     static void updateContain(void)
000000  e12fff1e          BX       lr
;;;55     {
;;;56     
;;;57     }
;;;58     static void updateBG(void)
                          ENDP

                  updateBG PROC
000004  e92d4070          PUSH     {r4-r6,lr}
;;;59     {
;;;60     
;;;61         TickType_t tickLocalStart = xTaskGetTickCount();
000008  ebfffffe          BL       xTaskGetTickCount
00000c  e1a04000          MOV      r4,r0
;;;62         //sysprintf(" [INFO GUI] <Tester> updateBG enter: cost ticks = [%d]\n", xTaskGetTickCount() - tickStart);   
;;;63     //    EPDShowBGScreen(EPD_PICT_INDEX_TESTER, TRUE); 
;;;64         updateContain();
000010  ebfffffe          BL       updateContain
;;;65         sysprintf(" [INFO GUI] <Tester> updateBG: **Local:[%d]**, **[%d]**\n", xTaskGetTickCount() - tickLocalStart, xTaskGetTickCount() - tickStart);    
000014  ebfffffe          BL       xTaskGetTickCount
000018  e59f1214          LDR      r1,|L1.564|
00001c  e5911000          LDR      r1,[r1,#0]  ; tickStart
000020  e0405001          SUB      r5,r0,r1
000024  ebfffffe          BL       xTaskGetTickCount
000028  e0406004          SUB      r6,r0,r4
00002c  e1a02005          MOV      r2,r5
000030  e1a01006          MOV      r1,r6
000034  e28f0f7f          ADR      r0,|L1.568|
000038  ebfffffe          BL       sysprintf
;;;66       
;;;67     }
00003c  e8bd8070          POP      {r4-r6,pc}
;;;68     
                          ENDP

                  updateData PROC
;;;69     static void updateData(void)
000040  e92d4070          PUSH     {r4-r6,lr}
;;;70     {
;;;71         TickType_t tickLocalStart = xTaskGetTickCount();
000044  ebfffffe          BL       xTaskGetTickCount
000048  e1a04000          MOV      r4,r0
;;;72         updateContain();
00004c  ebfffffe          BL       updateContain
;;;73         sysprintf(" [INFO GUI] <Tester> updateData: [%d]. \n", xTaskGetTickCount() - tickLocalStart);
000050  ebfffffe          BL       xTaskGetTickCount
000054  e0405004          SUB      r5,r0,r4
000058  e1a01005          MOV      r1,r5
00005c  e28f0e21          ADR      r0,|L1.628|
000060  ebfffffe          BL       sysprintf
;;;74     }
000064  e8bd8070          POP      {r4-r6,pc}
;;;75     
                          ENDP

                  GuiTesterOnDraw PROC
;;;78     /*-----------------------------------------*/
;;;79     BOOL GuiTesterOnDraw(uint8_t oriGuiId, uint8_t reFreshPara, int para2, int para3)
000068  e92d40f8          PUSH     {r3-r7,lr}
;;;80     {
00006c  e1a04000          MOV      r4,r0
000070  e1a05001          MOV      r5,r1
000074  e1a06002          MOV      r6,r2
000078  e1a07003          MOV      r7,r3
;;;81         tickStart = xTaskGetTickCount();
00007c  ebfffffe          BL       xTaskGetTickCount
000080  e59f11ac          LDR      r1,|L1.564|
000084  e5810000          STR      r0,[r1,#0]  ; tickStart
;;;82         sysprintf(" [INFO GUI] <Tester> OnDraw (from GuiId = %d, reFreshPara = %d, para2 = %d, para3 = %d)\n", oriGuiId, reFreshPara, para2, para3);  
000088  e1a03006          MOV      r3,r6
00008c  e1a02005          MOV      r2,r5
000090  e1a01004          MOV      r1,r4
000094  e59f0204          LDR      r0,|L1.672|
000098  e58d7000          STR      r7,[sp,#0]
00009c  ebfffffe          BL       sysprintf
;;;83     
;;;84         powerStatus = FALSE;
0000a0  e3a00000          MOV      r0,#0
0000a4  e59f11f8          LDR      r1,|L1.676|
0000a8  e5c10000          STRB     r0,[r1,#0]  ; powerStatus
;;;85         pGuiGetInterface = GuiGetInterface();
0000ac  ebfffffe          BL       GuiGetInterface
0000b0  e59f11f0          LDR      r1,|L1.680|
0000b4  e5810000          STR      r0,[r1,#0]  ; pGuiGetInterface
;;;86         pGuiGetInterface->setTimeoutFunc(UPDATE_BG_TIMER, UPDATE_BG_INTERVAL);  
0000b8  e2810000          ADD      r0,r1,#0
0000bc  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
0000c0  e3e01000          MVN      r1,#0
0000c4  e590200c          LDR      r2,[r0,#0xc]
0000c8  e3a00000          MOV      r0,#0
0000cc  e12fff32          BLX      r2
;;;87         pGuiGetInterface->setTimeoutFunc(UPDATE_DATA_TIMER, UPDATE_DATA_INTERVAL);
0000d0  e59f01d0          LDR      r0,|L1.680|
0000d4  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
0000d8  e3a010c8          MOV      r1,#0xc8
0000dc  e590200c          LDR      r2,[r0,#0xc]
0000e0  e3a00001          MOV      r0,#1
0000e4  e12fff32          BLX      r2
;;;88         pGuiGetInterface->setTimeoutFunc(EXIT_TIMER, EXIT_INTERVAL);     
0000e8  e59f01b8          LDR      r0,|L1.680|
0000ec  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
0000f0  e3e01000          MVN      r1,#0
0000f4  e590200c          LDR      r2,[r0,#0xc]
0000f8  e3a00002          MOV      r0,#2
0000fc  e12fff32          BLX      r2
;;;89     
;;;90         pGuiGetInterface->runTimeoutFunc(UPDATE_BG_TIMER);//更新畫面
000100  e59f01a0          LDR      r0,|L1.680|
000104  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
000108  e5901010          LDR      r1,[r0,#0x10]
00010c  e3a00000          MOV      r0,#0
000110  e12fff31          BLX      r1
;;;91         //LedSetMode(LED_MODE_AUTO_TEST_INDEX);
;;;92         //sysprintf(" [INFO GUI] <Tester> OnDraw exit: cost ticks = %d\n", xTaskGetTickCount() - tickStart);
;;;93         return TRUE;
000114  e3a00001          MOV      r0,#1
;;;94     }
000118  e8bd80f8          POP      {r3-r7,pc}
;;;95     BOOL GuiTesterKeyCallback(uint8_t keyId, uint8_t downUp)
                          ENDP

                  GuiTesterKeyCallback PROC
00011c  e92d4070          PUSH     {r4-r6,lr}
;;;96     {
000120  e1a04000          MOV      r4,r0
000124  e1a05001          MOV      r5,r1
;;;97         //sysprintf(" [INFO GUI] <Tester> Key:  keyId = %d, downUp = %d\n", keyId, downUp);   
;;;98         BOOL reVal = FALSE; 
000128  e3a06000          MOV      r6,#0
;;;99         if(keyIgnoreFlag && (keyId < GUI_KEYPAD_NORMAL_ID))
00012c  e59f0178          LDR      r0,|L1.684|
000130  e5d00000          LDRB     r0,[r0,#0]  ; keyIgnoreFlag
000134  e3500000          CMP      r0,#0
000138  0a000005          BEQ      |L1.340|
00013c  e3540010          CMP      r4,#0x10
000140  aa000003          BGE      |L1.340|
;;;100        {
;;;101            sysprintf(" [INFO GUI] <Tester> Key:  ignore...\n"); 
000144  e28f0f59          ADR      r0,|L1.688|
000148  ebfffffe          BL       sysprintf
;;;102            return reVal;
00014c  e1a00006          MOV      r0,r6
                  |L1.336|
;;;103        }
;;;104        if(GUI_KEY_DOWN_INDEX == downUp)
;;;105        {
;;;106            switch(keyId)
;;;107            {
;;;108                case GUI_KEYPAD_LEFT_ID:
;;;109                    break;
;;;110                case GUI_KEYPAD_RIGHT_ID:
;;;111                    //reVal = TRUE;
;;;112                    break;
;;;113                case GUI_KEYPAD_ADD_ID:
;;;114                    break;
;;;115                case GUI_KEYPAD_MINUS_ID:
;;;116                    break;
;;;117                case GUI_KEYPAD_CONFIRM_ID:
;;;118                    break;
;;;119                case GUI_KEYPAD_NORMAL_ID:
;;;120                    //LedSetMode(LED_MODE_NORMAL_INDEX);
;;;121                    GuiManagerShowScreen(GUI_STANDBY_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);  
;;;122                    reVal = TRUE;
;;;123                    break;
;;;124                
;;;125                case GUI_KEYPAD_REPLACE_BP_ID:
;;;126                    //LedSetMode(LED_MODE_NORMAL_INDEX);
;;;127                    //GuiManagerShowScreen(GUI_REPLACE_BP_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);
;;;128                    //reVal = TRUE;
;;;129                    break;
;;;130                
;;;131                case GUI_KEYPAD_TESTER_KEYPAD_ID:
;;;132                    //LedSetMode(LED_MODE_NORMAL_INDEX);
;;;133                    GuiManagerShowScreen(GUI_TESTER_KEYPAD_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);
;;;134                    reVal = TRUE;
;;;135                    break;
;;;136                
;;;137                case GUI_KEYPAD_TESTER_ID: 
;;;138                    //reVal = TRUE;                
;;;139                    break;
;;;140                 
;;;141            }
;;;142        }
;;;143        else
;;;144        {
;;;145            
;;;146        }     
;;;147    
;;;148        return reVal;
;;;149    }
000150  e8bd8070          POP      {r4-r6,pc}
                  |L1.340|
000154  e3550001          CMP      r5,#1                 ;104
000158  1a000033          BNE      |L1.556|
00015c  e3540004          CMP      r4,#4                 ;106
000160  0a000016          BEQ      |L1.448|
000164  ca000008          BGT      |L1.396|
000168  e3540000          CMP      r4,#0                 ;106
00016c  0a000017          BEQ      |L1.464|
000170  e3540001          CMP      r4,#1                 ;106
000174  0a000013          BEQ      |L1.456|
000178  e3540002          CMP      r4,#2                 ;106
00017c  0a00000d          BEQ      |L1.440|
000180  e3540003          CMP      r4,#3                 ;106
000184  1a000027          BNE      |L1.552|
000188  ea000008          B        |L1.432|
                  |L1.396|
00018c  e3540010          CMP      r4,#0x10              ;106
000190  0a000010          BEQ      |L1.472|
000194  e3540011          CMP      r4,#0x11              ;106
000198  0a000016          BEQ      |L1.504|
00019c  e3540013          CMP      r4,#0x13              ;106
0001a0  0a000016          BEQ      |L1.512|
0001a4  e3540014          CMP      r4,#0x14              ;106
0001a8  1a00001e          BNE      |L1.552|
0001ac  ea00001b          B        |L1.544|
                  |L1.432|
0001b0  e1a00000          MOV      r0,r0                 ;108
0001b4  ea00001b          B        |L1.552|
                  |L1.440|
0001b8  e1a00000          MOV      r0,r0                 ;110
0001bc  ea000019          B        |L1.552|
                  |L1.448|
0001c0  e1a00000          MOV      r0,r0                 ;113
0001c4  ea000017          B        |L1.552|
                  |L1.456|
0001c8  e1a00000          MOV      r0,r0                 ;115
0001cc  ea000015          B        |L1.552|
                  |L1.464|
0001d0  e1a00000          MOV      r0,r0                 ;117
0001d4  ea000013          B        |L1.552|
                  |L1.472|
0001d8  e1a00000          MOV      r0,r0                 ;119
0001dc  e3a03000          MOV      r3,#0                 ;121
0001e0  e1a02003          MOV      r2,r3                 ;121
0001e4  e3a01003          MOV      r1,#3                 ;121
0001e8  e3a00001          MOV      r0,#1                 ;121
0001ec  ebfffffe          BL       GuiManagerShowScreen
0001f0  e3a06001          MOV      r6,#1                 ;122
0001f4  ea00000b          B        |L1.552|
                  |L1.504|
0001f8  e1a00000          MOV      r0,r0                 ;125
0001fc  ea000009          B        |L1.552|
                  |L1.512|
000200  e1a00000          MOV      r0,r0                 ;131
000204  e3a03000          MOV      r3,#0                 ;133
000208  e1a02003          MOV      r2,r3                 ;133
00020c  e3a01003          MOV      r1,#3                 ;133
000210  e3a0000a          MOV      r0,#0xa               ;133
000214  ebfffffe          BL       GuiManagerShowScreen
000218  e3a06001          MOV      r6,#1                 ;134
00021c  ea000001          B        |L1.552|
                  |L1.544|
000220  e1a00000          MOV      r0,r0                 ;137
000224  e1a00000          MOV      r0,r0                 ;139
                  |L1.552|
000228  e1a00000          MOV      r0,r0                 ;109
                  |L1.556|
00022c  e1a00006          MOV      r0,r6                 ;148
000230  eaffffc6          B        |L1.336|
                  |L1.564|
                          DCD      tickStart
                  |L1.568|
000238  205b494e          DCB      " [INFO GUI] <Tester> updateBG: **Local:[%d]**, **[%d]**"
00023c  464f2047
000240  55495d20
000244  3c546573
000248  7465723e
00024c  20757064
000250  61746542
000254  473a202a
000258  2a4c6f63
00025c  616c3a5b
000260  25645d2a
000264  2a2c202a
000268  2a5b2564
00026c  5d2a2a  
00026f  0a00              DCB      "\n",0
000271  00                DCB      0
000272  00                DCB      0
000273  00                DCB      0
                  |L1.628|
000274  205b494e          DCB      " [INFO GUI] <Tester> updateData: [%d]. \n",0
000278  464f2047
00027c  55495d20
000280  3c546573
000284  7465723e
000288  20757064
00028c  61746544
000290  6174613a
000294  205b2564
000298  5d2e200a
00029c  00      
00029d  00                DCB      0
00029e  00                DCB      0
00029f  00                DCB      0
                  |L1.672|
                          DCD      ||.constdata||
                  |L1.676|
                          DCD      powerStatus
                  |L1.680|
                          DCD      pGuiGetInterface
                  |L1.684|
                          DCD      keyIgnoreFlag
                  |L1.688|
0002b0  205b494e          DCB      " [INFO GUI] <Tester> Key:  ignore...\n",0
0002b4  464f2047
0002b8  55495d20
0002bc  3c546573
0002c0  7465723e
0002c4  204b6579
0002c8  3a202069
0002cc  676e6f72
0002d0  652e2e2e
0002d4  0a00    
0002d6  00                DCB      0
0002d7  00                DCB      0
                          ENDP

                  GuiTesterTimerCallback PROC
;;;150    BOOL GuiTesterTimerCallback(uint8_t timerIndex)
0002d8  e92d4010          PUSH     {r4,lr}
;;;151    {
0002dc  e1a04000          MOV      r4,r0
;;;152        //sysprintf(" [INFO GUI] <Tester> Timer [%d] : tick = %d!!\n", timerIndex, xTaskGetTickCount());
;;;153        keyIgnoreFlag = TRUE;
0002e0  e3a00001          MOV      r0,#1
0002e4  e51f1040          LDR      r1,|L1.684|
0002e8  e5c10000          STRB     r0,[r1,#0]  ; keyIgnoreFlag
;;;154        switch(timerIndex)
0002ec  e3540000          CMP      r4,#0
0002f0  0a000004          BEQ      |L1.776|
0002f4  e3540001          CMP      r4,#1
0002f8  0a000005          BEQ      |L1.788|
0002fc  e3540002          CMP      r4,#2
000300  1a000008          BNE      |L1.808|
000304  ea000005          B        |L1.800|
                  |L1.776|
;;;155        {
;;;156            case UPDATE_BG_TIMER:
000308  e1a00000          MOV      r0,r0
;;;157                updateBG();
00030c  ebfffffe          BL       updateBG
;;;158                break;
000310  ea000004          B        |L1.808|
                  |L1.788|
;;;159            case UPDATE_DATA_TIMER:
000314  e1a00000          MOV      r0,r0
;;;160                updateData();
000318  ebfffffe          BL       updateData
;;;161                break;
00031c  ea000001          B        |L1.808|
                  |L1.800|
;;;162            case EXIT_TIMER:     
000320  e1a00000          MOV      r0,r0
;;;163                break;
000324  e1a00000          MOV      r0,r0
                  |L1.808|
000328  e1a00000          MOV      r0,r0                 ;158
;;;164    
;;;165        }
;;;166        keyIgnoreFlag = FALSE;
00032c  e3a00000          MOV      r0,#0
000330  e51f108c          LDR      r1,|L1.684|
000334  e5c10000          STRB     r0,[r1,#0]  ; keyIgnoreFlag
;;;167        return TRUE;
000338  e3a00001          MOV      r0,#1
;;;168    }
00033c  e8bd8010          POP      {r4,pc}
;;;169    
                          ENDP

                  GuiTesterPowerCallbackFunc PROC
;;;170    BOOL GuiTesterPowerCallbackFunc(uint8_t type, int flag)
000340  e1a02000          MOV      r2,r0
;;;171    {
;;;172        //sysprintf(" [INFO GUI] <Tester> power [%d] : flag = %d!!\n", type, flag);
;;;173        switch(type)
000344  e3520001          CMP      r2,#1
000348  0a000006          BEQ      |L1.872|
00034c  e3520002          CMP      r2,#2
000350  0a000008          BEQ      |L1.888|
000354  e3520003          CMP      r2,#3
000358  0a000008          BEQ      |L1.896|
00035c  e3520004          CMP      r2,#4
000360  1a00000a          BNE      |L1.912|
000364  ea000007          B        |L1.904|
                  |L1.872|
;;;174        {
;;;175            case GUI_POWER_STATUS_INDEX:
000368  e1a00000          MOV      r0,r0
;;;176                return powerStatus;
00036c  e51f00d0          LDR      r0,|L1.676|
000370  e5d00000          LDRB     r0,[r0,#0]  ; powerStatus
                  |L1.884|
;;;177            case GUI_POWER_ON_INDEX:
;;;178                //pGuiGetInterface->runTimeoutFunc(UPDATE_DATA_TIMER);
;;;179                break;
;;;180            case GUI_POWER_OFF_INDEX:
;;;181                break;
;;;182            case GUI_POWER_PREV_OFF_INDEX:
;;;183                break;
;;;184        }
;;;185        return TRUE;
;;;186    }
000374  e12fff1e          BX       lr
                  |L1.888|
000378  e1a00000          MOV      r0,r0                 ;177
00037c  ea000003          B        |L1.912|
                  |L1.896|
000380  e1a00000          MOV      r0,r0                 ;180
000384  ea000001          B        |L1.912|
                  |L1.904|
000388  e1a00000          MOV      r0,r0                 ;182
00038c  e1a00000          MOV      r0,r0                 ;183
                  |L1.912|
000390  e1a00000          MOV      r0,r0                 ;179
000394  e3a00001          MOV      r0,#1                 ;185
000398  eafffff5          B        |L1.884|
;;;187    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  205b494e          DCB      0x20,0x5b,0x49,0x4e
000004  464f2047          DCB      0x46,0x4f,0x20,0x47
000008  55495d20          DCB      0x55,0x49,0x5d,0x20
00000c  3c546573          DCB      0x3c,0x54,0x65,0x73
000010  7465723e          DCB      0x74,0x65,0x72,0x3e
000014  204f6e44          DCB      0x20,0x4f,0x6e,0x44
000018  72617720          DCB      0x72,0x61,0x77,0x20
00001c  2866726f          DCB      0x28,0x66,0x72,0x6f
000020  6d204775          DCB      0x6d,0x20,0x47,0x75
000024  69496420          DCB      0x69,0x49,0x64,0x20
000028  3d202564          DCB      0x3d,0x20,0x25,0x64
00002c  2c207265          DCB      0x2c,0x20,0x72,0x65
000030  46726573          DCB      0x46,0x72,0x65,0x73
000034  68506172          DCB      0x68,0x50,0x61,0x72
000038  61203d20          DCB      0x61,0x20,0x3d,0x20
00003c  25642c20          DCB      0x25,0x64,0x2c,0x20
000040  70617261          DCB      0x70,0x61,0x72,0x61
000044  32203d20          DCB      0x32,0x20,0x3d,0x20
000048  25642c20          DCB      0x25,0x64,0x2c,0x20
00004c  70617261          DCB      0x70,0x61,0x72,0x61
000050  33203d20          DCB      0x33,0x20,0x3d,0x20
000054  2564290a          DCB      0x25,0x64,0x29,0x0a
000058  00                DCB      0x00

                          AREA ||.data||, DATA, ALIGN=2

                  pGuiGetInterface
                          DCD      0x00000000
                  powerStatus
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  tickStart
                          DCD      0x00000000
                  keyIgnoreFlag
00000c  00                DCB      0x00
