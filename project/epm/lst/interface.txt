; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\interface.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\interface.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\interface.crf src\userdrv\interface.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  UartGetInterface PROC
;;;116    //************************  UART  ************************//
;;;117    UartInterface* UartGetInterface(uint8_t index)
000000  e1a01000          MOV      r1,r0
;;;118    {
;;;119        if(index < UART_INTERFACE_NUM)
000004  e3510008          CMP      r1,#8
000008  aa000003          BGE      |L1.28|
;;;120        {        
;;;121            return &mUartInterface[index];
00000c  e0610181          RSB      r0,r1,r1,LSL #3
000010  e59f2100          LDR      r2,|L1.280|
000014  e0820100          ADD      r0,r2,r0,LSL #2
                  |L1.24|
;;;122        }
;;;123        else
;;;124        {
;;;125            return NULL;
;;;126        }
;;;127    }
000018  e12fff1e          BX       lr
                  |L1.28|
00001c  e3a00000          MOV      r0,#0                 ;125
000020  eafffffc          B        |L1.24|
;;;128    //************************  SPI  ************************//
                          ENDP

                  SpiGetInterface PROC
;;;129    SpiInterface* SpiGetInterface(uint8_t index)
000024  e1a01000          MOV      r1,r0
;;;130    {
;;;131        if(index < SPI_INTERFACE_NUM)
000028  e3510002          CMP      r1,#2
00002c  aa000003          BGE      |L1.64|
;;;132        {        
;;;133            return &mSpiInterface[index];
000030  e0810081          ADD      r0,r1,r1,LSL #1
000034  e59f20e0          LDR      r2,|L1.284|
000038  e0820180          ADD      r0,r2,r0,LSL #3
                  |L1.60|
;;;134        }
;;;135        else
;;;136        {
;;;137            return NULL;
;;;138        }
;;;139    }
00003c  e12fff1e          BX       lr
                  |L1.64|
000040  e3a00000          MOV      r0,#0                 ;137
000044  eafffffc          B        |L1.60|
;;;140    
                          ENDP

                  I2cGetInterface PROC
;;;141    //************************  I2C  ************************//
;;;142    I2cInterface* I2cGetInterface(uint8_t index)
000048  e1a01000          MOV      r1,r0
;;;143    {
;;;144        if(index < I2C_INTERFACE_NUM)
00004c  e3510001          CMP      r1,#1
000050  aa000003          BGE      |L1.100|
;;;145        {        
;;;146            return &mI2cInterface[index];
000054  e0610181          RSB      r0,r1,r1,LSL #3
000058  e59f20c0          LDR      r2,|L1.288|
00005c  e0820100          ADD      r0,r2,r0,LSL #2
                  |L1.96|
;;;147        }
;;;148        else
;;;149        {
;;;150            return NULL;
;;;151        }
;;;152    }
000060  e12fff1e          BX       lr
                  |L1.100|
000064  e3a00000          MOV      r0,#0                 ;150
000068  eafffffc          B        |L1.96|
;;;153    
                          ENDP

                  KeyHardwareGetInterface PROC
;;;154    //************************  KEY Hardware ************************//
;;;155    KeyHardwareInterface* KeyHardwareGetInterface(uint8_t index)
00006c  e1a01000          MOV      r1,r0
;;;156    {
;;;157        if(index < KEY_HARDWARE_INTERFACE_NUM)
000070  e3510002          CMP      r1,#2
000074  aa000003          BGE      |L1.136|
;;;158        {        
;;;159            return &mKeyHardwareInterface[index];
000078  e0810081          ADD      r0,r1,r1,LSL #1
00007c  e59f20a0          LDR      r2,|L1.292|
000080  e0820100          ADD      r0,r2,r0,LSL #2
                  |L1.132|
;;;160        }
;;;161        else
;;;162        {
;;;163            return NULL;
;;;164        }
;;;165    }
000084  e12fff1e          BX       lr
                  |L1.136|
000088  e3a00000          MOV      r0,#0                 ;163
00008c  eafffffc          B        |L1.132|
;;;166    
                          ENDP

                  DistGetInterface PROC
;;;167    //************************  Distance  ************************//
;;;168    DistInterface* DistGetInterface(uint8_t index)
000090  e1a01000          MOV      r1,r0
;;;169    {
;;;170        if(index < DIST_INTERFACE_NUM)
000094  e3510001          CMP      r1,#1
000098  aa000002          BGE      |L1.168|
;;;171        {        
;;;172            return &mDistInterface[index];
00009c  e59f0084          LDR      r0,|L1.296|
0000a0  e0800181          ADD      r0,r0,r1,LSL #3
                  |L1.164|
;;;173        }
;;;174        else
;;;175        {
;;;176            return NULL;
;;;177        }
;;;178    }
0000a4  e12fff1e          BX       lr
                  |L1.168|
0000a8  e3a00000          MOV      r0,#0                 ;176
0000ac  eafffffc          B        |L1.164|
;;;179    //************************  Storage  ************************//
                          ENDP

                  CommunicationGetInterface PROC
;;;193    //************************  Communication  ************************//
;;;194    CommunicationInterface* CommunicationGetInterface(uint8_t index)
0000b0  e1a01000          MOV      r1,r0
;;;195    {
;;;196        if(index < COMMUNICATION_INTERFACE_NUM)
0000b4  e3510002          CMP      r1,#2
0000b8  aa000002          BGE      |L1.200|
;;;197        {        
;;;198            return &mCommunicationInterface[index];
0000bc  e59f0068          LDR      r0,|L1.300|
0000c0  e0800201          ADD      r0,r0,r1,LSL #4
                  |L1.196|
;;;199        }
;;;200        else
;;;201        {
;;;202            return NULL;
;;;203        }
;;;204    }
0000c4  e12fff1e          BX       lr
                  |L1.200|
0000c8  e3a00000          MOV      r0,#0                 ;202
0000cc  eafffffc          B        |L1.196|
;;;205    //************************  FatFs Hardware  ************************//
                          ENDP

                  FatfsHardwareGetInterface PROC
;;;206    FatfsHardwareInterface* FatfsHardwareGetInterface(uint8_t index)
0000d0  e1a01000          MOV      r1,r0
;;;207    {
;;;208        if(index < FATFS_HARDWARE_INTERFACE_NUM)
0000d4  e3510003          CMP      r1,#3
0000d8  aa000003          BGE      |L1.236|
;;;209        {        
;;;210            return &mFatfsHardwareInterface[index];
0000dc  e0610181          RSB      r0,r1,r1,LSL #3
0000e0  e59f2048          LDR      r2,|L1.304|
0000e4  e0820100          ADD      r0,r2,r0,LSL #2
                  |L1.232|
;;;211        }
;;;212        else
;;;213        {
;;;214            return NULL;
;;;215        }
;;;216    }
0000e8  e12fff1e          BX       lr
                  |L1.236|
0000ec  e3a00000          MOV      r0,#0                 ;214
0000f0  eafffffc          B        |L1.232|
;;;217    
                          ENDP

                  RadarGetInterface PROC
;;;218    //************************  RADAR  ************************//
;;;219    RadarInterface* RadarGetInterface(uint8_t index)
0000f4  e1a01000          MOV      r1,r0
;;;220    {
;;;221        if(index < RADAR_INTERFACE_NUM)
0000f8  e3510003          CMP      r1,#3
0000fc  aa000003          BGE      |L1.272|
;;;222        {        
;;;223            return &mRadarInterface[index];
000100  e0810101          ADD      r0,r1,r1,LSL #2
000104  e59f2028          LDR      r2,|L1.308|
000108  e0820200          ADD      r0,r2,r0,LSL #4
                  |L1.268|
;;;224        }
;;;225        else
;;;226        {
;;;227            return NULL;
;;;228        }
;;;229    }
00010c  e12fff1e          BX       lr
                  |L1.272|
000110  e3a00000          MOV      r0,#0                 ;227
000114  eafffffc          B        |L1.268|
;;;230    
                          ENDP

                  |L1.280|
                          DCD      mUartInterface
                  |L1.284|
                          DCD      mSpiInterface
                  |L1.288|
                          DCD      mI2cInterface
                  |L1.292|
                          DCD      mKeyHardwareInterface
                  |L1.296|
                          DCD      mDistInterface
                  |L1.300|
                          DCD      mCommunicationInterface
                  |L1.304|
                          DCD      mFatfsHardwareInterface
                  |L1.308|
                          DCD      mRadarInterface

                          AREA ||.data||, DATA, ALIGN=2

                  mUartInterface
                          DCD      UART1DrvInit
                          DCD      UART1Write
                          DCD      UART1Read
                          DCD      UART1ReadWait
                          DCD      UART1SetPower
                          DCD      UART1SetRS232Power
                          DCD      UART1Ioctl
                          DCD      UART2DrvInit
                          DCD      UART2Write
                          DCD      UART2Read
                          DCD      UART2ReadWait
                          DCD      UART2SetPower
                          DCD      UART2SetRS232Power
                          DCD      UART2Ioctl
                          DCD      UART3DrvInit
                          DCD      UART3Write
                          DCD      UART3Read
                          DCD      UART3ReadWait
                          DCD      UART3SetPower
                          DCD      UART3SetRS232Power
                          DCD      UART3Ioctl
                          DCD      UART4DrvInit
                          DCD      UART4Write
                          DCD      UART4Read
                          DCD      UART4ReadWait
                          DCD      UART4SetPower
                          DCD      UART4SetRS232Power
                          DCD      UART4Ioctl
                          DCD      UART7DrvInit
                          DCD      UART7Write
                          DCD      UART7Read
                          DCD      UART7ReadWait
                          DCD      UART7SetPower
                          DCD      UART7SetRS232Power
                          DCD      UART7Ioctl
                          DCD      UART8DrvInit
                          DCD      UART8Write
                          DCD      UART8Read
                          DCD      UART8ReadWait
                          DCD      UART8SetPower
                          DCD      UART8SetRS232Power
                          DCD      UART8Ioctl
                          DCD      UART10DrvInit
                          DCD      UART10Write
                          DCD      UART10Read
                          DCD      UART10ReadWait
                          DCD      UART10SetPower
                          DCD      UART10SetRS232Power
                          DCD      UART10Ioctl
                          DCD      UART0DrvInit
                          DCD      UART0Write
                          DCD      UART0Read
                          DCD      UART0ReadWait
                          DCD      UART0SetPower
                          DCD      UART0SetRS232Power
                          DCD      UART0Ioctl
                  mSpiInterface
                          DCD      Spi0DrvInit
                          DCD      Spi0Write
                          DCD      Spi0Read
                          DCD      Spi0ActiveCS
                          DCD      Spi0SetPin
                          DCD      Spi0ResetPin
                          DCD      Spi1DrvInit
                          DCD      Spi1Write
                          DCD      Spi1Read
                          DCD      Spi1ActiveCS
                          DCD      Spi1SetPin
                          DCD      Spi1ResetPin
                  mI2cInterface
                          DCD      I2c1DrvInit
                          DCD      I2c1Ioctl
                          DCD      I2c1Write
                          DCD      I2c1Read
                          DCD      I2c1enableCriticalSectionFunc
                          DCD      I2c1SetPin
                          DCD      I2c1ResetPin
                  mKeyHardwareInterface
                          DCD      NT066EDrvInit
                          DCD      NT066ESetCallbackFunc
                          DCD      0x00000000
                          DCD      DipDrvInit
                          DCD      DipSetCallbackFunc
                          DCD      0x00000000
                  mDistInterface
                          DCD      SR04TDrvInit
                          DCD      SR04TMeasureDist
                  mCommunicationInterface
                          DCD      RS232CommDrvInit
                          DCD      RS232CommDrvWrite
                          DCD      RS232CommDrvRead
                          DCD      RS232CommDrvReadWait
                          DCD      MTP232CommDrvInit
                          DCD      MTP232CommDrvWrite
                          DCD      MTP232CommDrvRead
                          DCD      MTP232CommDrvReadWait
                  mFatfsHardwareInterface
                          DCD      SdDrvInit
                          DCD      SDDrvInitialize
                          DCD      SDDrvStatus
                          DCD      SDDrvRead
                          DCD      SDDrvWrite
                          DCD      SDDrvIoctl
000184  0200              DCW      0x0200
000186  0000              DCB      0x00,0x00
                          DCD      FlashDrvExInit
                          DCD      FlashDrvExInitialize
                          DCD      FlashDrvExStatus
                          DCD      FlashDrvExRead
                          DCD      FlashDrvExWrite
                          DCD      FlashDrvExIoctl
0001a0  1000              DCW      0x1000
0001a2  0000              DCB      0x00,0x00
                          DCD      FlashDrvExInit
                          DCD      FlashDrvExInitialize
                          DCD      FlashDrvExStatus
                          DCD      FlashDrvExRead
                          DCD      FlashDrvExWrite
                          DCD      FlashDrvExIoctl
0001bc  1000              DCW      0x1000
0001be  0000              DCB      0x00,0x00
                  mRadarInterface
                          DCD      RadarDrvInit
                          DCD      RadarCheckFeature
                          DCD      RadarSetPower
                          DCD      RadarSetPowerStatus
                          DCD      RadarSetStartCalibrate
                          DCD      RadarCalibrate
                          DCD      RadarReadDistValue
                          DCD      RadarSetQueryVersion
                          DCD      ReadRadarVersion
                          DCD      ReadRadarVersionString
                          DCD      RadarFirstOTA
                          DCD      RadarOTA
                          DCD      RadarRecentDistValue
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      LidarDrvInit
                          DCD      LidarCheckFeature
                          DCD      LidarSetPower
                          DCD      LidarSetPowerStatus
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      RadarDrvInit
                          DCD      0x00000000
                          DCD      RadarSetPower
                          DCD      RadarSetPowerStatus
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      newRadarResult
                          DCD      newRadarResultElite
                          DCD      RadarTaskCreate
                          DCD      RadarTaskDelete
                          DCD      RB60POTAFunc
                          DCD      newRadarFlush
                          DCD      RadarDrvInitBurning
