; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\ipassdpti.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\ipassdpti.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\ipassdpti.crf src\syshal\cardlog\ipassdpti.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  IPASSLogDPTIContainInit PROC
;;;55     #define DATA_SHIFT_BYTE     0
;;;56     BOOL IPASSLogDPTIContainInit(uint8_t* body, char CmdType, uint8_t* icdData, int icdLen, uint8_t* executeData, int executeLen, uint32_t txnAmount, uint8_t* readerId, int readerIdLen, char* dateStr, char* timeStr, char* APIVersion)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;57     {
000004  e24dd0a4          SUB      sp,sp,#0xa4
000008  e1a07000          MOV      r7,r0
00000c  e1a06001          MOV      r6,r1
000010  e1a05002          MOV      r5,r2
000014  e59d80c8          LDR      r8,[sp,#0xc8]
000018  e59d90d0          LDR      r9,[sp,#0xd0]
00001c  e59da0d4          LDR      r10,[sp,#0xd4]
;;;58         IPassDPTIBody* pIPassDPTIBody = (IPassDPTIBody*)body;
000020  e1a04007          MOV      r4,r7
;;;59         
;;;60         sysprintf("\r\n====  IPASSLogDPTIContainInit(%s) ====\r\n", GetMeterData()->epmIdStr);
000024  ebfffffe          BL       GetMeterData
000028  e280b088          ADD      r11,r0,#0x88
00002c  e1a0100b          MOV      r1,r11
000030  e28f0fbe          ADR      r0,|L1.816|
000034  ebfffffe          BL       sysprintf
;;;61         sysprintf("sizeof(IPassDPTIBody) = %d\r\n", sizeof(IPassDPTIBody));
000038  e59f131c          LDR      r1,|L1.860|
00003c  e28f0fc7          ADR      r0,|L1.864|
000040  ebfffffe          BL       sysprintf
;;;62     
;;;63         if(sizeof(IPassDPTIBody) != TOTAL_IPASS_DPTI_BODY_SIZE)
;;;64         {
;;;65             sysprintf("IPASSLogInit ERROR: sizeof(IPassDPTIBody) != TOTAL_IPASS_DPTI_BODY_SIZE [%d, %d]\r\n", sizeof(IPassDPTIBody), TOTAL_IPASS_DPTI_BODY_SIZE);
;;;66             return FALSE;
;;;67         }
;;;68         memset(pIPassDPTIBody, ' ', sizeof(IPassDPTIBody));
000044  e3a02020          MOV      r2,#0x20
000048  e59f130c          LDR      r1,|L1.860|
00004c  e1a00004          MOV      r0,r4
000050  ebfffffe          BL       __aeabi_memset
;;;69         DPTITraceNo++;
000054  e59f0324          LDR      r0,|L1.896|
000058  e5900000          LDR      r0,[r0,#0]  ; DPTITraceNo
00005c  e2800001          ADD      r0,r0,#1
000060  e59f1318          LDR      r1,|L1.896|
000064  e5810000          STR      r0,[r1,#0]  ; DPTITraceNo
;;;70         //--- body ---
;;;71         /*
;;;72     --- ICD [150] --->
;;;73     0xAA, 0xD5, 0x17, 0x7C, 0x14, 0x88, 0x04, 0x00, 0x47, 0xC1,
;;;74     0x26, 0x35, 0xB9, 0x00, 0x05, 0x07, 0x04, 0x00, 0xF8, 0x11,
;;;75     0x00, 0x00, 0xF8, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;;;76     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x6F, 0xA9, 0x59,
;;;77     0x20, 0x01, 0x00, 0xF8, 0x11, 0xA1, 0x2D, 0x30, 0x30, 0x30,
;;;78     0x32, 0x00, 0x65, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00,
;;;79     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;;;80     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;;;81     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;;;82     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;;;83     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x6F,
;;;84     0xA9, 0x59, 0x00, 0x00, 0x20, 0xA1, 0x2D, 0x30, 0x30, 0x30,
;;;85     0x32, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0xB1, 0x3A,
;;;86     0x57, 0x19, 0x88, 0x13, 0x88, 0x13, 0x00, 0x00, 0x01, 0x00,
;;;87     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32,
;;;88     
;;;89     <--- ICD ---
;;;90     iPass_Execute() deduct_value is 1 (1)
;;;91     
;;;92     --- iPass_Execute [75] --->
;;;93     0xF7, 0x11, 0x00, 0x00, 0x66, 0x00, 0x50, 0x36, 0x01, 0x49,
;;;94     0x83, 0x97, 0x74, 0x49, 0x40, 0x47, 0xD8, 0x6E, 0x00, 0x00,
;;;95     0x30, 0x30, 0x30, 0x32, 0x20, 0x17, 0x09, 0x01, 0x22, 0x39,
;;;96     0x50, 0x24, 0x00, 0x00, 0x01, 0x00, 0x46, 0x00, 0xAA, 0xD5,
;;;97     0x17, 0x7C, 0x14, 0x88, 0x04, 0x00, 0x47, 0xC1, 0x26, 0x35,
;;;98     0xB9, 0x00, 0x05, 0x07, 0x00, 0x01, 0x02, 0x19, 0x70, 0x01,
;;;99     0x01, 0x08, 0x00, 0x00, 0x50, 0x36, 0x01, 0x49, 0x83, 0x97,
;;;100    0x74, 0x49, 0x02, 0x02, 0xE4,
;;;101    <--- iPass_Execute ---
;;;102        */
;;;103        
;;;104        pIPassDPTIBody->RecordType = 'D';                                                                                       //1     Record Type 
000068  e3a00044          MOV      r0,#0x44
00006c  e5c40000          STRB     r0,[r4,#0]
;;;105        CardLogUint32ToString("DPTITraceNo", DPTITraceNo, pIPassDPTIBody->DPTITraceNo, sizeof(pIPassDPTIBody->DPTITraceNo));    //2     DPTI 資料編號 
000070  e3a03006          MOV      r3,#6
000074  e2842001          ADD      r2,r4,#1
000078  e2810000          ADD      r0,r1,#0
00007c  e5901000          LDR      r1,[r0,#0]  ; DPTITraceNo
000080  e28f0fbf          ADR      r0,|L1.900|
000084  ebfffffe          BL       CardLogUint32ToString
;;;106        memcpy(pIPassDPTIBody->EquipmentType, "33", sizeof(pIPassDPTIBody->EquipmentType));   //33 自動繳費機                   //3     交易設備種類 
000088  e28f0c03          ADR      r0,|L1.912|
00008c  e5d01000          LDRB     r1,[r0,#0]
000090  e5c41007          STRB     r1,[r4,#7]
000094  e5d00001          LDRB     r0,[r0,#1]
000098  e5c40008          STRB     r0,[r4,#8]
;;;107        memcpy(pIPassDPTIBody->EquipmentId, GetMeterData()->epmIdStr, sizeof(pIPassDPTIBody->EquipmentId));                     //4     交易設備編號 
00009c  ebfffffe          BL       GetMeterData
0000a0  e280b088          ADD      r11,r0,#0x88
0000a4  e3a02008          MOV      r2,#8
0000a8  e1a0100b          MOV      r1,r11
0000ac  e2840009          ADD      r0,r4,#9
0000b0  ebfffffe          BL       __aeabi_memcpy
;;;108        memcpy(pIPassDPTIBody->CarType, "01", sizeof(pIPassDPTIBody->CarType));  //01 小型車                                    //5     車種 
0000b4  e28f0fb6          ADR      r0,|L1.916|
0000b8  e5d01000          LDRB     r1,[r0,#0]
0000bc  e5c41011          STRB     r1,[r4,#0x11]
0000c0  e5d00001          LDRB     r0,[r0,#1]
0000c4  e5c40012          STRB     r0,[r4,#0x12]
;;;109        memcpy(pIPassDPTIBody->txnDate.value, dateStr, sizeof(pIPassDPTIBody->txnDate.value));                                  //6     交易日期 
0000c8  e3a02008          MOV      r2,#8
0000cc  e2840013          ADD      r0,r4,#0x13
0000d0  e59d10dc          LDR      r1,[sp,#0xdc]
0000d4  ebfffffe          BL       __aeabi_memcpy
;;;110        memcpy(pIPassDPTIBody->txnTime.value, timeStr, sizeof(pIPassDPTIBody->txnTime.value));                                  //7     交易時間 
0000d8  e3a02006          MOV      r2,#6
0000dc  e284001b          ADD      r0,r4,#0x1b
0000e0  e59d10e0          LDR      r1,[sp,#0xe0]
0000e4  ebfffffe          BL       __aeabi_memcpy
;;;111        if(CmdType =='D')
0000e8  e3560044          CMP      r6,#0x44
0000ec  1a000004          BNE      |L1.260|
;;;112        {
;;;113            memcpy(pIPassDPTIBody->TxnType, "24", sizeof(pIPassDPTIBody->TxnType));                                             //8     交易類型 
0000f0  e28f0e2a          ADR      r0,|L1.920|
0000f4  e5d01000          LDRB     r1,[r0,#0]
0000f8  e5c41021          STRB     r1,[r4,#0x21]
0000fc  e5d00001          LDRB     r0,[r0,#1]
000100  e5c40022          STRB     r0,[r4,#0x22]
                  |L1.260|
;;;114        }
;;;115        if (CmdType == 'R')
000104  e3560052          CMP      r6,#0x52
000108  1a000005          BNE      |L1.292|
;;;116        {
;;;117            memcpy(pIPassDPTIBody->TxnType, "90", sizeof(pIPassDPTIBody->TxnType));                                             //8     交易類型 
00010c  e28f0fa2          ADR      r0,|L1.924|
000110  e5d01000          LDRB     r1,[r0,#0]
000114  e5c41021          STRB     r1,[r4,#0x21]
000118  e5d00001          LDRB     r0,[r0,#1]
00011c  e5c40022          STRB     r0,[r4,#0x22]
000120  ea000006          B        |L1.320|
                  |L1.292|
;;;118        }
;;;119        else if (CmdType == 'L')
000124  e356004c          CMP      r6,#0x4c
000128  1a000004          BNE      |L1.320|
;;;120        {
;;;121            memcpy(pIPassDPTIBody->TxnType, "91", sizeof(pIPassDPTIBody->TxnType));                                             //8     交易類型 
00012c  e28f0f9b          ADR      r0,|L1.928|
000130  e5d01000          LDRB     r1,[r0,#0]
000134  e5c41021          STRB     r1,[r4,#0x21]
000138  e5d00001          LDRB     r0,[r0,#1]
00013c  e5c40022          STRB     r0,[r4,#0x22]
                  |L1.320|
;;;122        }    
;;;123        
;;;124        uint32_t RWid = CardLogHexBuffToUint32(&readerId[0], 4);
000140  e3a01004          MOV      r1,#4
000144  e1a0000a          MOV      r0,r10
000148  ebfffffe          BL       CardLogHexBuffToUint32
00014c  e58d00a0          STR      r0,[sp,#0xa0]
;;;125        CardLogUint32ToHexString("RWid", RWid, pIPassDPTIBody->RWid, sizeof(pIPassDPTIBody->RWid));                             //9     讀卡器編號 
000150  e3a03008          MOV      r3,#8
000154  e2842023          ADD      r2,r4,#0x23
000158  e28f0f91          ADR      r0,|L1.932|
00015c  e59d10a0          LDR      r1,[sp,#0xa0]
000160  ebfffffe          BL       CardLogUint32ToHexString
;;;126        
;;;127        memcpy(pIPassDPTIBody->CarNo, "        ", sizeof(pIPassDPTIBody->CarNo));                                               //10    車號 
000164  e3a02008          MOV      r2,#8
000168  e28f1f8f          ADR      r1,|L1.940|
00016c  e284002b          ADD      r0,r4,#0x2b
000170  ebfffffe          BL       __aeabi_memcpy
;;;128        
;;;129        if(CmdType =='D')
000174  e3560044          CMP      r6,#0x44
000178  1a000005          BNE      |L1.404|
;;;130        {
;;;131            CardLogUint32ToString("txnAmount", txnAmount, pIPassDPTIBody->TxnAmount, sizeof(pIPassDPTIBody->TxnAmount));        //11    交易金額 
00017c  e3a03006          MOV      r3,#6
000180  e2842033          ADD      r2,r4,#0x33
000184  e1a01009          MOV      r1,r9
000188  e28f0f8a          ADR      r0,|L1.952|
00018c  ebfffffe          BL       CardLogUint32ToString
000190  ea00000e          B        |L1.464|
                  |L1.404|
;;;132        }
;;;133        else if (CmdType == 'R')
000194  e3560052          CMP      r6,#0x52
000198  1a000005          BNE      |L1.436|
;;;134        {
;;;135            CardLogUint32ToString("txnAmount", 0, pIPassDPTIBody->TxnAmount, sizeof(pIPassDPTIBody->TxnAmount));                //11    交易金額 
00019c  e3a03006          MOV      r3,#6
0001a0  e2842033          ADD      r2,r4,#0x33
0001a4  e3a01000          MOV      r1,#0
0001a8  e28f0f82          ADR      r0,|L1.952|
0001ac  ebfffffe          BL       CardLogUint32ToString
0001b0  ea000006          B        |L1.464|
                  |L1.436|
;;;136        }
;;;137        else if (CmdType == 'L')
0001b4  e356004c          CMP      r6,#0x4c
0001b8  1a000004          BNE      |L1.464|
;;;138        {
;;;139            CardLogUint32ToString("txnAmount", 0, pIPassDPTIBody->TxnAmount, sizeof(pIPassDPTIBody->TxnAmount));                //11    交易金額 
0001bc  e3a03006          MOV      r3,#6
0001c0  e2842033          ADD      r2,r4,#0x33
0001c4  e3a01000          MOV      r1,#0
0001c8  e28f0f7a          ADR      r0,|L1.952|
0001cc  ebfffffe          BL       CardLogUint32ToString
                  |L1.464|
;;;140        }   
;;;141        
;;;142        if(CmdType =='D')
0001d0  e3560044          CMP      r6,#0x44
0001d4  1a000009          BNE      |L1.512|
;;;143        {
;;;144            uint32_t BalanceBeforeTxn = CardLogBuffToUint32(&icdData[18], 4);
0001d8  e3a01004          MOV      r1,#4
0001dc  e2850012          ADD      r0,r5,#0x12
0001e0  ebfffffe          BL       CardLogBuffToUint32
0001e4  e1a0b000          MOV      r11,r0
;;;145            CardLogUint32ToString("BalanceBeforeTxn", BalanceBeforeTxn, pIPassDPTIBody->BalanceBeforeTxn, sizeof(pIPassDPTIBody->BalanceBeforeTxn));    //12    交易前卡片餘額 
0001e8  e3a03006          MOV      r3,#6
0001ec  e2842039          ADD      r2,r4,#0x39
0001f0  e1a0100b          MOV      r1,r11
0001f4  e28f0f72          ADR      r0,|L1.964|
0001f8  ebfffffe          BL       CardLogUint32ToString
;;;146        }
0001fc  ea000017          B        |L1.608|
                  |L1.512|
;;;147        else if (CmdType == 'R')
000200  e3560052          CMP      r6,#0x52
000204  1a000009          BNE      |L1.560|
;;;148        {
;;;149            uint32_t BalanceBeforeTxn = CardLogBuffToUint32(&icdData[22], 4);
000208  e3a01004          MOV      r1,#4
00020c  e2850016          ADD      r0,r5,#0x16
000210  ebfffffe          BL       CardLogBuffToUint32
000214  e1a0b000          MOV      r11,r0
;;;150            CardLogUint32ToString("BalanceBeforeTxn", BalanceBeforeTxn, pIPassDPTIBody->BalanceBeforeTxn, sizeof(pIPassDPTIBody->BalanceBeforeTxn));    //12    交易前卡片餘額 
000218  e3a03006          MOV      r3,#6
00021c  e2842039          ADD      r2,r4,#0x39
000220  e1a0100b          MOV      r1,r11
000224  e28f0f66          ADR      r0,|L1.964|
000228  ebfffffe          BL       CardLogUint32ToString
;;;151        }
00022c  ea00000b          B        |L1.608|
                  |L1.560|
;;;152        else if (CmdType == 'L')
000230  e356004c          CMP      r6,#0x4c
000234  1a000009          BNE      |L1.608|
;;;153        {
;;;154            uint32_t BalanceBeforeTxn = CardLogBuffToUint32(&icdData[18], 4);
000238  e3a01004          MOV      r1,#4
00023c  e2850012          ADD      r0,r5,#0x12
000240  ebfffffe          BL       CardLogBuffToUint32
000244  e1a0b000          MOV      r11,r0
;;;155            CardLogUint32ToString("BalanceBeforeTxn", BalanceBeforeTxn, pIPassDPTIBody->BalanceBeforeTxn, sizeof(pIPassDPTIBody->BalanceBeforeTxn));    //12    交易前卡片餘額 
000248  e3a03006          MOV      r3,#6
00024c  e2842039          ADD      r2,r4,#0x39
000250  e1a0100b          MOV      r1,r11
000254  e28f0f5a          ADR      r0,|L1.964|
000258  ebfffffe          BL       CardLogUint32ToString
;;;156        }   
00025c  e1a00000          MOV      r0,r0
                  |L1.608|
;;;157       
;;;158        if(CmdType =='D')
000260  e3560044          CMP      r6,#0x44
000264  1a000009          BNE      |L1.656|
;;;159        {
;;;160            uint32_t BalanceAfterTxn = CardLogBuffToUint32(&executeData[0], 4);
000268  e3a01004          MOV      r1,#4
00026c  e1a00008          MOV      r0,r8
000270  ebfffffe          BL       CardLogBuffToUint32
000274  e1a0b000          MOV      r11,r0
;;;161            CardLogUint32ToString("BalanceAfterTxn", BalanceAfterTxn, pIPassDPTIBody->BalanceAfterTxn, sizeof(pIPassDPTIBody->BalanceAfterTxn));        //13    交易後卡片餘額
000278  e3a03006          MOV      r3,#6
00027c  e284203f          ADD      r2,r4,#0x3f
000280  e1a0100b          MOV      r1,r11
000284  e28f0f53          ADR      r0,|L1.984|
000288  ebfffffe          BL       CardLogUint32ToString
;;;162        }
00028c  ea000017          B        |L1.752|
                  |L1.656|
;;;163        else if (CmdType == 'R')
000290  e3560052          CMP      r6,#0x52
000294  1a000009          BNE      |L1.704|
;;;164        {
;;;165            uint32_t BalanceAfterTxn = CardLogBuffToUint32(&icdData[18], 4);
000298  e3a01004          MOV      r1,#4
00029c  e2850012          ADD      r0,r5,#0x12
0002a0  ebfffffe          BL       CardLogBuffToUint32
0002a4  e1a0b000          MOV      r11,r0
;;;166            CardLogUint32ToString("BalanceAfterTxn", BalanceAfterTxn, pIPassDPTIBody->BalanceAfterTxn, sizeof(pIPassDPTIBody->BalanceAfterTxn));        //13    交易後卡片餘額
0002a8  e3a03006          MOV      r3,#6
0002ac  e284203f          ADD      r2,r4,#0x3f
0002b0  e1a0100b          MOV      r1,r11
0002b4  e28f0f47          ADR      r0,|L1.984|
0002b8  ebfffffe          BL       CardLogUint32ToString
;;;167        }
0002bc  ea00000b          B        |L1.752|
                  |L1.704|
;;;168        else if (CmdType == 'L')
0002c0  e356004c          CMP      r6,#0x4c
0002c4  1a000009          BNE      |L1.752|
;;;169        {
;;;170            uint32_t BalanceAfterTxn = CardLogBuffToUint32(&executeData[0], 4);
0002c8  e3a01004          MOV      r1,#4
0002cc  e1a00008          MOV      r0,r8
0002d0  ebfffffe          BL       CardLogBuffToUint32
0002d4  e1a0b000          MOV      r11,r0
;;;171            CardLogUint32ToString("BalanceAfterTxn", BalanceAfterTxn, pIPassDPTIBody->BalanceAfterTxn, sizeof(pIPassDPTIBody->BalanceAfterTxn));        //13    交易後卡片餘額
0002d8  e3a03006          MOV      r3,#6
0002dc  e284203f          ADD      r2,r4,#0x3f
0002e0  e1a0100b          MOV      r1,r11
0002e4  e28f00ec          ADR      r0,|L1.984|
0002e8  ebfffffe          BL       CardLogUint32ToString
;;;172        }   
0002ec  e1a00000          MOV      r0,r0
                  |L1.752|
;;;173        
;;;174        
;;;175        CardLogCSNToHexString("CardSerialNo", &icdData[0], pIPassDPTIBody->CardSerialNo);       //14    卡號(CSN) 
0002f0  e2842045          ADD      r2,r4,#0x45
0002f4  e1a01005          MOV      r1,r5
0002f8  e28f00e8          ADR      r0,|L1.1000|
0002fc  ebfffffe          BL       CardLogCSNToHexString
;;;176        
;;;177        if(CmdType =='D')
000300  e3560044          CMP      r6,#0x44
000304  1a00003f          BNE      |L1.1032|
;;;178        {
;;;179            uint32_t TxnSeqNo = CardLogBuffToUint32(&executeData[4], 2);
000308  e3a01002          MOV      r1,#2
00030c  e2880004          ADD      r0,r8,#4
000310  ebfffffe          BL       CardLogBuffToUint32
000314  e1a0b000          MOV      r11,r0
;;;180            CardLogUint32ToString("KRTCTxnSeqNo", TxnSeqNo, pIPassDPTIBody->KRTCTxnSeqNo, sizeof(pIPassDPTIBody->KRTCTxnSeqNo));        //15    卡片交易序號 
000318  e3a03006          MOV      r3,#6
00031c  e2842065          ADD      r2,r4,#0x65
000320  e1a0100b          MOV      r1,r11
000324  e28f00cc          ADR      r0,|L1.1016|
000328  ebfffffe          BL       CardLogUint32ToString
;;;181        }
00032c  ea00004d          B        |L1.1128|
                  |L1.816|
000330  0d0a3d3d          DCB      "\r\n====  IPASSLogDPTIContainInit(%s) ====\r\n",0
000334  3d3d2020
000338  49504153
00033c  534c6f67
000340  44505449
000344  436f6e74
000348  61696e49
00034c  6e697428
000350  25732920
000354  3d3d3d3d
000358  0d0a00  
00035b  00                DCB      0
                  |L1.860|
                          DCD      0x00000132
                  |L1.864|
000360  73697a65          DCB      "sizeof(IPassDPTIBody) = %d\r\n",0
000364  6f662849
000368  50617373
00036c  44505449
000370  426f6479
000374  29203d20
000378  25640d0a
00037c  00      
00037d  00                DCB      0
00037e  00                DCB      0
00037f  00                DCB      0
                  |L1.896|
                          DCD      DPTITraceNo
                  |L1.900|
000384  44505449          DCB      "DPTITraceNo",0
000388  54726163
00038c  654e6f00
                  |L1.912|
000390  333300            DCB      "33",0
000393  00                DCB      0
                  |L1.916|
000394  303100            DCB      "01",0
000397  00                DCB      0
                  |L1.920|
000398  323400            DCB      "24",0
00039b  00                DCB      0
                  |L1.924|
00039c  393000            DCB      "90",0
00039f  00                DCB      0
                  |L1.928|
0003a0  393100            DCB      "91",0
0003a3  00                DCB      0
                  |L1.932|
0003a4  52576964          DCB      "RWid",0
0003a8  00      
0003a9  00                DCB      0
0003aa  00                DCB      0
0003ab  00                DCB      0
                  |L1.940|
0003ac  20202020          DCB      "        ",0
0003b0  20202020
0003b4  00      
0003b5  00                DCB      0
0003b6  00                DCB      0
0003b7  00                DCB      0
                  |L1.952|
0003b8  74786e41          DCB      "txnAmount",0
0003bc  6d6f756e
0003c0  7400    
0003c2  00                DCB      0
0003c3  00                DCB      0
                  |L1.964|
0003c4  42616c61          DCB      "BalanceBeforeTxn",0
0003c8  6e636542
0003cc  65666f72
0003d0  6554786e
0003d4  00      
0003d5  00                DCB      0
0003d6  00                DCB      0
0003d7  00                DCB      0
                  |L1.984|
0003d8  42616c61          DCB      "BalanceAfterTxn",0
0003dc  6e636541
0003e0  66746572
0003e4  54786e00
                  |L1.1000|
0003e8  43617264          DCB      "CardSerialNo",0
0003ec  53657269
0003f0  616c4e6f
0003f4  00      
0003f5  00                DCB      0
0003f6  00                DCB      0
0003f7  00                DCB      0
                  |L1.1016|
0003f8  4b525443          DCB      "KRTCTxnSeqNo",0
0003fc  54786e53
000400  65714e6f
000404  00      
000405  00                DCB      0
000406  00                DCB      0
000407  00                DCB      0
                  |L1.1032|
;;;182        else if (CmdType == 'R')
000408  e3560052          CMP      r6,#0x52
00040c  1a000009          BNE      |L1.1080|
;;;183        {
;;;184            uint32_t TxnSeqNo = CardLogBuffToUint32(&icdData[52], 2);
000410  e3a01002          MOV      r1,#2
000414  e2850034          ADD      r0,r5,#0x34
000418  ebfffffe          BL       CardLogBuffToUint32
00041c  e1a0b000          MOV      r11,r0
;;;185            CardLogUint32ToString("KRTCTxnSeqNo", TxnSeqNo, pIPassDPTIBody->KRTCTxnSeqNo, sizeof(pIPassDPTIBody->KRTCTxnSeqNo));        //15    卡片交易序號 
000420  e3a03006          MOV      r3,#6
000424  e2842065          ADD      r2,r4,#0x65
000428  e1a0100b          MOV      r1,r11
00042c  e24f003c          ADR      r0,|L1.1016|
000430  ebfffffe          BL       CardLogUint32ToString
;;;186        }
000434  ea00000b          B        |L1.1128|
                  |L1.1080|
;;;187        else if (CmdType == 'L')
000438  e356004c          CMP      r6,#0x4c
00043c  1a000009          BNE      |L1.1128|
;;;188        {
;;;189            uint32_t TxnSeqNo = CardLogBuffToUint32(&executeData[4], 2);
000440  e3a01002          MOV      r1,#2
000444  e2880004          ADD      r0,r8,#4
000448  ebfffffe          BL       CardLogBuffToUint32
00044c  e1a0b000          MOV      r11,r0
;;;190            CardLogUint32ToString("KRTCTxnSeqNo", TxnSeqNo, pIPassDPTIBody->KRTCTxnSeqNo, sizeof(pIPassDPTIBody->KRTCTxnSeqNo));        //15    卡片交易序號 
000450  e3a03006          MOV      r3,#6
000454  e2842065          ADD      r2,r4,#0x65
000458  e1a0100b          MOV      r1,r11
00045c  e24f006c          ADR      r0,|L1.1016|
000460  ebfffffe          BL       CardLogUint32ToString
;;;191        } 
000464  e1a00000          MOV      r0,r0
                  |L1.1128|
;;;192        
;;;193        
;;;194        uint32_t IdentityType = CardLogBuffToUint32(&icdData[17], 1);
000468  e3a01001          MOV      r1,#1
00046c  e2850011          ADD      r0,r5,#0x11
000470  ebfffffe          BL       CardLogBuffToUint32
000474  e58d009c          STR      r0,[sp,#0x9c]
;;;195        CardLogUint32ToHexString("IdentityType", IdentityType, pIPassDPTIBody->IdentityType, sizeof(pIPassDPTIBody->IdentityType));     //16    個人身份別 
000478  e3a03002          MOV      r3,#2
00047c  e284206b          ADD      r2,r4,#0x6b
000480  e28f0e3a          ADR      r0,|L1.2088|
000484  e59d109c          LDR      r1,[sp,#0x9c]
000488  ebfffffe          BL       CardLogUint32ToHexString
;;;196        
;;;197        uint32_t CardType = CardLogBuffToUint32(&icdData[16], 1);
00048c  e3a01001          MOV      r1,#1
000490  e2850010          ADD      r0,r5,#0x10
000494  ebfffffe          BL       CardLogBuffToUint32
000498  e58d0098          STR      r0,[sp,#0x98]
;;;198        CardLogUint32ToHexString("CardType", CardType, pIPassDPTIBody->CardType, sizeof(pIPassDPTIBody->CardType));                     //17    卡片種類 
00049c  e3a03002          MOV      r3,#2
0004a0  e284206d          ADD      r2,r4,#0x6d
0004a4  e28f0fe3          ADR      r0,|L1.2104|
0004a8  e59d1098          LDR      r1,[sp,#0x98]
0004ac  ebfffffe          BL       CardLogUint32ToHexString
;;;199        
;;;200        uint32_t IssueCode = CardLogBuffToUint32(&icdData[54], 1);
0004b0  e3a01001          MOV      r1,#1
0004b4  e2850036          ADD      r0,r5,#0x36
0004b8  ebfffffe          BL       CardLogBuffToUint32
0004bc  e58d0094          STR      r0,[sp,#0x94]
;;;201        CardLogUint32ToHexString("IssueCode", IssueCode, pIPassDPTIBody->IssueCode, sizeof(pIPassDPTIBody->IssueCode));                 //18    發卡單位   diff DFTI
0004c0  e3a03003          MOV      r3,#3
0004c4  e284206f          ADD      r2,r4,#0x6f
0004c8  e28f0fdd          ADR      r0,|L1.2116|
0004cc  e59d1094          LDR      r1,[sp,#0x94]
0004d0  ebfffffe          BL       CardLogUint32ToHexString
;;;202        
;;;203        
;;;204        memcpy(&pIPassDPTIBody->TicketStatus, "1", sizeof(pIPassDPTIBody->TicketStatus));                                               //19    繳費/定期票設定狀態  // 1 已繳費
0004d4  e28f0fdd          ADR      r0,|L1.2128|
0004d8  e5d00000          LDRB     r0,[r0,#0]
0004dc  e5c40072          STRB     r0,[r4,#0x72]
;;;205        memcpy(pIPassDPTIBody->PaymentDate.value, dateStr, sizeof(pIPassDPTIBody->PaymentDate.value));                                  //20    繳費日期 
0004e0  e3a02008          MOV      r2,#8
0004e4  e2840073          ADD      r0,r4,#0x73
0004e8  e59d10dc          LDR      r1,[sp,#0xdc]
0004ec  ebfffffe          BL       __aeabi_memcpy
;;;206        memcpy(pIPassDPTIBody->PaymentTime.value, timeStr, sizeof(pIPassDPTIBody->PaymentTime.value));                                  //21    繳費時間 
0004f0  e3a02006          MOV      r2,#6
0004f4  e284007b          ADD      r0,r4,#0x7b
0004f8  e59d10e0          LDR      r1,[sp,#0xe0]
0004fc  ebfffffe          BL       __aeabi_memcpy
;;;207        memcpy(&pIPassDPTIBody->PaymentMethod, "A", sizeof(pIPassDPTIBody->PaymentMethod));                                             //22    "繳費方式與繳費後進出場狀態"
000500  e28f0fd3          ADR      r0,|L1.2132|
000504  e5d00000          LDRB     r0,[r0,#0]
000508  e5c40081          STRB     r0,[r4,#0x81]
;;;208        memcpy(pIPassDPTIBody->InDate.value, dateStr, sizeof(pIPassDPTIBody->InDate.value));                                            //23    進場日期 
00050c  e3a02008          MOV      r2,#8
000510  e2840082          ADD      r0,r4,#0x82
000514  e59d10dc          LDR      r1,[sp,#0xdc]
000518  ebfffffe          BL       __aeabi_memcpy
;;;209        memcpy(pIPassDPTIBody->InTime.value, timeStr, sizeof(pIPassDPTIBody->InTime.value));                                            //24    進場時間 
00051c  e3a02006          MOV      r2,#6
000520  e284008a          ADD      r0,r4,#0x8a
000524  e59d10e0          LDR      r1,[sp,#0xe0]
000528  ebfffffe          BL       __aeabi_memcpy
;;;210        memcpy(pIPassDPTIBody->SocialWelfareOffer, "000000", sizeof(pIPassDPTIBody->SocialWelfareOffer));                               //25    社福優惠金額 
00052c  e3a02006          MOV      r2,#6
000530  e28f1e32          ADR      r1,|L1.2136|
000534  e2840090          ADD      r0,r4,#0x90
000538  ebfffffe          BL       __aeabi_memcpy
;;;211        memcpy(pIPassDPTIBody->TransferStopFlag, "0000", sizeof(pIPassDPTIBody->TransferStopFlag));                                     //26    轉停優惠旗標 
00053c  e3a02004          MOV      r2,#4
000540  e28f1fc6          ADR      r1,|L1.2144|
000544  e2840096          ADD      r0,r4,#0x96
000548  ebfffffe          BL       __aeabi_memcpy
;;;212        memcpy(pIPassDPTIBody->TransferStopOffer, "000000", sizeof(pIPassDPTIBody->TransferStopOffer));                                 //27    轉停優惠金額 
00054c  e3a02006          MOV      r2,#6
000550  e28f1c03          ADR      r1,|L1.2136|
000554  e284009a          ADD      r0,r4,#0x9a
000558  ebfffffe          BL       __aeabi_memcpy
;;;213        memcpy(pIPassDPTIBody->ProjectFlag, "00", sizeof(pIPassDPTIBody->ProjectFlag));                                                 //28    專案優惠旗標 
00055c  e28f0fbe          ADR      r0,|L1.2140|
000560  e5d01000          LDRB     r1,[r0,#0]
000564  e5c410a0          STRB     r1,[r4,#0xa0]
000568  e5d00001          LDRB     r0,[r0,#1]
00056c  e5c400a1          STRB     r0,[r4,#0xa1]
;;;214        memcpy(pIPassDPTIBody->ProjectOffer, "000000", sizeof(pIPassDPTIBody->ProjectOffer));                                           //29    專案優惠金額 
000570  e3a02006          MOV      r2,#6
000574  e28f1fb7          ADR      r1,|L1.2136|
000578  e28400a2          ADD      r0,r4,#0xa2
00057c  ebfffffe          BL       __aeabi_memcpy
;;;215        
;;;216        uint32_t Ticket1IssueCode = CardLogBuffToUint32(&icdData[55], 2);
000580  e3a01002          MOV      r1,#2
000584  e2850037          ADD      r0,r5,#0x37
000588  ebfffffe          BL       CardLogBuffToUint32
00058c  e58d0090          STR      r0,[sp,#0x90]
;;;217        CardLogUint32ToHexString("Ticket1IssueCode", Ticket1IssueCode, pIPassDPTIBody->Ticket1IssueCode, sizeof(pIPassDPTIBody->Ticket1IssueCode));     //30    定期票 1 發行單位 
000590  e3a03004          MOV      r3,#4
000594  e28420a8          ADD      r2,r4,#0xa8
000598  e28f0fb2          ADR      r0,|L1.2152|
00059c  e59d1090          LDR      r1,[sp,#0x90]
0005a0  ebfffffe          BL       CardLogUint32ToHexString
;;;218        
;;;219        uint32_t Ticket1Type = CardLogBuffToUint32(&icdData[58], 1);
0005a4  e3a01001          MOV      r1,#1
0005a8  e285003a          ADD      r0,r5,#0x3a
0005ac  ebfffffe          BL       CardLogBuffToUint32
0005b0  e58d008c          STR      r0,[sp,#0x8c]
;;;220        CardLogUint32ToHexString("Ticket1Type", Ticket1Type, pIPassDPTIBody->Ticket1Type, sizeof(pIPassDPTIBody->Ticket1Type));                         //31    定期票 1 種類 
0005b4  e3a03002          MOV      r3,#2
0005b8  e28420ac          ADD      r2,r4,#0xac
0005bc  e28f0fae          ADR      r0,|L1.2172|
0005c0  e59d108c          LDR      r1,[sp,#0x8c]
0005c4  ebfffffe          BL       CardLogUint32ToHexString
;;;221        
;;;222        uint32_t Ticket1StartDate = CardLogBuffToUint32(&icdData[59], 2);
0005c8  e3a01002          MOV      r1,#2
0005cc  e285003b          ADD      r0,r5,#0x3b
0005d0  ebfffffe          BL       CardLogBuffToUint32
0005d4  e58d0088          STR      r0,[sp,#0x88]
;;;223        CardLogUint32ToDosTime("Ticket1StartDate", Ticket1StartDate, pIPassDPTIBody->Ticket1StartDate.value, sizeof(pIPassDPTIBody->Ticket1StartDate.value));   //32    定期票 1 起始日期 
0005d8  e3a03008          MOV      r3,#8
0005dc  e28420ae          ADD      r2,r4,#0xae
0005e0  e28f0e2a          ADR      r0,|L1.2184|
0005e4  e59d1088          LDR      r1,[sp,#0x88]
0005e8  ebfffffe          BL       CardLogUint32ToDosTime
;;;224             
;;;225        uint32_t Ticket1EndDate = CardLogBuffToUint32(&icdData[61], 2);
0005ec  e3a01002          MOV      r1,#2
0005f0  e285003d          ADD      r0,r5,#0x3d
0005f4  ebfffffe          BL       CardLogBuffToUint32
0005f8  e58d0084          STR      r0,[sp,#0x84]
;;;226        CardLogUint32ToDosTime("Ticket1EndDate", Ticket1EndDate, pIPassDPTIBody->Ticket1EndDate.value, sizeof(pIPassDPTIBody->Ticket1EndDate.value));           //33    定期票 1 結束日期 
0005fc  e3a03008          MOV      r3,#8
000600  e28420b6          ADD      r2,r4,#0xb6
000604  e28f0e29          ADR      r0,|L1.2204|
000608  e59d1084          LDR      r1,[sp,#0x84]
00060c  ebfffffe          BL       CardLogUint32ToDosTime
;;;227        
;;;228        uint32_t Ticket2IssueCode = CardLogBuffToUint32(&icdData[64], 2);
000610  e3a01002          MOV      r1,#2
000614  e2850040          ADD      r0,r5,#0x40
000618  ebfffffe          BL       CardLogBuffToUint32
00061c  e58d0080          STR      r0,[sp,#0x80]
;;;229        CardLogUint32ToHexString("Ticket2IssueCode", Ticket2IssueCode, pIPassDPTIBody->Ticket2IssueCode, sizeof(pIPassDPTIBody->Ticket2IssueCode));             //34    定期票 2 發行單位 
000620  e3a03004          MOV      r3,#4
000624  e28420be          ADD      r2,r4,#0xbe
000628  e28f0f9f          ADR      r0,|L1.2220|
00062c  e59d1080          LDR      r1,[sp,#0x80]
000630  ebfffffe          BL       CardLogUint32ToHexString
;;;230        
;;;231        uint32_t Ticket2Type = CardLogBuffToUint32(&icdData[66], 1);
000634  e3a01001          MOV      r1,#1
000638  e2850042          ADD      r0,r5,#0x42
00063c  ebfffffe          BL       CardLogBuffToUint32
000640  e58d007c          STR      r0,[sp,#0x7c]
;;;232        CardLogUint32ToHexString("Ticket2Type", Ticket2Type, pIPassDPTIBody->Ticket2Type, sizeof(pIPassDPTIBody->Ticket2Type));                                 //35    定期票 2 種類 
000644  e3a03002          MOV      r3,#2
000648  e28420c2          ADD      r2,r4,#0xc2
00064c  e28f0f9b          ADR      r0,|L1.2240|
000650  e59d107c          LDR      r1,[sp,#0x7c]
000654  ebfffffe          BL       CardLogUint32ToHexString
;;;233        
;;;234        uint32_t Ticket2StartDate = CardLogBuffToUint32(&icdData[67], 2);
000658  e3a01002          MOV      r1,#2
00065c  e2850043          ADD      r0,r5,#0x43
000660  ebfffffe          BL       CardLogBuffToUint32
000664  e58d0078          STR      r0,[sp,#0x78]
;;;235        CardLogUint32ToDosTime("Ticket2StartDate", Ticket2StartDate, pIPassDPTIBody->Ticket2StartDate.value, sizeof(pIPassDPTIBody->Ticket2StartDate.value));   //36    定期票 2 起始日期 
000668  e3a03008          MOV      r3,#8
00066c  e28420c4          ADD      r2,r4,#0xc4
000670  e28f0f95          ADR      r0,|L1.2252|
000674  e59d1078          LDR      r1,[sp,#0x78]
000678  ebfffffe          BL       CardLogUint32ToDosTime
;;;236        
;;;237        uint32_t Ticket2EndDate = CardLogBuffToUint32(&icdData[69], 2);
00067c  e3a01002          MOV      r1,#2
000680  e2850045          ADD      r0,r5,#0x45
000684  ebfffffe          BL       CardLogBuffToUint32
000688  e58d0074          STR      r0,[sp,#0x74]
;;;238        CardLogUint32ToDosTime("Ticket2EndDate", Ticket2EndDate, pIPassDPTIBody->Ticket2EndDate.value, sizeof(pIPassDPTIBody->Ticket2EndDate.value));           //37    定期票 2 結束日期 
00068c  e3a03008          MOV      r3,#8
000690  e28420cc          ADD      r2,r4,#0xcc
000694  e28f0f91          ADR      r0,|L1.2272|
000698  e59d1074          LDR      r1,[sp,#0x74]
00069c  ebfffffe          BL       CardLogUint32ToDosTime
;;;239        
;;;240        RTC_TIME_DATA_T time;
;;;241        char PreviousTxnDateStr[10];
;;;242        char PreviousTxnTimeStr[8];     
;;;243        time_t   PreviousTxnDateUTC = CardLogBuffToUint32(&icdData[36], 4);
0006a0  e3a01004          MOV      r1,#4
0006a4  e2850024          ADD      r0,r5,#0x24
0006a8  ebfffffe          BL       CardLogBuffToUint32
0006ac  e58d002c          STR      r0,[sp,#0x2c]
;;;244        Time2RTC(PreviousTxnDateUTC, &time);    
0006b0  e28d1044          ADD      r1,sp,#0x44
0006b4  e59d002c          LDR      r0,[sp,#0x2c]
0006b8  ebfffffe          BL       Time2RTC
;;;245        sprintf(PreviousTxnDateStr, "%04d%02d%02d", time.u32Year, time.u32cMonth, time.u32cDay);
0006bc  e59d0058          LDR      r0,[sp,#0x58]
0006c0  e58d0000          STR      r0,[sp,#0]
0006c4  e28f1f89          ADR      r1,|L1.2288|
0006c8  e59d2060          LDR      r2,[sp,#0x60]
0006cc  e59d305c          LDR      r3,[sp,#0x5c]
0006d0  e28d0038          ADD      r0,sp,#0x38
0006d4  ebfffffe          BL       __2sprintf
;;;246        sprintf(PreviousTxnTimeStr, "%02d%02d%02d", time.u32cHour, time.u32cMinute, time.u32cSecond);
0006d8  e59d0048          LDR      r0,[sp,#0x48]
0006dc  e58d0000          STR      r0,[sp,#0]
0006e0  e28f1f86          ADR      r1,|L1.2304|
0006e4  e59d2050          LDR      r2,[sp,#0x50]
0006e8  e59d304c          LDR      r3,[sp,#0x4c]
0006ec  e28d0030          ADD      r0,sp,#0x30
0006f0  ebfffffe          BL       __2sprintf
;;;247        memcpy(pIPassDPTIBody->PreviousTxnDate.value, PreviousTxnDateStr, sizeof(pIPassDPTIBody->PreviousTxnDate.value));   //38    前筆交易日期 
0006f4  e3a02008          MOV      r2,#8
0006f8  e28d1038          ADD      r1,sp,#0x38
0006fc  e28400d4          ADD      r0,r4,#0xd4
000700  ebfffffe          BL       __aeabi_memcpy
;;;248        memcpy(pIPassDPTIBody->PreviousTxnTime.value, PreviousTxnTimeStr, sizeof(pIPassDPTIBody->PreviousTxnTime.value));   //39    前筆交易時間 
000704  e3a02006          MOV      r2,#6
000708  e28d1030          ADD      r1,sp,#0x30
00070c  e28400dc          ADD      r0,r4,#0xdc
000710  ebfffffe          BL       __aeabi_memcpy
;;;249    
;;;250        uint32_t PreviousTxnType = CardLogBuffToUint32(&icdData[40], 1);
000714  e3a01001          MOV      r1,#1
000718  e2850028          ADD      r0,r5,#0x28
00071c  ebfffffe          BL       CardLogBuffToUint32
000720  e58d0028          STR      r0,[sp,#0x28]
;;;251        CardLogUint32ToHexString("PreviousTxnType", PreviousTxnType, pIPassDPTIBody->PreviousTxnType, sizeof(pIPassDPTIBody->PreviousTxnType));             //40    前筆交易類別 
000724  e3a03002          MOV      r3,#2
000728  e28420e2          ADD      r2,r4,#0xe2
00072c  e28f0f77          ADR      r0,|L1.2320|
000730  e59d1028          LDR      r1,[sp,#0x28]
000734  ebfffffe          BL       CardLogUint32ToHexString
;;;252        
;;;253        uint32_t PreviousTxnAmount = CardLogBuffToUint32(&icdData[41], 2);
000738  e3a01002          MOV      r1,#2
00073c  e2850029          ADD      r0,r5,#0x29
000740  ebfffffe          BL       CardLogBuffToUint32
000744  e58d0024          STR      r0,[sp,#0x24]
;;;254        CardLogUint32ToString("PreviousTxnAmount", PreviousTxnAmount, pIPassDPTIBody->PreviousTxnAmount, sizeof(pIPassDPTIBody->PreviousTxnAmount));        //41    前筆交易票值/票點 
000748  e3a03006          MOV      r3,#6
00074c  e28420e4          ADD      r2,r4,#0xe4
000750  e28f0f72          ADR      r0,|L1.2336|
000754  e59d1024          LDR      r1,[sp,#0x24]
000758  ebfffffe          BL       CardLogUint32ToString
;;;255        
;;;256        uint32_t PreviousBalanceAfterTxn = CardLogBuffToUint32(&icdData[43], 2);
00075c  e3a01002          MOV      r1,#2
000760  e285002b          ADD      r0,r5,#0x2b
000764  ebfffffe          BL       CardLogBuffToUint32
000768  e58d0020          STR      r0,[sp,#0x20]
;;;257        CardLogUint32ToString("PreviousBalanceAfterTxn", PreviousBalanceAfterTxn, pIPassDPTIBody->PreviousBalanceAfterTxn, sizeof(pIPassDPTIBody->PreviousBalanceAfterTxn)); //42    前筆交易後票值/點 
00076c  e3a03006          MOV      r3,#6
000770  e28420ea          ADD      r2,r4,#0xea
000774  e28f0f6e          ADR      r0,|L1.2356|
000778  e59d1020          LDR      r1,[sp,#0x20]
00077c  ebfffffe          BL       CardLogUint32ToString
;;;258        
;;;259        uint32_t PreviousTxnSysID = CardLogBuffToUint32(&icdData[45], 1);
000780  e3a01001          MOV      r1,#1
000784  e285002d          ADD      r0,r5,#0x2d
000788  ebfffffe          BL       CardLogBuffToUint32
00078c  e58d001c          STR      r0,[sp,#0x1c]
;;;260        CardLogUint32ToHexString("PreviousTxnSysID", PreviousTxnSysID, pIPassDPTIBody->PreviousTxnSysID, sizeof(pIPassDPTIBody->PreviousTxnSysID));         //43    前筆交易系統編號 
000790  e3a03002          MOV      r3,#2
000794  e28420f0          ADD      r2,r4,#0xf0
000798  e28f0f6b          ADR      r0,|L1.2380|
00079c  e59d101c          LDR      r1,[sp,#0x1c]
0007a0  ebfffffe          BL       CardLogUint32ToHexString
;;;261        
;;;262        uint32_t PreviousTxnLocation = CardLogBuffToUint32(&icdData[46], 1);
0007a4  e3a01001          MOV      r1,#1
0007a8  e285002e          ADD      r0,r5,#0x2e
0007ac  ebfffffe          BL       CardLogBuffToUint32
0007b0  e58d0018          STR      r0,[sp,#0x18]
;;;263        CardLogUint32ToHexString("PreviousTxnLocation", PreviousTxnLocation, pIPassDPTIBody->PreviousTxnLocation, sizeof(pIPassDPTIBody->PreviousTxnLocation));     //44    前筆交易地點/業者 
0007b4  e3a03002          MOV      r3,#2
0007b8  e28420f2          ADD      r2,r4,#0xf2
0007bc  e28f0f67          ADR      r0,|L1.2400|
0007c0  e59d1018          LDR      r1,[sp,#0x18]
0007c4  ebfffffe          BL       CardLogUint32ToHexString
;;;264      
;;;265        uint32_t PreviousTxnequipmentID = CardLogBuffToUint32(&icdData[47], 4);
0007c8  e3a01004          MOV      r1,#4
0007cc  e285002f          ADD      r0,r5,#0x2f
0007d0  ebfffffe          BL       CardLogBuffToUint32
0007d4  e58d0014          STR      r0,[sp,#0x14]
;;;266        CardLogUint32ToHexString("PreviousTxnequipmentID", PreviousTxnequipmentID, pIPassDPTIBody->PreviousTxnequipmentID, sizeof(pIPassDPTIBody->PreviousTxnequipmentID));  //45    前筆交易設備編號 
0007d8  e3a03008          MOV      r3,#8
0007dc  e28420f4          ADD      r2,r4,#0xf4
0007e0  e28f0f63          ADR      r0,|L1.2420|
0007e4  e59d1014          LDR      r1,[sp,#0x14]
0007e8  ebfffffe          BL       CardLogUint32ToHexString
;;;267        
;;;268        memcpy(pIPassDPTIBody->APIVersion, APIVersion, sizeof(pIPassDPTIBody->APIVersion));                             //46    API Ver. 
0007ec  e3a02004          MOV      r2,#4
0007f0  e28400fc          ADD      r0,r4,#0xfc
0007f4  e59d10e4          LDR      r1,[sp,#0xe4]
0007f8  ebfffffe          BL       __aeabi_memcpy
;;;269        memcpy(pIPassDPTIBody->BusinessDate.value, dateStr, sizeof(pIPassDPTIBody->BusinessDate.value));                //47    Business Date 
0007fc  e3a02008          MOV      r2,#8
000800  e2840c01          ADD      r0,r4,#0x100
000804  e59d10dc          LDR      r1,[sp,#0xdc]
000808  ebfffffe          BL       __aeabi_memcpy
;;;270        CardLogFillSpace(pIPassDPTIBody->Reserved, sizeof(pIPassDPTIBody->Reserved));                                   //48    Reserved 
00080c  e3a0100e          MOV      r1,#0xe
000810  e2840f42          ADD      r0,r4,#0x108
000814  ebfffffe          BL       CardLogFillSpace
;;;271        
;;;272        uint32_t SAMID_1 = CardLogHexBuffToUint32(&executeData[6], 4);
000818  e3a01004          MOV      r1,#4
00081c  e2880006          ADD      r0,r8,#6
000820  ebfffffe          BL       CardLogHexBuffToUint32
000824  ea000058          B        |L1.2444|
                  |L1.2088|
000828  4964656e          DCB      "IdentityType",0
00082c  74697479
000830  54797065
000834  00      
000835  00                DCB      0
000836  00                DCB      0
000837  00                DCB      0
                  |L1.2104|
000838  43617264          DCB      "CardType",0
00083c  54797065
000840  00      
000841  00                DCB      0
000842  00                DCB      0
000843  00                DCB      0
                  |L1.2116|
000844  49737375          DCB      "IssueCode",0
000848  65436f64
00084c  6500    
00084e  00                DCB      0
00084f  00                DCB      0
                  |L1.2128|
000850  3100              DCB      "1",0
000852  00                DCB      0
000853  00                DCB      0
                  |L1.2132|
000854  4100              DCB      "A",0
000856  00                DCB      0
000857  00                DCB      0
                  |L1.2136|
000858  30303030          DCB      "0000"
                  |L1.2140|
00085c  303000            DCB      "00",0
00085f  00                DCB      0
                  |L1.2144|
000860  30303030          DCB      "0000",0
000864  00      
000865  00                DCB      0
000866  00                DCB      0
000867  00                DCB      0
                  |L1.2152|
000868  5469636b          DCB      "Ticket1IssueCode",0
00086c  65743149
000870  73737565
000874  436f6465
000878  00      
000879  00                DCB      0
00087a  00                DCB      0
00087b  00                DCB      0
                  |L1.2172|
00087c  5469636b          DCB      "Ticket1Type",0
000880  65743154
000884  79706500
                  |L1.2184|
000888  5469636b          DCB      "Ticket1StartDate",0
00088c  65743153
000890  74617274
000894  44617465
000898  00      
000899  00                DCB      0
00089a  00                DCB      0
00089b  00                DCB      0
                  |L1.2204|
00089c  5469636b          DCB      "Ticket1EndDate",0
0008a0  65743145
0008a4  6e644461
0008a8  746500  
0008ab  00                DCB      0
                  |L1.2220|
0008ac  5469636b          DCB      "Ticket2IssueCode",0
0008b0  65743249
0008b4  73737565
0008b8  436f6465
0008bc  00      
0008bd  00                DCB      0
0008be  00                DCB      0
0008bf  00                DCB      0
                  |L1.2240|
0008c0  5469636b          DCB      "Ticket2Type",0
0008c4  65743254
0008c8  79706500
                  |L1.2252|
0008cc  5469636b          DCB      "Ticket2StartDate",0
0008d0  65743253
0008d4  74617274
0008d8  44617465
0008dc  00      
0008dd  00                DCB      0
0008de  00                DCB      0
0008df  00                DCB      0
                  |L1.2272|
0008e0  5469636b          DCB      "Ticket2EndDate",0
0008e4  65743245
0008e8  6e644461
0008ec  746500  
0008ef  00                DCB      0
                  |L1.2288|
0008f0  25303464          DCB      "%04d%02d%02d",0
0008f4  25303264
0008f8  25303264
0008fc  00      
0008fd  00                DCB      0
0008fe  00                DCB      0
0008ff  00                DCB      0
                  |L1.2304|
000900  25303264          DCB      "%02d%02d%02d",0
000904  25303264
000908  25303264
00090c  00      
00090d  00                DCB      0
00090e  00                DCB      0
00090f  00                DCB      0
                  |L1.2320|
000910  50726576          DCB      "PreviousTxnType",0
000914  696f7573
000918  54786e54
00091c  79706500
                  |L1.2336|
000920  50726576          DCB      "PreviousTxnAmount",0
000924  696f7573
000928  54786e41
00092c  6d6f756e
000930  7400    
000932  00                DCB      0
000933  00                DCB      0
                  |L1.2356|
000934  50726576          DCB      "PreviousBalanceAfterTxn",0
000938  696f7573
00093c  42616c61
000940  6e636541
000944  66746572
000948  54786e00
                  |L1.2380|
00094c  50726576          DCB      "PreviousTxnSysID",0
000950  696f7573
000954  54786e53
000958  79734944
00095c  00      
00095d  00                DCB      0
00095e  00                DCB      0
00095f  00                DCB      0
                  |L1.2400|
000960  50726576          DCB      "PreviousTxnLocation",0
000964  696f7573
000968  54786e4c
00096c  6f636174
000970  696f6e00
                  |L1.2420|
000974  50726576          DCB      "PreviousTxnequipmentID",0
000978  696f7573
00097c  54786e65
000980  71756970
000984  6d656e74
000988  494400  
00098b  00                DCB      0
                  |L1.2444|
00098c  e58d0010          STR      r0,[sp,#0x10]
;;;273        uint32_t SAMID_2 = CardLogHexBuffToUint32(&executeData[10], 4);
000990  e3a01004          MOV      r1,#4
000994  e288000a          ADD      r0,r8,#0xa
000998  ebfffffe          BL       CardLogHexBuffToUint32
00099c  e58d000c          STR      r0,[sp,#0xc]
;;;274        CardLogUint32ToHexString("SAMID_1", SAMID_1, &(pIPassDPTIBody->SAMID[0]),                               sizeof(pIPassDPTIBody->SAMID)/2);                           //49    SAM id 
0009a0  e3a03008          MOV      r3,#8
0009a4  e2842c01          ADD      r2,r4,#0x100
0009a8  e2822016          ADD      r2,r2,#0x16
0009ac  e28f0098          ADR      r0,|L1.2636|
0009b0  e59d1010          LDR      r1,[sp,#0x10]
0009b4  ebfffffe          BL       CardLogUint32ToHexString
;;;275        CardLogUint32ToHexString("SAMID_2", SAMID_2, &(pIPassDPTIBody->SAMID[sizeof(pIPassDPTIBody->SAMID)/2]), sizeof(pIPassDPTIBody->SAMID)/2);
0009b8  e3a03008          MOV      r3,#8
0009bc  e2842c01          ADD      r2,r4,#0x100
0009c0  e282201e          ADD      r2,r2,#0x1e
0009c4  e28f0088          ADR      r0,|L1.2644|
0009c8  e59d100c          LDR      r1,[sp,#0xc]
0009cc  ebfffffe          BL       CardLogUint32ToHexString
;;;276                  
;;;277        uint32_t TxnAuthenticationCode = CardLogHexBuffToUint32(&executeData[14], 4);
0009d0  e3a01004          MOV      r1,#4
0009d4  e288000e          ADD      r0,r8,#0xe
0009d8  ebfffffe          BL       CardLogHexBuffToUint32
0009dc  e58d0008          STR      r0,[sp,#8]
;;;278        CardLogUint32ToHexString("TxnAuthenticationCode", TxnAuthenticationCode, pIPassDPTIBody->TxnAuthenticationCode, sizeof(pIPassDPTIBody->TxnAuthenticationCode));    //50    交易驗證碼(TAC) 
0009e0  e3a03008          MOV      r3,#8
0009e4  e2842c01          ADD      r2,r4,#0x100
0009e8  e2822026          ADD      r2,r2,#0x26
0009ec  e28f0068          ADR      r0,|L1.2652|
0009f0  e59d1008          LDR      r1,[sp,#8]
0009f4  ebfffffe          BL       CardLogUint32ToHexString
;;;279        memcpy(&pIPassDPTIBody->TACVerifyResult, "0", sizeof(pIPassDPTIBody->TACVerifyResult));             //51    TAC Varify 
0009f8  e28f1074          ADR      r1,|L1.2676|
0009fc  e5d11000          LDRB     r1,[r1,#0]
000a00  e5c4112e          STRB     r1,[r4,#0x12e]
;;;280        
;;;281        CardLogFillSeparator(&(pIPassDPTIBody->Separator));         //52    Record Separator 
000a04  e2840c01          ADD      r0,r4,#0x100
000a08  e280002f          ADD      r0,r0,#0x2f
000a0c  ebfffffe          BL       CardLogFillSeparator
;;;282        pIPassDPTIBody->endChar = 0x0;; 
000a10  e3a00000          MOV      r0,#0
000a14  e5c40131          STRB     r0,[r4,#0x131]
;;;283        sysprintf("\r\n====  IPASSLogInit Body:[%s]\r\n", pIPassDPTIBody);
000a18  e1a01004          MOV      r1,r4
000a1c  e28f0054          ADR      r0,|L1.2680|
000a20  ebfffffe          BL       sysprintf
;;;284        
;;;285        
;;;286        return TRUE;
000a24  e3a00001          MOV      r0,#1
000a28  e28dd0a4          ADD      sp,sp,#0xa4
;;;287    }
000a2c  e8bd8ff0          POP      {r4-r11,pc}
;;;288    uint8_t* IPASSLogDPTIGetContain(int* dataLen)
                          ENDP

                  IPASSLogDPTIGetContain PROC
000a30  e1a01000          MOV      r1,r0
;;;289    {
;;;290        * dataLen = sizeof(IPassDPTIBody);
000a34  e51f06e0          LDR      r0,|L1.860|
000a38  e5810000          STR      r0,[r1,#0]
;;;291        return (uint8_t*)&iPassDPTI;
000a3c  e59f0058          LDR      r0,|L1.2716|
;;;292    }
000a40  e12fff1e          BX       lr
;;;293    char* IPASSLogDPTIGetFileName(void)
                          ENDP

                  IPASSLogDPTIGetFileName PROC
000a44  e59f0054          LDR      r0,|L1.2720|
;;;294    {
;;;295        return currentIPASSDTFIFileName;
;;;296    }
000a48  e12fff1e          BX       lr
;;;297    /*** * Copyright (C) 2016 Far Easy Pass LTD. All rights reserved. ***/
                          ENDP

                  |L1.2636|
000a4c  53414d49          DCB      "SAMID_1",0
000a50  445f3100
                  |L1.2644|
000a54  53414d49          DCB      "SAMID_2",0
000a58  445f3200
                  |L1.2652|
000a5c  54786e41          DCB      "TxnAuthenticationCode",0
000a60  75746865
000a64  6e746963
000a68  6174696f
000a6c  6e436f64
000a70  6500    
000a72  00                DCB      0
000a73  00                DCB      0
                  |L1.2676|
000a74  3000              DCB      "0",0
000a76  00                DCB      0
000a77  00                DCB      0
                  |L1.2680|
000a78  0d0a3d3d          DCB      "\r\n====  IPASSLogInit Body:[%s]\r\n",0
000a7c  3d3d2020
000a80  49504153
000a84  534c6f67
000a88  496e6974
000a8c  20426f64
000a90  793a5b25
000a94  735d0d0a
000a98  00      
000a99  00                DCB      0
000a9a  00                DCB      0
000a9b  00                DCB      0
                  |L1.2716|
                          DCD      iPassDPTI
                  |L1.2720|
                          DCD      currentIPASSDTFIFileName

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  iPassDPTI
                          %        306
                  currentIPASSDTFIFileName
                          %        255

                          AREA ||.data||, DATA, ALIGN=2

                  DPTITraceNo
                          DCD      0x00000000
