; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\guiburnintester.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\guiburnintester.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\guiburnintester.crf src\user\guiburnintester.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  updateData PROC
;;;61     /*-----------------------------------------*/
;;;62     static void updateData(void)
000000  e92d4070          PUSH     {r4-r6,lr}
;;;63     {
000004  e24dd070          SUB      sp,sp,#0x70
;;;64         if (GetPrepareStopBurninFlag() && GetBurninTerminatedFlag()) {
000008  ebfffffe          BL       GetPrepareStopBurninFlag
00000c  e3500000          CMP      r0,#0
000010  0a000004          BEQ      |L1.40|
000014  ebfffffe          BL       GetBurninTerminatedFlag
000018  e3500000          CMP      r0,#0
00001c  0a000001          BEQ      |L1.40|
                  |L1.32|
;;;65             return;
;;;66         }
;;;67         char stringBuffer[32];
;;;68         RTC_TIME_DATA_T pt;
;;;69         uint32_t hours, minutes, seconds;
;;;70         if(E_RTC_SUCCESS == RTC_Read(RTC_CURRENT_TIME, &pt))
;;;71         {
;;;72             sprintf(stringBuffer, "%04d\\%02d\\%02d %02d:%02d:%02d", pt.u32Year, pt.u32cMonth, pt.u32cDay, pt.u32cHour, pt.u32cMinute, pt.u32cSecond);
;;;73             EPDDrawString(FALSE, stringBuffer, 440, 60);
;;;74             GetBurninTestRuntime(&hours, &minutes, &seconds);
;;;75             sprintf(stringBuffer, "%02d:%02d:%02d", hours, minutes, seconds);
;;;76             EPDDrawString(FALSE, stringBuffer, 640, 110);
;;;77         }
;;;78         
;;;79         if (pageIndex == 0)
;;;80         {
;;;81             sprintf(stringBuffer, "%d:%d", GetLedBurninTestCounter(), GetLedBurninTestErrorCounter());
;;;82             EPDDrawString(FALSE, stringBuffer, 640, 160);
;;;83             sprintf(stringBuffer, "%d:%d", GetEpdBurninTestCounter(), GetEpdBurninTestErrorCounter());
;;;84             EPDDrawString(FALSE, stringBuffer, 640, 210);
;;;85             sprintf(stringBuffer, "%d:%d", GetRadarBurninTestCounter(VOS_INDEX_0), GetRadarBurninTestErrorCounter(VOS_INDEX_0));
;;;86             EPDDrawString(FALSE, stringBuffer, 640, 260);
;;;87             sprintf(stringBuffer, "%d:%d", GetRadarBurninTestCounter(VOS_INDEX_1), GetRadarBurninTestErrorCounter(VOS_INDEX_1));
;;;88             EPDDrawString(FALSE, stringBuffer, 640, 310);
;;;89             sprintf(stringBuffer, "%d:%d", GetLidarBurninTestCounter(VOS_INDEX_0), GetLidarBurninTestErrorCounter(VOS_INDEX_0));
;;;90             EPDDrawString(FALSE, stringBuffer, 640, 360);
;;;91             sprintf(stringBuffer, "%d:%d", GetLidarBurninTestCounter(VOS_INDEX_1), GetLidarBurninTestErrorCounter(VOS_INDEX_1));
;;;92             EPDDrawString(FALSE, stringBuffer, 640, 410);
;;;93             sprintf(stringBuffer, "%d:%d", GetBatteryBurninTestCounter(BATTERY_INDEX_0), GetBatteryBurninTestErrorCounter(BATTERY_INDEX_0));
;;;94             EPDDrawString(FALSE, stringBuffer, 640, 460);
;;;95             sprintf(stringBuffer, "%d:%d", GetBatteryBurninTestCounter(BATTERY_INDEX_1), GetBatteryBurninTestErrorCounter(BATTERY_INDEX_1));
;;;96             EPDDrawString(FALSE, stringBuffer, 640, 510);
;;;97             sprintf(stringBuffer, "%d", GetBatteryLastADCValue(BATTERY_INDEX_0));
;;;98             EPDDrawString(FALSE, stringBuffer, 500, 460);
;;;99             sprintf(stringBuffer, "%d", GetBatteryLastADCValue(BATTERY_INDEX_1));
;;;100            EPDDrawString(FALSE, stringBuffer, 500, 510);
;;;101            sprintf(stringBuffer, "%d:%d", GetBatteryBurninTestCounter(BATTERY_INDEX_SOLAR), GetBatteryBurninTestErrorCounter(BATTERY_INDEX_SOLAR));
;;;102            EPDDrawString(FALSE, stringBuffer, 640, 560);
;;;103            sprintf(stringBuffer, "%d:%d", GetNT066EBurninTestCounter(), GetNT066EBurninTestErrorCounter());
;;;104            EPDDrawString(FALSE, stringBuffer, 640, 610);
;;;105            sprintf(stringBuffer, "%d:%d", GetModemATBurninTestCounter(), GetModemATBurninTestErrorCounter());
;;;106            EPDDrawString(TRUE, stringBuffer, 640, 660);
;;;107        }
;;;108        else
;;;109        {
;;;110            sprintf(stringBuffer, "%d:%d:%d", GetModemFTPBurninTestCounter(), GetModemDialupBurninTestErrorCounter(), GetModemFTPBurninTestErrorCounter());
;;;111            EPDDrawString(FALSE, stringBuffer, 640, 160);
;;;112            sprintf(stringBuffer, "%d:%d", GetSmartCardBurninTestCounter(), GetSmartCardBurninTestErrorCounter());
;;;113            EPDDrawString(FALSE, stringBuffer, 640, 210);
;;;114            sprintf(stringBuffer, "%d:%d", GetCardReaderBurninTestCounter(), GetCardReaderBurninTestErrorCounter());
;;;115            EPDDrawString(FALSE, stringBuffer, 640, 260);
;;;116            sprintf(stringBuffer, "%d:%d", GetCreditReaderBurninTestCounter(), GetCreditReaderBurninTestErrorCounter());
;;;117            EPDDrawString(FALSE, stringBuffer, 640, 310);
;;;118            sprintf(stringBuffer, "%d:%d", GetSDCardBurninTestCounter(), GetSDCardBurninTestErrorCounter());
;;;119            EPDDrawString(FALSE, stringBuffer, 640, 360);
;;;120            sprintf(stringBuffer, "%d:%d", GetNandFlashBurninTestCounter(FLASH_INDEX_0), GetNandFlashBurninTestErrorCounter(FLASH_INDEX_0));
;;;121            EPDDrawString(FALSE, stringBuffer, 640, 410);
;;;122            sprintf(stringBuffer, "%d:%d", GetNandFlashBurninTestCounter(FLASH_INDEX_1), GetNandFlashBurninTestErrorCounter(FLASH_INDEX_1));
;;;123            EPDDrawString(FALSE, stringBuffer, 640, 460);
;;;124            sprintf(stringBuffer, "%d:%d", GetNandFlashBurninTestCounter(FLASH_INDEX_2), GetNandFlashBurninTestErrorCounter(FLASH_INDEX_2));
;;;125            EPDDrawString(TRUE, stringBuffer, 640, 510);
;;;126            //if (GPIO_ReadBit(DIP_CARD_READER_SELECT_PORT, DIP_CARD_READER_SELECT_PIN))
;;;127            //{
;;;128                sprintf(stringBuffer, "%d:%d:%d", GetCameraBurninTestCounter(UVCAMERA_INDEX_0), GetCameraBurninPhotoErrorCounter(UVCAMERA_INDEX_0), GetCameraBurninFileErrorCounter(UVCAMERA_INDEX_0));
;;;129                EPDDrawString(FALSE, stringBuffer, 640, 560);
;;;130                sprintf(stringBuffer, "%d:%d:%d", GetCameraBurninTestCounter(UVCAMERA_INDEX_1), GetCameraBurninPhotoErrorCounter(UVCAMERA_INDEX_1), GetCameraBurninFileErrorCounter(UVCAMERA_INDEX_1));
;;;131                EPDDrawString(TRUE, stringBuffer, 640, 610);
;;;132            //}
;;;133        }
;;;134    }
000020  e28dd070          ADD      sp,sp,#0x70
000024  e8bd8070          POP      {r4-r6,pc}
                  |L1.40|
000028  e28d1020          ADD      r1,sp,#0x20           ;70
00002c  e3a00000          MOV      r0,#0                 ;70
000030  ebfffffe          BL       RTC_Read
000034  e3500000          CMP      r0,#0                 ;70
000038  1a00001f          BNE      |L1.188|
00003c  e28d3024          ADD      r3,sp,#0x24           ;72
000040  e893000b          LDM      r3,{r0,r1,r3}         ;72
000044  e59d2034          LDR      r2,[sp,#0x34]         ;72
000048  e58d000c          STR      r0,[sp,#0xc]          ;72
00004c  e58d1008          STR      r1,[sp,#8]            ;72
000050  e1cd20f0          STRD     r2,r3,[sp,#0]         ;72
000054  e28f1fdd          ADR      r1,|L1.976|
000058  e59d203c          LDR      r2,[sp,#0x3c]         ;72
00005c  e59d3038          LDR      r3,[sp,#0x38]         ;72
000060  e28d0050          ADD      r0,sp,#0x50           ;72
000064  ebfffffe          BL       __2sprintf
000068  e3a0303c          MOV      r3,#0x3c              ;73
00006c  e3a02f6e          MOV      r2,#0x1b8             ;73
000070  e28d1050          ADD      r1,sp,#0x50           ;73
000074  e3a00000          MOV      r0,#0                 ;73
000078  ebfffffe          BL       EPDDrawString
00007c  e28d2014          ADD      r2,sp,#0x14           ;74
000080  e28d1018          ADD      r1,sp,#0x18           ;74
000084  e28d001c          ADD      r0,sp,#0x1c           ;74
000088  ebfffffe          BL       GetBurninTestRuntime
00008c  e59d0014          LDR      r0,[sp,#0x14]         ;75
000090  e58d0000          STR      r0,[sp,#0]            ;75
000094  e28f1fd5          ADR      r1,|L1.1008|
000098  e59d201c          LDR      r2,[sp,#0x1c]         ;75
00009c  e59d3018          LDR      r3,[sp,#0x18]         ;75
0000a0  e28d0050          ADD      r0,sp,#0x50           ;75
0000a4  ebfffffe          BL       __2sprintf
0000a8  e3a0306e          MOV      r3,#0x6e              ;76
0000ac  e3a02d0a          MOV      r2,#0x280             ;76
0000b0  e28d1050          ADD      r1,sp,#0x50           ;76
0000b4  e3a00000          MOV      r0,#0                 ;76
0000b8  ebfffffe          BL       EPDDrawString
                  |L1.188|
0000bc  e59f033c          LDR      r0,|L1.1024|
0000c0  e5d00000          LDRB     r0,[r0,#0]            ;79  ; pageIndex
0000c4  e3500000          CMP      r0,#0                 ;79
0000c8  1a0000d4          BNE      |L1.1056|
0000cc  ebfffffe          BL       GetLedBurninTestErrorCounter
0000d0  e1a04000          MOV      r4,r0                 ;81
0000d4  ebfffffe          BL       GetLedBurninTestCounter
0000d8  e1a05000          MOV      r5,r0                 ;81
0000dc  e1a03004          MOV      r3,r4                 ;81
0000e0  e1a02005          MOV      r2,r5                 ;81
0000e4  e28f1fc6          ADR      r1,|L1.1028|
0000e8  e28d0050          ADD      r0,sp,#0x50           ;81
0000ec  ebfffffe          BL       __2sprintf
0000f0  e3a030a0          MOV      r3,#0xa0              ;82
0000f4  e3a02d0a          MOV      r2,#0x280             ;82
0000f8  e28d1050          ADD      r1,sp,#0x50           ;82
0000fc  e3a00000          MOV      r0,#0                 ;82
000100  ebfffffe          BL       EPDDrawString
000104  ebfffffe          BL       GetEpdBurninTestErrorCounter
000108  e1a04000          MOV      r4,r0                 ;83
00010c  ebfffffe          BL       GetEpdBurninTestCounter
000110  e1a05000          MOV      r5,r0                 ;83
000114  e1a03004          MOV      r3,r4                 ;83
000118  e1a02005          MOV      r2,r5                 ;83
00011c  e28f1e2e          ADR      r1,|L1.1028|
000120  e28d0050          ADD      r0,sp,#0x50           ;83
000124  ebfffffe          BL       __2sprintf
000128  e3a030d2          MOV      r3,#0xd2              ;84
00012c  e3a02d0a          MOV      r2,#0x280             ;84
000130  e28d1050          ADD      r1,sp,#0x50           ;84
000134  e3a00000          MOV      r0,#0                 ;84
000138  ebfffffe          BL       EPDDrawString
00013c  e3a00000          MOV      r0,#0                 ;85
000140  ebfffffe          BL       GetRadarBurninTestErrorCounter
000144  e1a04000          MOV      r4,r0                 ;85
000148  e3a00000          MOV      r0,#0                 ;85
00014c  ebfffffe          BL       GetRadarBurninTestCounter
000150  e1a05000          MOV      r5,r0                 ;85
000154  e1a03004          MOV      r3,r4                 ;85
000158  e1a02005          MOV      r2,r5                 ;85
00015c  e28f1e2a          ADR      r1,|L1.1028|
000160  e28d0050          ADD      r0,sp,#0x50           ;85
000164  ebfffffe          BL       __2sprintf
000168  e3a03f41          MOV      r3,#0x104             ;86
00016c  e3a02d0a          MOV      r2,#0x280             ;86
000170  e28d1050          ADD      r1,sp,#0x50           ;86
000174  e3a00000          MOV      r0,#0                 ;86
000178  ebfffffe          BL       EPDDrawString
00017c  e3a00001          MOV      r0,#1                 ;87
000180  ebfffffe          BL       GetRadarBurninTestErrorCounter
000184  e1a04000          MOV      r4,r0                 ;87
000188  e3a00001          MOV      r0,#1                 ;87
00018c  ebfffffe          BL       GetRadarBurninTestCounter
000190  e1a05000          MOV      r5,r0                 ;87
000194  e1a03004          MOV      r3,r4                 ;87
000198  e1a02005          MOV      r2,r5                 ;87
00019c  e28f1e26          ADR      r1,|L1.1028|
0001a0  e28d0050          ADD      r0,sp,#0x50           ;87
0001a4  ebfffffe          BL       __2sprintf
0001a8  e59f325c          LDR      r3,|L1.1036|
0001ac  e3a02d0a          MOV      r2,#0x280             ;88
0001b0  e28d1050          ADD      r1,sp,#0x50           ;88
0001b4  e3a00000          MOV      r0,#0                 ;88
0001b8  ebfffffe          BL       EPDDrawString
0001bc  e3a00000          MOV      r0,#0                 ;89
0001c0  ebfffffe          BL       GetLidarBurninTestErrorCounter
0001c4  e1a04000          MOV      r4,r0                 ;89
0001c8  e3a00000          MOV      r0,#0                 ;89
0001cc  ebfffffe          BL       GetLidarBurninTestCounter
0001d0  e1a05000          MOV      r5,r0                 ;89
0001d4  e1a03004          MOV      r3,r4                 ;89
0001d8  e1a02005          MOV      r2,r5                 ;89
0001dc  e28f1e22          ADR      r1,|L1.1028|
0001e0  e28d0050          ADD      r0,sp,#0x50           ;89
0001e4  ebfffffe          BL       __2sprintf
0001e8  e3a03f5a          MOV      r3,#0x168             ;90
0001ec  e3a02d0a          MOV      r2,#0x280             ;90
0001f0  e28d1050          ADD      r1,sp,#0x50           ;90
0001f4  e3a00000          MOV      r0,#0                 ;90
0001f8  ebfffffe          BL       EPDDrawString
0001fc  e3a00001          MOV      r0,#1                 ;91
000200  ebfffffe          BL       GetLidarBurninTestErrorCounter
000204  e1a04000          MOV      r4,r0                 ;91
000208  e3a00001          MOV      r0,#1                 ;91
00020c  ebfffffe          BL       GetLidarBurninTestCounter
000210  e1a05000          MOV      r5,r0                 ;91
000214  e1a03004          MOV      r3,r4                 ;91
000218  e1a02005          MOV      r2,r5                 ;91
00021c  e28f1e1e          ADR      r1,|L1.1028|
000220  e28d0050          ADD      r0,sp,#0x50           ;91
000224  ebfffffe          BL       __2sprintf
000228  e59f31e0          LDR      r3,|L1.1040|
00022c  e3a02d0a          MOV      r2,#0x280             ;92
000230  e28d1050          ADD      r1,sp,#0x50           ;92
000234  e3a00000          MOV      r0,#0                 ;92
000238  ebfffffe          BL       EPDDrawString
00023c  e3a00000          MOV      r0,#0                 ;93
000240  ebfffffe          BL       GetBatteryBurninTestErrorCounter
000244  e1a04000          MOV      r4,r0                 ;93
000248  e3a00000          MOV      r0,#0                 ;93
00024c  ebfffffe          BL       GetBatteryBurninTestCounter
000250  e1a05000          MOV      r5,r0                 ;93
000254  e1a03004          MOV      r3,r4                 ;93
000258  e1a02005          MOV      r2,r5                 ;93
00025c  e28f1e1a          ADR      r1,|L1.1028|
000260  e28d0050          ADD      r0,sp,#0x50           ;93
000264  ebfffffe          BL       __2sprintf
000268  e3a03f73          MOV      r3,#0x1cc             ;94
00026c  e3a02d0a          MOV      r2,#0x280             ;94
000270  e28d1050          ADD      r1,sp,#0x50           ;94
000274  e3a00000          MOV      r0,#0                 ;94
000278  ebfffffe          BL       EPDDrawString
00027c  e3a00001          MOV      r0,#1                 ;95
000280  ebfffffe          BL       GetBatteryBurninTestErrorCounter
000284  e1a04000          MOV      r4,r0                 ;95
000288  e3a00001          MOV      r0,#1                 ;95
00028c  ebfffffe          BL       GetBatteryBurninTestCounter
000290  e1a05000          MOV      r5,r0                 ;95
000294  e1a03004          MOV      r3,r4                 ;95
000298  e1a02005          MOV      r2,r5                 ;95
00029c  e28f1e16          ADR      r1,|L1.1028|
0002a0  e28d0050          ADD      r0,sp,#0x50           ;95
0002a4  ebfffffe          BL       __2sprintf
0002a8  e59f3164          LDR      r3,|L1.1044|
0002ac  e3a02d0a          MOV      r2,#0x280             ;96
0002b0  e28d1050          ADD      r1,sp,#0x50           ;96
0002b4  e3a00000          MOV      r0,#0                 ;96
0002b8  ebfffffe          BL       EPDDrawString
0002bc  e3a00000          MOV      r0,#0                 ;97
0002c0  ebfffffe          BL       GetBatteryLastADCValue
0002c4  e1a04000          MOV      r4,r0                 ;97
0002c8  e1a02004          MOV      r2,r4                 ;97
0002cc  e28f1f51          ADR      r1,|L1.1048|
0002d0  e28d0050          ADD      r0,sp,#0x50           ;97
0002d4  ebfffffe          BL       __2sprintf
0002d8  e3a03f73          MOV      r3,#0x1cc             ;98
0002dc  e3a02f7d          MOV      r2,#0x1f4             ;98
0002e0  e28d1050          ADD      r1,sp,#0x50           ;98
0002e4  e3a00000          MOV      r0,#0                 ;98
0002e8  ebfffffe          BL       EPDDrawString
0002ec  e3a00001          MOV      r0,#1                 ;99
0002f0  ebfffffe          BL       GetBatteryLastADCValue
0002f4  e1a04000          MOV      r4,r0                 ;99
0002f8  e1a02004          MOV      r2,r4                 ;99
0002fc  e28f1f45          ADR      r1,|L1.1048|
000300  e28d0050          ADD      r0,sp,#0x50           ;99
000304  ebfffffe          BL       __2sprintf
000308  e59f3104          LDR      r3,|L1.1044|
00030c  e3a02f7d          MOV      r2,#0x1f4             ;100
000310  e28d1050          ADD      r1,sp,#0x50           ;100
000314  e3a00000          MOV      r0,#0                 ;100
000318  ebfffffe          BL       EPDDrawString
00031c  e3a00002          MOV      r0,#2                 ;101
000320  ebfffffe          BL       GetBatteryBurninTestErrorCounter
000324  e1a04000          MOV      r4,r0                 ;101
000328  e3a00002          MOV      r0,#2                 ;101
00032c  ebfffffe          BL       GetBatteryBurninTestCounter
000330  e1a05000          MOV      r5,r0                 ;101
000334  e1a03004          MOV      r3,r4                 ;101
000338  e1a02005          MOV      r2,r5                 ;101
00033c  e28f10c0          ADR      r1,|L1.1028|
000340  e28d0050          ADD      r0,sp,#0x50           ;101
000344  ebfffffe          BL       __2sprintf
000348  e3a03e23          MOV      r3,#0x230             ;102
00034c  e3a02d0a          MOV      r2,#0x280             ;102
000350  e28d1050          ADD      r1,sp,#0x50           ;102
000354  e3a00000          MOV      r0,#0                 ;102
000358  ebfffffe          BL       EPDDrawString
00035c  ebfffffe          BL       GetNT066EBurninTestErrorCounter
000360  e1a04000          MOV      r4,r0                 ;103
000364  ebfffffe          BL       GetNT066EBurninTestCounter
000368  e1a05000          MOV      r5,r0                 ;103
00036c  e1a03004          MOV      r3,r4                 ;103
000370  e1a02005          MOV      r2,r5                 ;103
000374  e28f1088          ADR      r1,|L1.1028|
000378  e28d0050          ADD      r0,sp,#0x50           ;103
00037c  ebfffffe          BL       __2sprintf
000380  e59f3094          LDR      r3,|L1.1052|
000384  e3a02d0a          MOV      r2,#0x280             ;104
000388  e28d1050          ADD      r1,sp,#0x50           ;104
00038c  e3a00000          MOV      r0,#0                 ;104
000390  ebfffffe          BL       EPDDrawString
000394  ebfffffe          BL       GetModemATBurninTestErrorCounter
000398  e1a04000          MOV      r4,r0                 ;105
00039c  ebfffffe          BL       GetModemATBurninTestCounter
0003a0  e1a05000          MOV      r5,r0                 ;105
0003a4  e1a03004          MOV      r3,r4                 ;105
0003a8  e1a02005          MOV      r2,r5                 ;105
0003ac  e28f1050          ADR      r1,|L1.1028|
0003b0  e28d0050          ADD      r0,sp,#0x50           ;105
0003b4  ebfffffe          BL       __2sprintf
0003b8  e3a03fa5          MOV      r3,#0x294             ;106
0003bc  e3a02d0a          MOV      r2,#0x280             ;106
0003c0  e28d1050          ADD      r1,sp,#0x50           ;106
0003c4  e3a00001          MOV      r0,#1                 ;106
0003c8  ebfffffe          BL       EPDDrawString
0003cc  ea0000b4          B        |L1.1700|
                  |L1.976|
0003d0  25303464          DCB      "%04d\\%02d\\%02d %02d:%02d:%02d",0
0003d4  5c253032
0003d8  645c2530
0003dc  32642025
0003e0  3032643a
0003e4  25303264
0003e8  3a253032
0003ec  6400    
0003ee  00                DCB      0
0003ef  00                DCB      0
                  |L1.1008|
0003f0  25303264          DCB      "%02d:%02d:%02d",0
0003f4  3a253032
0003f8  643a2530
0003fc  326400  
0003ff  00                DCB      0
                  |L1.1024|
                          DCD      pageIndex
                  |L1.1028|
000404  25643a25          DCB      "%d:%d",0
000408  6400    
00040a  00                DCB      0
00040b  00                DCB      0
                  |L1.1036|
                          DCD      0x00000136
                  |L1.1040|
                          DCD      0x0000019a
                  |L1.1044|
                          DCD      0x000001fe
                  |L1.1048|
000418  256400            DCB      "%d",0
00041b  00                DCB      0
                  |L1.1052|
                          DCD      0x00000262
                  |L1.1056|
000420  ebfffffe          BL       GetModemFTPBurninTestErrorCounter
000424  e1a04000          MOV      r4,r0                 ;110
000428  ebfffffe          BL       GetModemDialupBurninTestErrorCounter
00042c  e1a05000          MOV      r5,r0                 ;110
000430  ebfffffe          BL       GetModemFTPBurninTestCounter
000434  e1a06000          MOV      r6,r0                 ;110
000438  e1a03005          MOV      r3,r5                 ;110
00043c  e1a02006          MOV      r2,r6                 ;110
000440  e28f1f99          ADR      r1,|L1.1708|
000444  e58d4000          STR      r4,[sp,#0]            ;110
000448  e28d0050          ADD      r0,sp,#0x50           ;110
00044c  ebfffffe          BL       __2sprintf
000450  e3a030a0          MOV      r3,#0xa0              ;111
000454  e3a02d0a          MOV      r2,#0x280             ;111
000458  e28d1050          ADD      r1,sp,#0x50           ;111
00045c  e3a00000          MOV      r0,#0                 ;111
000460  ebfffffe          BL       EPDDrawString
000464  ebfffffe          BL       GetSmartCardBurninTestErrorCounter
000468  e1a04000          MOV      r4,r0                 ;112
00046c  ebfffffe          BL       GetSmartCardBurninTestCounter
000470  e1a05000          MOV      r5,r0                 ;112
000474  e1a03004          MOV      r3,r4                 ;112
000478  e1a02005          MOV      r2,r5                 ;112
00047c  e24f1080          ADR      r1,|L1.1028|
000480  e28d0050          ADD      r0,sp,#0x50           ;112
000484  ebfffffe          BL       __2sprintf
000488  e3a030d2          MOV      r3,#0xd2              ;113
00048c  e3a02d0a          MOV      r2,#0x280             ;113
000490  e28d1050          ADD      r1,sp,#0x50           ;113
000494  e3a00000          MOV      r0,#0                 ;113
000498  ebfffffe          BL       EPDDrawString
00049c  ebfffffe          BL       GetCardReaderBurninTestErrorCounter
0004a0  e1a04000          MOV      r4,r0                 ;114
0004a4  ebfffffe          BL       GetCardReaderBurninTestCounter
0004a8  e1a05000          MOV      r5,r0                 ;114
0004ac  e1a03004          MOV      r3,r4                 ;114
0004b0  e1a02005          MOV      r2,r5                 ;114
0004b4  e24f10b8          ADR      r1,|L1.1028|
0004b8  e28d0050          ADD      r0,sp,#0x50           ;114
0004bc  ebfffffe          BL       __2sprintf
0004c0  e3a03f41          MOV      r3,#0x104             ;115
0004c4  e3a02d0a          MOV      r2,#0x280             ;115
0004c8  e28d1050          ADD      r1,sp,#0x50           ;115
0004cc  e3a00000          MOV      r0,#0                 ;115
0004d0  ebfffffe          BL       EPDDrawString
0004d4  ebfffffe          BL       GetCreditReaderBurninTestErrorCounter
0004d8  e1a04000          MOV      r4,r0                 ;116
0004dc  ebfffffe          BL       GetCreditReaderBurninTestCounter
0004e0  e1a05000          MOV      r5,r0                 ;116
0004e4  e1a03004          MOV      r3,r4                 ;116
0004e8  e1a02005          MOV      r2,r5                 ;116
0004ec  e24f10f0          ADR      r1,|L1.1028|
0004f0  e28d0050          ADD      r0,sp,#0x50           ;116
0004f4  ebfffffe          BL       __2sprintf
0004f8  e51f30f4          LDR      r3,|L1.1036|
0004fc  e3a02d0a          MOV      r2,#0x280             ;117
000500  e28d1050          ADD      r1,sp,#0x50           ;117
000504  e3a00000          MOV      r0,#0                 ;117
000508  ebfffffe          BL       EPDDrawString
00050c  ebfffffe          BL       GetSDCardBurninTestErrorCounter
000510  e1a04000          MOV      r4,r0                 ;118
000514  ebfffffe          BL       GetSDCardBurninTestCounter
000518  e1a05000          MOV      r5,r0                 ;118
00051c  e1a03004          MOV      r3,r4                 ;118
000520  e1a02005          MOV      r2,r5                 ;118
000524  e24f1f4a          ADR      r1,|L1.1028|
000528  e28d0050          ADD      r0,sp,#0x50           ;118
00052c  ebfffffe          BL       __2sprintf
000530  e3a03f5a          MOV      r3,#0x168             ;119
000534  e3a02d0a          MOV      r2,#0x280             ;119
000538  e28d1050          ADD      r1,sp,#0x50           ;119
00053c  e3a00000          MOV      r0,#0                 ;119
000540  ebfffffe          BL       EPDDrawString
000544  e3a00000          MOV      r0,#0                 ;120
000548  ebfffffe          BL       GetNandFlashBurninTestErrorCounter
00054c  e1a04000          MOV      r4,r0                 ;120
000550  e3a00000          MOV      r0,#0                 ;120
000554  ebfffffe          BL       GetNandFlashBurninTestCounter
000558  e1a05000          MOV      r5,r0                 ;120
00055c  e1a03004          MOV      r3,r4                 ;120
000560  e1a02005          MOV      r2,r5                 ;120
000564  e24f1f5a          ADR      r1,|L1.1028|
000568  e28d0050          ADD      r0,sp,#0x50           ;120
00056c  ebfffffe          BL       __2sprintf
000570  e51f3168          LDR      r3,|L1.1040|
000574  e3a02d0a          MOV      r2,#0x280             ;121
000578  e28d1050          ADD      r1,sp,#0x50           ;121
00057c  e3a00000          MOV      r0,#0                 ;121
000580  ebfffffe          BL       EPDDrawString
000584  e3a00001          MOV      r0,#1                 ;122
000588  ebfffffe          BL       GetNandFlashBurninTestErrorCounter
00058c  e1a04000          MOV      r4,r0                 ;122
000590  e3a00001          MOV      r0,#1                 ;122
000594  ebfffffe          BL       GetNandFlashBurninTestCounter
000598  e1a05000          MOV      r5,r0                 ;122
00059c  e1a03004          MOV      r3,r4                 ;122
0005a0  e1a02005          MOV      r2,r5                 ;122
0005a4  e24f1f6a          ADR      r1,|L1.1028|
0005a8  e28d0050          ADD      r0,sp,#0x50           ;122
0005ac  ebfffffe          BL       __2sprintf
0005b0  e3a03f73          MOV      r3,#0x1cc             ;123
0005b4  e3a02d0a          MOV      r2,#0x280             ;123
0005b8  e28d1050          ADD      r1,sp,#0x50           ;123
0005bc  e3a00000          MOV      r0,#0                 ;123
0005c0  ebfffffe          BL       EPDDrawString
0005c4  e3a00002          MOV      r0,#2                 ;124
0005c8  ebfffffe          BL       GetNandFlashBurninTestErrorCounter
0005cc  e1a04000          MOV      r4,r0                 ;124
0005d0  e3a00002          MOV      r0,#2                 ;124
0005d4  ebfffffe          BL       GetNandFlashBurninTestCounter
0005d8  e1a05000          MOV      r5,r0                 ;124
0005dc  e1a03004          MOV      r3,r4                 ;124
0005e0  e1a02005          MOV      r2,r5                 ;124
0005e4  e24f1f7a          ADR      r1,|L1.1028|
0005e8  e28d0050          ADD      r0,sp,#0x50           ;124
0005ec  ebfffffe          BL       __2sprintf
0005f0  e51f31e4          LDR      r3,|L1.1044|
0005f4  e3a02d0a          MOV      r2,#0x280             ;125
0005f8  e28d1050          ADD      r1,sp,#0x50           ;125
0005fc  e3a00001          MOV      r0,#1                 ;125
000600  ebfffffe          BL       EPDDrawString
000604  e3a00000          MOV      r0,#0                 ;128
000608  ebfffffe          BL       GetCameraBurninFileErrorCounter
00060c  e1a04000          MOV      r4,r0                 ;128
000610  e3a00000          MOV      r0,#0                 ;128
000614  ebfffffe          BL       GetCameraBurninPhotoErrorCounter
000618  e1a05000          MOV      r5,r0                 ;128
00061c  e3a00000          MOV      r0,#0                 ;128
000620  ebfffffe          BL       GetCameraBurninTestCounter
000624  e1a06000          MOV      r6,r0                 ;128
000628  e1a03005          MOV      r3,r5                 ;128
00062c  e1a02006          MOV      r2,r6                 ;128
000630  e28f1074          ADR      r1,|L1.1708|
000634  e58d4000          STR      r4,[sp,#0]            ;128
000638  e28d0050          ADD      r0,sp,#0x50           ;128
00063c  ebfffffe          BL       __2sprintf
000640  e3a03e23          MOV      r3,#0x230             ;129
000644  e3a02d0a          MOV      r2,#0x280             ;129
000648  e28d1050          ADD      r1,sp,#0x50           ;129
00064c  e3a00000          MOV      r0,#0                 ;129
000650  ebfffffe          BL       EPDDrawString
000654  e3a00001          MOV      r0,#1                 ;130
000658  ebfffffe          BL       GetCameraBurninFileErrorCounter
00065c  e1a04000          MOV      r4,r0                 ;130
000660  e3a00001          MOV      r0,#1                 ;130
000664  ebfffffe          BL       GetCameraBurninPhotoErrorCounter
000668  e1a05000          MOV      r5,r0                 ;130
00066c  e3a00001          MOV      r0,#1                 ;130
000670  ebfffffe          BL       GetCameraBurninTestCounter
000674  e1a06000          MOV      r6,r0                 ;130
000678  e1a03005          MOV      r3,r5                 ;130
00067c  e1a02006          MOV      r2,r6                 ;130
000680  e28f1024          ADR      r1,|L1.1708|
000684  e58d4000          STR      r4,[sp,#0]            ;130
000688  e28d0050          ADD      r0,sp,#0x50           ;130
00068c  ebfffffe          BL       __2sprintf
000690  e51f327c          LDR      r3,|L1.1052|
000694  e3a02d0a          MOV      r2,#0x280             ;131
000698  e28d1050          ADD      r1,sp,#0x50           ;131
00069c  e3a00001          MOV      r0,#1                 ;131
0006a0  ebfffffe          BL       EPDDrawString
                  |L1.1700|
0006a4  e1a00000          MOV      r0,r0
0006a8  eafffe5c          B        |L1.32|
                  |L1.1708|
0006ac  25643a25          DCB      "%d:%d:%d",0
0006b0  643a2564
0006b4  00      
0006b5  00                DCB      0
0006b6  00                DCB      0
0006b7  00                DCB      0
                          ENDP

                  GuiBurninTesterOnDraw PROC
;;;138    /*-----------------------------------------*/
;;;139    BOOL GuiBurninTesterOnDraw(uint8_t oriGuiId, uint8_t reFreshPara, int para2, int para3)
0006b8  e92d40f0          PUSH     {r4-r7,lr}
;;;140    {
0006bc  e24dd04c          SUB      sp,sp,#0x4c
0006c0  e1a04000          MOV      r4,r0
0006c4  e1a05001          MOV      r5,r1
0006c8  e1a06002          MOV      r6,r2
0006cc  e1a07003          MOV      r7,r3
;;;141        char stringBuffer[64];
;;;142        powerStatus = TRUE;
0006d0  e3a00001          MOV      r0,#1
0006d4  e59f12cc          LDR      r1,|L1.2472|
0006d8  e5c10000          STRB     r0,[r1,#0]  ; powerStatus
;;;143        if (pageIndex == 1) {
0006dc  e51f02e4          LDR      r0,|L1.1024|
0006e0  e5d00000          LDRB     r0,[r0,#0]  ; pageIndex
0006e4  e3500001          CMP      r0,#1
0006e8  1a000003          BNE      |L1.1788|
;;;144            pageIndex = 0;
0006ec  e3a00000          MOV      r0,#0
0006f0  e51f12f8          LDR      r1,|L1.1024|
0006f4  e5c10000          STRB     r0,[r1,#0]  ; pageIndex
0006f8  ea000002          B        |L1.1800|
                  |L1.1788|
;;;145        }
;;;146        else {
;;;147            pageIndex = 1;
0006fc  e3a00001          MOV      r0,#1
000700  e51f1308          LDR      r1,|L1.1024|
000704  e5c10000          STRB     r0,[r1,#0]  ; pageIndex
                  |L1.1800|
;;;148        }
;;;149        pGuiGetInterface = GuiGetInterface();
000708  ebfffffe          BL       GuiGetInterface
00070c  e59f1298          LDR      r1,|L1.2476|
000710  e5810000          STR      r0,[r1,#0]  ; pGuiGetInterface
;;;150        pGuiGetInterface->setTimeoutFunc(UPDATE_BG_TIMER, UPDATE_BG_INTERVAL);  
000714  e2810000          ADD      r0,r1,#0
000718  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
00071c  e3e01000          MVN      r1,#0
000720  e590200c          LDR      r2,[r0,#0xc]
000724  e3a00000          MOV      r0,#0
000728  e12fff32          BLX      r2
;;;151        pGuiGetInterface->setTimeoutFunc(EXIT_TIMER, EXIT_INTERVAL); 
00072c  e59f0278          LDR      r0,|L1.2476|
000730  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
000734  e3e01000          MVN      r1,#0
000738  e590200c          LDR      r2,[r0,#0xc]
00073c  e3a00002          MOV      r0,#2
000740  e12fff32          BLX      r2
;;;152        
;;;153        EPDShowBGScreen(EPD_PICT_ALL_WHITE_INDEX, TRUE);
000744  e3a01001          MOV      r1,#1
000748  e3a00003          MOV      r0,#3
00074c  ebfffffe          BL       EPDShowBGScreen
;;;154        EPDDrawString(FALSE, "EPM Burn-In Test Program", 100, 10);
000750  e3a0300a          MOV      r3,#0xa
000754  e3a02064          MOV      r2,#0x64
000758  e28f1e25          ADR      r1,|L1.2480|
00075c  e3a00000          MOV      r0,#0
000760  ebfffffe          BL       EPDDrawString
;;;155        EPDDrawString(FALSE, "RTC:", 160, 60);
000764  e3a0303c          MOV      r3,#0x3c
000768  e3a020a0          MOV      r2,#0xa0
00076c  e28f1f96          ADR      r1,|L1.2508|
000770  e3a00000          MOV      r0,#0
000774  ebfffffe          BL       EPDDrawString
;;;156        EPDDrawString(FALSE, "Runtime:", 160, 110);
000778  e3a0306e          MOV      r3,#0x6e
00077c  e3a020a0          MOV      r2,#0xa0
000780  e28f1f93          ADR      r1,|L1.2516|
000784  e3a00000          MOV      r0,#0
000788  ebfffffe          BL       EPDDrawString
;;;157        if (pageIndex == 0)
00078c  e51f0394          LDR      r0,|L1.1024|
000790  e5d00000          LDRB     r0,[r0,#0]  ; pageIndex
000794  e3500000          CMP      r0,#0
000798  1a000037          BNE      |L1.2172|
;;;158        {
;;;159            EPDDrawString(FALSE, "LED-Buzzer:", 160, 160);
00079c  e3a030a0          MOV      r3,#0xa0
0007a0  e1a02003          MOV      r2,r3
0007a4  e28f1f8d          ADR      r1,|L1.2528|
0007a8  e3a00000          MOV      r0,#0
0007ac  ebfffffe          BL       EPDDrawString
;;;160            EPDDrawString(FALSE, "EPD-Backlight:", 160, 210);
0007b0  e3a030d2          MOV      r3,#0xd2
0007b4  e3a020a0          MOV      r2,#0xa0
0007b8  e28f1f8b          ADR      r1,|L1.2540|
0007bc  e3a00000          MOV      r0,#0
0007c0  ebfffffe          BL       EPDDrawString
;;;161            EPDDrawString(FALSE, "Radar 1:", 160, 260);
0007c4  e3a03f41          MOV      r3,#0x104
0007c8  e3a020a0          MOV      r2,#0xa0
0007cc  e28f1f8a          ADR      r1,|L1.2556|
0007d0  e3a00000          MOV      r0,#0
0007d4  ebfffffe          BL       EPDDrawString
;;;162            EPDDrawString(FALSE, "Radar 2:", 160, 310);
0007d8  e51f33d4          LDR      r3,|L1.1036|
0007dc  e3a020a0          MOV      r2,#0xa0
0007e0  e28f1e22          ADR      r1,|L1.2568|
0007e4  e3a00000          MOV      r0,#0
0007e8  ebfffffe          BL       EPDDrawString
;;;163            EPDDrawString(FALSE, "Lidar 1:", 160, 360);
0007ec  e3a03f5a          MOV      r3,#0x168
0007f0  e3a020a0          MOV      r2,#0xa0
0007f4  e28f1f86          ADR      r1,|L1.2580|
0007f8  e3a00000          MOV      r0,#0
0007fc  ebfffffe          BL       EPDDrawString
;;;164            EPDDrawString(FALSE, "Lidar 2:", 160, 410);
000800  e51f33f8          LDR      r3,|L1.1040|
000804  e3a020a0          MOV      r2,#0xa0
000808  e28f1e21          ADR      r1,|L1.2592|
00080c  e3a00000          MOV      r0,#0
000810  ebfffffe          BL       EPDDrawString
;;;165            EPDDrawString(FALSE, "Battery 1:", 160, 460);
000814  e3a03f73          MOV      r3,#0x1cc
000818  e3a020a0          MOV      r2,#0xa0
00081c  e28f1f82          ADR      r1,|L1.2604|
000820  e3a00000          MOV      r0,#0
000824  ebfffffe          BL       EPDDrawString
;;;166            EPDDrawString(FALSE, "Battery 2:", 160, 510);
000828  e51f341c          LDR      r3,|L1.1044|
00082c  e3a020a0          MOV      r2,#0xa0
000830  e28f1c02          ADR      r1,|L1.2616|
000834  e3a00000          MOV      r0,#0
000838  ebfffffe          BL       EPDDrawString
;;;167            EPDDrawString(FALSE, "Solar Battery:", 160, 560);
00083c  e3a03e23          MOV      r3,#0x230
000840  e3a020a0          MOV      r2,#0xa0
000844  e28f1f7e          ADR      r1,|L1.2628|
000848  e3a00000          MOV      r0,#0
00084c  ebfffffe          BL       EPDDrawString
;;;168            EPDDrawString(FALSE, "Touch IC:", 160, 610);
000850  e51f343c          LDR      r3,|L1.1052|
000854  e3a020a0          MOV      r2,#0xa0
000858  e28f1f7d          ADR      r1,|L1.2644|
00085c  e3a00000          MOV      r0,#0
000860  ebfffffe          BL       EPDDrawString
;;;169            EPDDrawString(FALSE, "Modem AT:", 160, 660);
000864  e3a03fa5          MOV      r3,#0x294
000868  e3a020a0          MOV      r2,#0xa0
00086c  e28f1f7b          ADR      r1,|L1.2656|
000870  e3a00000          MOV      r0,#0
000874  ebfffffe          BL       EPDDrawString
000878  ea000031          B        |L1.2372|
                  |L1.2172|
;;;170        }
;;;171        else
;;;172        {
;;;173            EPDDrawString(FALSE, "Modem FTP:", 160, 160);
00087c  e3a030a0          MOV      r3,#0xa0
000880  e1a02003          MOV      r2,r3
000884  e28f1e1e          ADR      r1,|L1.2668|
000888  e3a00000          MOV      r0,#0
00088c  ebfffffe          BL       EPDDrawString
;;;174            EPDDrawString(FALSE, "SmartCard Slot:", 160, 210);
000890  e3a030d2          MOV      r3,#0xd2
000894  e3a020a0          MOV      r2,#0xa0
000898  e28f1f76          ADR      r1,|L1.2680|
00089c  e3a00000          MOV      r0,#0
0008a0  ebfffffe          BL       EPDDrawString
;;;175            EPDDrawString(FALSE, "Card Reader:", 160, 260);
0008a4  e3a03f41          MOV      r3,#0x104
0008a8  e3a020a0          MOV      r2,#0xa0
0008ac  e28f1f75          ADR      r1,|L1.2696|
0008b0  e3a00000          MOV      r0,#0
0008b4  ebfffffe          BL       EPDDrawString
;;;176            EPDDrawString(FALSE, "Credit Card:", 160, 310);
0008b8  e51f34b4          LDR      r3,|L1.1036|
0008bc  e3a020a0          MOV      r2,#0xa0
0008c0  e28f1e1d          ADR      r1,|L1.2712|
0008c4  e3a00000          MOV      r0,#0
0008c8  ebfffffe          BL       EPDDrawString
;;;177            EPDDrawString(FALSE, "SD Card Reader:", 160, 360);
0008cc  e3a03f5a          MOV      r3,#0x168
0008d0  e3a020a0          MOV      r2,#0xa0
0008d4  e28f1f73          ADR      r1,|L1.2728|
0008d8  e3a00000          MOV      r0,#0
0008dc  ebfffffe          BL       EPDDrawString
;;;178            EPDDrawString(FALSE, "SPI Flash 1:", 160, 410);
0008e0  e51f34d8          LDR      r3,|L1.1040|
0008e4  e3a020a0          MOV      r2,#0xa0
0008e8  e28f1f72          ADR      r1,|L1.2744|
0008ec  e3a00000          MOV      r0,#0
0008f0  ebfffffe          BL       EPDDrawString
;;;179            EPDDrawString(FALSE, "SPI Flash 2:", 160, 460);
0008f4  e3a03f73          MOV      r3,#0x1cc
0008f8  e3a020a0          MOV      r2,#0xa0
0008fc  e28f1f71          ADR      r1,|L1.2760|
000900  e3a00000          MOV      r0,#0
000904  ebfffffe          BL       EPDDrawString
;;;180            EPDDrawString(FALSE, "SPI Flash 3:", 160, 510);
000908  e51f34fc          LDR      r3,|L1.1044|
00090c  e3a020a0          MOV      r2,#0xa0
000910  e28f1e1c          ADD      r1,pc,#0x1c, 28 ; #0x1c0
000914  e3a00000          MOV      r0,#0
000918  ebfffffe          BL       EPDDrawString
;;;181            //if (GPIO_ReadBit(DIP_CARD_READER_SELECT_PORT, DIP_CARD_READER_SELECT_PIN))
;;;182            //{
;;;183                EPDDrawString(FALSE, "Camera 1:", 160, 560);
00091c  e3a03e23          MOV      r3,#0x230
000920  e3a020a0          MOV      r2,#0xa0
000924  e28f1f6f          ADR      r1,|L1.2792|
000928  e3a00000          MOV      r0,#0
00092c  ebfffffe          BL       EPDDrawString
;;;184                EPDDrawString(FALSE, "Camera 2:", 160, 610);
000930  e51f351c          LDR      r3,|L1.1052|
000934  e3a020a0          MOV      r2,#0xa0
000938  e28f1f6d          ADR      r1,|L1.2804|
00093c  e3a00000          MOV      r0,#0
000940  ebfffffe          BL       EPDDrawString
                  |L1.2372|
;;;185            //}
;;;186            //else
;;;187            //{
;;;188              // EPDDrawString(FALSE, "Camera 1: Not Available", 160, 560);
;;;189              //  EPDDrawString(FALSE, "Camera 2: Not Available", 160, 610);
;;;190            //}
;;;191        }
;;;192        
;;;193        //sprintf(stringBuffer, "Program Version: %s  Page %d", BURNIN_TEST_VERSION, (pageIndex+1));
;;;194        sprintf(stringBuffer, "Program Version: %d.%02d.%02d  Page %d", MAJOR_VERSION, MINOR_VERSION, REVISION_VERSION, (pageIndex+1));
000944  e51f054c          LDR      r0,|L1.1024|
000948  e5d00000          LDRB     r0,[r0,#0]  ; pageIndex
00094c  e2800001          ADD      r0,r0,#1
000950  e3a01007          MOV      r1,#7
000954  e3a03009          MOV      r3,#9
000958  e3a02001          MOV      r2,#1
00095c  e58d1000          STR      r1,[sp,#0]
000960  e28f1f66          ADR      r1,|L1.2816|
000964  e58d0004          STR      r0,[sp,#4]
000968  e28d000c          ADD      r0,sp,#0xc
00096c  ebfffffe          BL       __2sprintf
;;;195        EPDDrawString(TRUE, stringBuffer, 90, 710);
000970  e59f31b0          LDR      r3,|L1.2856|
000974  e3a0205a          MOV      r2,#0x5a
000978  e28d100c          ADD      r1,sp,#0xc
00097c  e3a00001          MOV      r0,#1
000980  ebfffffe          BL       EPDDrawString
;;;196        
;;;197        pGuiGetInterface->setTimeoutFunc(UPDATE_DATA_TIMER, UPDATE_DATA_INTERVAL);
000984  e59f0020          LDR      r0,|L1.2476|
000988  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
00098c  e3a010c8          MOV      r1,#0xc8
000990  e590200c          LDR      r2,[r0,#0xc]
000994  e3a00001          MOV      r0,#1
000998  e12fff32          BLX      r2
;;;198        return TRUE;
00099c  e3a00001          MOV      r0,#1
0009a0  e28dd04c          ADD      sp,sp,#0x4c
;;;199    }
0009a4  e8bd80f0          POP      {r4-r7,pc}
                  |L1.2472|
                          DCD      powerStatus
                  |L1.2476|
                          DCD      pGuiGetInterface
                  |L1.2480|
0009b0  45504d20          DCB      "EPM Burn-In Test Program",0
0009b4  4275726e
0009b8  2d496e20
0009bc  54657374
0009c0  2050726f
0009c4  6772616d
0009c8  00      
0009c9  00                DCB      0
0009ca  00                DCB      0
0009cb  00                DCB      0
                  |L1.2508|
0009cc  5254433a          DCB      "RTC:",0
0009d0  00      
0009d1  00                DCB      0
0009d2  00                DCB      0
0009d3  00                DCB      0
                  |L1.2516|
0009d4  52756e74          DCB      "Runtime:",0
0009d8  696d653a
0009dc  00      
0009dd  00                DCB      0
0009de  00                DCB      0
0009df  00                DCB      0
                  |L1.2528|
0009e0  4c45442d          DCB      "LED-Buzzer:",0
0009e4  42757a7a
0009e8  65723a00
                  |L1.2540|
0009ec  4550442d          DCB      "EPD-Backlight:",0
0009f0  4261636b
0009f4  6c696768
0009f8  743a00  
0009fb  00                DCB      0
                  |L1.2556|
0009fc  52616461          DCB      "Radar 1:",0
000a00  7220313a
000a04  00      
000a05  00                DCB      0
000a06  00                DCB      0
000a07  00                DCB      0
                  |L1.2568|
000a08  52616461          DCB      "Radar 2:",0
000a0c  7220323a
000a10  00      
000a11  00                DCB      0
000a12  00                DCB      0
000a13  00                DCB      0
                  |L1.2580|
000a14  4c696461          DCB      "Lidar 1:",0
000a18  7220313a
000a1c  00      
000a1d  00                DCB      0
000a1e  00                DCB      0
000a1f  00                DCB      0
                  |L1.2592|
000a20  4c696461          DCB      "Lidar 2:",0
000a24  7220323a
000a28  00      
000a29  00                DCB      0
000a2a  00                DCB      0
000a2b  00                DCB      0
                  |L1.2604|
000a2c  42617474          DCB      "Battery 1:",0
000a30  65727920
000a34  313a00  
000a37  00                DCB      0
                  |L1.2616|
000a38  42617474          DCB      "Battery 2:",0
000a3c  65727920
000a40  323a00  
000a43  00                DCB      0
                  |L1.2628|
000a44  536f6c61          DCB      "Solar Battery:",0
000a48  72204261
000a4c  74746572
000a50  793a00  
000a53  00                DCB      0
                  |L1.2644|
000a54  546f7563          DCB      "Touch IC:",0
000a58  68204943
000a5c  3a00    
000a5e  00                DCB      0
000a5f  00                DCB      0
                  |L1.2656|
000a60  4d6f6465          DCB      "Modem AT:",0
000a64  6d204154
000a68  3a00    
000a6a  00                DCB      0
000a6b  00                DCB      0
                  |L1.2668|
000a6c  4d6f6465          DCB      "Modem FTP:",0
000a70  6d204654
000a74  503a00  
000a77  00                DCB      0
                  |L1.2680|
000a78  536d6172          DCB      "SmartCard Slot:",0
000a7c  74436172
000a80  6420536c
000a84  6f743a00
                  |L1.2696|
000a88  43617264          DCB      "Card Reader:",0
000a8c  20526561
000a90  6465723a
000a94  00      
000a95  00                DCB      0
000a96  00                DCB      0
000a97  00                DCB      0
                  |L1.2712|
000a98  43726564          DCB      "Credit Card:",0
000a9c  69742043
000aa0  6172643a
000aa4  00      
000aa5  00                DCB      0
000aa6  00                DCB      0
000aa7  00                DCB      0
                  |L1.2728|
000aa8  53442043          DCB      "SD Card Reader:",0
000aac  61726420
000ab0  52656164
000ab4  65723a00
                  |L1.2744|
000ab8  53504920          DCB      "SPI Flash 1:",0
000abc  466c6173
000ac0  6820313a
000ac4  00      
000ac5  00                DCB      0
000ac6  00                DCB      0
000ac7  00                DCB      0
                  |L1.2760|
000ac8  53504920          DCB      "SPI Flash 2:",0
000acc  466c6173
000ad0  6820323a
000ad4  00      
000ad5  00                DCB      0
000ad6  00                DCB      0
000ad7  00                DCB      0
000ad8  53504920          DCB      "SPI Flash 3:",0
000adc  466c6173
000ae0  6820333a
000ae4  00      
000ae5  00                DCB      0
000ae6  00                DCB      0
000ae7  00                DCB      0
                  |L1.2792|
000ae8  43616d65          DCB      "Camera 1:",0
000aec  72612031
000af0  3a00    
000af2  00                DCB      0
000af3  00                DCB      0
                  |L1.2804|
000af4  43616d65          DCB      "Camera 2:",0
000af8  72612032
000afc  3a00    
000afe  00                DCB      0
000aff  00                DCB      0
                  |L1.2816|
000b00  50726f67          DCB      "Program Version: %d.%02d.%02d  Page %d",0
000b04  72616d20
000b08  56657273
000b0c  696f6e3a
000b10  2025642e
000b14  25303264
000b18  2e253032
000b1c  64202050
000b20  61676520
000b24  256400  
000b27  00                DCB      0
                  |L1.2856|
                          DCD      0x000002c6
                          ENDP

                  GuiBurninTesterStop PROC
;;;200    
;;;201    void GuiBurninTesterStop(void)
000b2c  e92d4010          PUSH     {r4,lr}
;;;202    {
;;;203        EPDShowBGScreen(EPD_PICT_ALL_WHITE_INDEX, TRUE);
000b30  e3a01001          MOV      r1,#1
000b34  e3a00003          MOV      r0,#3
000b38  ebfffffe          BL       EPDShowBGScreen
;;;204        EPDDrawString(TRUE, "EPM Burn-In Test Stopped ...", 100, 100);
000b3c  e3a03064          MOV      r3,#0x64
000b40  e1a02003          MOV      r2,r3
000b44  e28f1f4e          ADR      r1,|L1.3204|
000b48  e3a00001          MOV      r0,#1
000b4c  ebfffffe          BL       EPDDrawString
;;;205        pGuiGetInterface->setTimeoutFunc(UPDATE_DATA_TIMER, portMAX_DELAY);
000b50  e51f01ac          LDR      r0,|L1.2476|
000b54  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
000b58  e3e01000          MVN      r1,#0
000b5c  e590200c          LDR      r2,[r0,#0xc]
000b60  e3a00001          MOV      r0,#1
000b64  e12fff32          BLX      r2
;;;206    }
000b68  e8bd8010          POP      {r4,pc}
;;;207    
                          ENDP

                  GuiBurninTesterUpdateData PROC
;;;208    BOOL GuiBurninTesterUpdateData(void)
000b6c  e92d4010          PUSH     {r4,lr}
;;;209    {
;;;210        pGuiGetInterface->runTimeoutFunc(UPDATE_DATA_TIMER);
000b70  e51f01cc          LDR      r0,|L1.2476|
000b74  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
000b78  e5901010          LDR      r1,[r0,#0x10]
000b7c  e3a00001          MOV      r0,#1
000b80  e12fff31          BLX      r1
;;;211        return TRUE;
000b84  e3a00001          MOV      r0,#1
;;;212    }
000b88  e8bd8010          POP      {r4,pc}
;;;213    
                          ENDP

                  GuiBurninTesterKeyCallback PROC
;;;214    BOOL GuiBurninTesterKeyCallback(uint8_t keyId, uint8_t downUp)
000b8c  e92d4070          PUSH     {r4-r6,lr}
;;;215    {
000b90  e1a05000          MOV      r5,r0
000b94  e1a06001          MOV      r6,r1
;;;216        BOOL reVal = FALSE; 
000b98  e3a04000          MOV      r4,#0
;;;217        if(keyIgnoreFlag)
000b9c  e59f0100          LDR      r0,|L1.3236|
000ba0  e5d00000          LDRB     r0,[r0,#0]  ; keyIgnoreFlag
000ba4  e3500000          CMP      r0,#0
000ba8  0a000003          BEQ      |L1.3004|
;;;218        {
;;;219            sysprintf(" [INFO GUI] <BurninTester> Key:  ignore...\n"); 
000bac  e28f00f4          ADR      r0,|L1.3240|
000bb0  ebfffffe          BL       sysprintf
;;;220            return reVal;
000bb4  e1a00004          MOV      r0,r4
                  |L1.3000|
;;;221        }
;;;222        if(GUI_KEY_DOWN_INDEX == downUp)
;;;223        {
;;;224            
;;;225        }
;;;226        else
;;;227        {
;;;228            
;;;229        }
;;;230        return reVal;
;;;231    }
000bb8  e8bd8070          POP      {r4-r6,pc}
                  |L1.3004|
000bbc  e1a00004          MOV      r0,r4                 ;230
000bc0  eafffffc          B        |L1.3000|
;;;232    
                          ENDP

                  GuiBurninTesterTimerCallback PROC
;;;233    BOOL GuiBurninTesterTimerCallback(uint8_t timerIndex)
000bc4  e92d4010          PUSH     {r4,lr}
;;;234    {
000bc8  e1a04000          MOV      r4,r0
;;;235        keyIgnoreFlag = TRUE;
000bcc  e3a00001          MOV      r0,#1
000bd0  e59f10cc          LDR      r1,|L1.3236|
000bd4  e5c10000          STRB     r0,[r1,#0]  ; keyIgnoreFlag
;;;236        switch(timerIndex)
000bd8  e3540000          CMP      r4,#0
000bdc  0a000004          BEQ      |L1.3060|
000be0  e3540001          CMP      r4,#1
000be4  0a000004          BEQ      |L1.3068|
000be8  e3540002          CMP      r4,#2
000bec  1a000007          BNE      |L1.3088|
000bf0  ea000004          B        |L1.3080|
                  |L1.3060|
;;;237        {
;;;238            case UPDATE_BG_TIMER:
000bf4  e1a00000          MOV      r0,r0
;;;239                break;
000bf8  ea000004          B        |L1.3088|
                  |L1.3068|
;;;240            case UPDATE_DATA_TIMER:
000bfc  e1a00000          MOV      r0,r0
;;;241                updateData();
000c00  ebfffffe          BL       updateData
;;;242                break;
000c04  ea000001          B        |L1.3088|
                  |L1.3080|
;;;243            case EXIT_TIMER:
000c08  e1a00000          MOV      r0,r0
;;;244                break;
000c0c  e1a00000          MOV      r0,r0
                  |L1.3088|
000c10  e1a00000          MOV      r0,r0                 ;239
;;;245        }
;;;246        keyIgnoreFlag = FALSE;
000c14  e3a00000          MOV      r0,#0
000c18  e59f1084          LDR      r1,|L1.3236|
000c1c  e5c10000          STRB     r0,[r1,#0]  ; keyIgnoreFlag
;;;247        return TRUE;
000c20  e3a00001          MOV      r0,#1
;;;248    }
000c24  e8bd8010          POP      {r4,pc}
;;;249    
                          ENDP

                  GuiBurninTesterPowerCallbackFunc PROC
;;;250    BOOL GuiBurninTesterPowerCallbackFunc(uint8_t type, int flag)
000c28  e1a02000          MOV      r2,r0
;;;251    {
;;;252        switch(type)
000c2c  e3520001          CMP      r2,#1
000c30  0a000006          BEQ      |L1.3152|
000c34  e3520002          CMP      r2,#2
000c38  0a000008          BEQ      |L1.3168|
000c3c  e3520003          CMP      r2,#3
000c40  0a000008          BEQ      |L1.3176|
000c44  e3520004          CMP      r2,#4
000c48  1a00000a          BNE      |L1.3192|
000c4c  ea000007          B        |L1.3184|
                  |L1.3152|
;;;253        {
;;;254            case GUI_POWER_STATUS_INDEX:
000c50  e1a00000          MOV      r0,r0
;;;255                return powerStatus;
000c54  e51f02b4          LDR      r0,|L1.2472|
000c58  e5d00000          LDRB     r0,[r0,#0]  ; powerStatus
                  |L1.3164|
;;;256            case GUI_POWER_ON_INDEX:
;;;257                break;
;;;258            case GUI_POWER_OFF_INDEX:
;;;259                break;
;;;260            case GUI_POWER_PREV_OFF_INDEX:
;;;261                break;
;;;262        }
;;;263        return TRUE;
;;;264    }
000c5c  e12fff1e          BX       lr
                  |L1.3168|
000c60  e1a00000          MOV      r0,r0                 ;256
000c64  ea000003          B        |L1.3192|
                  |L1.3176|
000c68  e1a00000          MOV      r0,r0                 ;258
000c6c  ea000001          B        |L1.3192|
                  |L1.3184|
000c70  e1a00000          MOV      r0,r0                 ;260
000c74  e1a00000          MOV      r0,r0                 ;261
                  |L1.3192|
000c78  e1a00000          MOV      r0,r0                 ;257
000c7c  e3a00001          MOV      r0,#1                 ;263
000c80  eafffff5          B        |L1.3164|
;;;265    
                          ENDP

                  |L1.3204|
000c84  45504d20          DCB      "EPM Burn-In Test Stopped ...",0
000c88  4275726e
000c8c  2d496e20
000c90  54657374
000c94  2053746f
000c98  70706564
000c9c  202e2e2e
000ca0  00      
000ca1  00                DCB      0
000ca2  00                DCB      0
000ca3  00                DCB      0
                  |L1.3236|
                          DCD      keyIgnoreFlag
                  |L1.3240|
000ca8  205b494e          DCB      " [INFO GUI] <BurninTester> Key:  ignore...\n",0
000cac  464f2047
000cb0  55495d20
000cb4  3c427572
000cb8  6e696e54
000cbc  65737465
000cc0  723e204b
000cc4  65793a20
000cc8  2069676e
000ccc  6f72652e
000cd0  2e2e0a00

                          AREA ||.data||, DATA, ALIGN=2

                  pGuiGetInterface
                          DCD      0x00000000
                  powerStatus
000004  01                DCB      0x01
                  keyIgnoreFlag
000005  00                DCB      0x00
                  pageIndex
000006  01                DCB      0x01
