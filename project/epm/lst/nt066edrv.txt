; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\nt066edrv.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\nt066edrv.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\nt066edrv.crf src\userdrv\nt066edrv.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  sendNT066EWriteCmd PROC
;;;83     /*-----------------------------------------*/
;;;84     static BOOL sendNT066EWriteCmd(uint8_t cmd, uint8_t* paraData, uint8_t dataLen)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;85     {
000004  e1a04000          MOV      r4,r0
000008  e1a07001          MOV      r7,r1
00000c  e1a05002          MOV      r5,r2
;;;86         int j;
;;;87         pI2cInterface->enableCriticalSectionFunc(TRUE);
000010  e59f02b4          LDR      r0,|L1.716|
000014  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000018  e5901010          LDR      r1,[r0,#0x10]
00001c  e3a00001          MOV      r0,#1
000020  e12fff31          BLX      r1
;;;88         pI2cInterface->ioctlFunc(I2C_IOC_SET_DEV_ADDRESS, NT066E_ID, 0);
000024  e59f02a0          LDR      r0,|L1.716|
000028  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
00002c  e3a02000          MOV      r2,#0
000030  e3a01030          MOV      r1,#0x30
000034  e5903004          LDR      r3,[r0,#4]
000038  e1a00002          MOV      r0,r2
00003c  e12fff33          BLX      r3
;;;89         if(cmd != 0)
000040  e3540000          CMP      r4,#0
000044  0a000007          BEQ      |L1.104|
;;;90         {
;;;91             pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, cmd, 1);
000048  e59f027c          LDR      r0,|L1.716|
00004c  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000050  e3a02001          MOV      r2,#1
000054  e1a01004          MOV      r1,r4
000058  e5903004          LDR      r3,[r0,#4]
00005c  e1a00002          MOV      r0,r2
000060  e12fff33          BLX      r3
000064  ea000006          B        |L1.132|
                  |L1.104|
;;;92         }
;;;93         else
;;;94         {
;;;95             pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, 0, 0);
000068  e59f025c          LDR      r0,|L1.716|
00006c  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000070  e3a02000          MOV      r2,#0
000074  e1a01002          MOV      r1,r2
000078  e5903004          LDR      r3,[r0,#4]
00007c  e3a00001          MOV      r0,#1
000080  e12fff33          BLX      r3
                  |L1.132|
;;;96         }
;;;97         j = RETRY;
000084  e59f6244          LDR      r6,|L1.720|
;;;98         while(j-- > 0) 
000088  ea000008          B        |L1.176|
                  |L1.140|
;;;99         {
;;;100            if(pI2cInterface->writeFunc(paraData, dataLen) == dataLen)
00008c  e59f0238          LDR      r0,|L1.716|
000090  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000094  e1a01005          MOV      r1,r5
000098  e5902008          LDR      r2,[r0,#8]
00009c  e1a00007          MOV      r0,r7
0000a0  e12fff32          BLX      r2
0000a4  e1500005          CMP      r0,r5
0000a8  1a000000          BNE      |L1.176|
;;;101                break;
0000ac  ea000002          B        |L1.188|
                  |L1.176|
0000b0  e2560000          SUBS     r0,r6,#0              ;98
0000b4  e2466001          SUB      r6,r6,#1              ;98
0000b8  cafffff3          BGT      |L1.140|
                  |L1.188|
0000bc  e1a00000          MOV      r0,r0
;;;102        }
;;;103        pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, 0, 0);
0000c0  e59f0204          LDR      r0,|L1.716|
0000c4  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0000c8  e3a02000          MOV      r2,#0
0000cc  e1a01002          MOV      r1,r2
0000d0  e5903004          LDR      r3,[r0,#4]
0000d4  e3a00001          MOV      r0,#1
0000d8  e12fff33          BLX      r3
;;;104        if(j <= 0)
0000dc  e3560000          CMP      r6,#0
0000e0  ca00000d          BGT      |L1.284|
;;;105        {
;;;106            sysprintf("\n !!! NT066E Write ERROR !!!\n");
0000e4  e28f0f7a          ADR      r0,|L1.724|
0000e8  ebfffffe          BL       sysprintf
;;;107            wErrTimes++;
0000ec  e59f0200          LDR      r0,|L1.756|
0000f0  e5900000          LDR      r0,[r0,#0]  ; wErrTimes
0000f4  e2800001          ADD      r0,r0,#1
0000f8  e59f11f4          LDR      r1,|L1.756|
0000fc  e5810000          STR      r0,[r1,#0]  ; wErrTimes
;;;108            pI2cInterface->enableCriticalSectionFunc(FALSE);
000100  e59f01c4          LDR      r0,|L1.716|
000104  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000108  e5901010          LDR      r1,[r0,#0x10]
00010c  e3a00000          MOV      r0,#0
000110  e12fff31          BLX      r1
;;;109            return FALSE;
000114  e3a00000          MOV      r0,#0
                  |L1.280|
;;;110        }
;;;111        else
;;;112        {
;;;113            pI2cInterface->enableCriticalSectionFunc(FALSE);
;;;114            return TRUE;
;;;115        }
;;;116    }
000118  e8bd81f0          POP      {r4-r8,pc}
                  |L1.284|
00011c  e59f01a8          LDR      r0,|L1.716|
000120  e5900000          LDR      r0,[r0,#0]            ;113  ; pI2cInterface
000124  e5901010          LDR      r1,[r0,#0x10]         ;113
000128  e3a00000          MOV      r0,#0                 ;113
00012c  e12fff31          BLX      r1                    ;113
000130  e3a00001          MOV      r0,#1                 ;114
000134  eafffff7          B        |L1.280|
;;;117    
                          ENDP

                  sendNT066EReadCmd PROC
;;;118    static BOOL sendNT066EReadCmd(uint8_t cmd, uint8_t* paraData, uint8_t dataLen)
000138  e92d41f0          PUSH     {r4-r8,lr}
;;;119    {
00013c  e1a04000          MOV      r4,r0
000140  e1a07001          MOV      r7,r1
000144  e1a05002          MOV      r5,r2
;;;120        int j;
;;;121        pI2cInterface->enableCriticalSectionFunc(TRUE);
000148  e59f017c          LDR      r0,|L1.716|
00014c  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000150  e5901010          LDR      r1,[r0,#0x10]
000154  e3a00001          MOV      r0,#1
000158  e12fff31          BLX      r1
;;;122        pI2cInterface->ioctlFunc(I2C_IOC_SET_DEV_ADDRESS, NT066E_ID, 0);
00015c  e59f0168          LDR      r0,|L1.716|
000160  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000164  e3a02000          MOV      r2,#0
000168  e3a01030          MOV      r1,#0x30
00016c  e5903004          LDR      r3,[r0,#4]
000170  e1a00002          MOV      r0,r2
000174  e12fff33          BLX      r3
;;;123        if(cmd != 0)
000178  e3540000          CMP      r4,#0
00017c  0a000007          BEQ      |L1.416|
;;;124        {
;;;125            pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, cmd, 1);
000180  e59f0144          LDR      r0,|L1.716|
000184  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000188  e3a02001          MOV      r2,#1
00018c  e1a01004          MOV      r1,r4
000190  e5903004          LDR      r3,[r0,#4]
000194  e1a00002          MOV      r0,r2
000198  e12fff33          BLX      r3
00019c  ea000006          B        |L1.444|
                  |L1.416|
;;;126        }
;;;127        else
;;;128        {
;;;129            //sysprintf("\n !!! @@@@@  NT066E Read I2C_IOC_SET_SUB_ADDRESS   @@@@ !!!\n");
;;;130            pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, 0, 0);
0001a0  e59f0124          LDR      r0,|L1.716|
0001a4  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0001a8  e3a02000          MOV      r2,#0
0001ac  e1a01002          MOV      r1,r2
0001b0  e5903004          LDR      r3,[r0,#4]
0001b4  e3a00001          MOV      r0,#1
0001b8  e12fff33          BLX      r3
                  |L1.444|
;;;131        }
;;;132        j = RETRY;
0001bc  e59f610c          LDR      r6,|L1.720|
;;;133        while(j-- > 0) 
0001c0  ea000008          B        |L1.488|
                  |L1.452|
;;;134        {
;;;135            if(pI2cInterface->readFunc(paraData, dataLen) == dataLen)
0001c4  e59f0100          LDR      r0,|L1.716|
0001c8  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0001cc  e1a01005          MOV      r1,r5
0001d0  e590200c          LDR      r2,[r0,#0xc]
0001d4  e1a00007          MOV      r0,r7
0001d8  e12fff32          BLX      r2
0001dc  e1500005          CMP      r0,r5
0001e0  1a000000          BNE      |L1.488|
;;;136                break;
0001e4  ea000002          B        |L1.500|
                  |L1.488|
0001e8  e2560000          SUBS     r0,r6,#0              ;133
0001ec  e2466001          SUB      r6,r6,#1              ;133
0001f0  cafffff3          BGT      |L1.452|
                  |L1.500|
0001f4  e1a00000          MOV      r0,r0
;;;137        }
;;;138        pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, 0, 0);
0001f8  e59f00cc          LDR      r0,|L1.716|
0001fc  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000200  e3a02000          MOV      r2,#0
000204  e1a01002          MOV      r1,r2
000208  e5903004          LDR      r3,[r0,#4]
00020c  e3a00001          MOV      r0,#1
000210  e12fff33          BLX      r3
;;;139        if(j <= 0)
000214  e3560000          CMP      r6,#0
000218  ca00000d          BGT      |L1.596|
;;;140        {
;;;141            sysprintf("\n !!! NT066E Read ERROR !!!\n");
00021c  e28f00d4          ADR      r0,|L1.760|
000220  ebfffffe          BL       sysprintf
;;;142            rErrTimes++;
000224  e59f00ec          LDR      r0,|L1.792|
000228  e5900000          LDR      r0,[r0,#0]  ; rErrTimes
00022c  e2800001          ADD      r0,r0,#1
000230  e59f10e0          LDR      r1,|L1.792|
000234  e5810000          STR      r0,[r1,#0]  ; rErrTimes
;;;143            pI2cInterface->enableCriticalSectionFunc(FALSE);
000238  e59f008c          LDR      r0,|L1.716|
00023c  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000240  e5901010          LDR      r1,[r0,#0x10]
000244  e3a00000          MOV      r0,#0
000248  e12fff31          BLX      r1
;;;144            return FALSE;
00024c  e3a00000          MOV      r0,#0
                  |L1.592|
;;;145        }
;;;146        else
;;;147        {
;;;148            //sysprintf("\n ~~~ NT066E Read 0x%02x command: 0x%02x ~~~\n", cmd, paraData[0]);
;;;149            pI2cInterface->enableCriticalSectionFunc(FALSE);
;;;150            return TRUE;
;;;151        }
;;;152        
;;;153    }
000250  e8bd81f0          POP      {r4-r8,pc}
                  |L1.596|
000254  e59f0070          LDR      r0,|L1.716|
000258  e5900000          LDR      r0,[r0,#0]            ;149  ; pI2cInterface
00025c  e5901010          LDR      r1,[r0,#0x10]         ;149
000260  e3a00000          MOV      r0,#0                 ;149
000264  e12fff31          BLX      r1                    ;149
000268  e3a00001          MOV      r0,#1                 ;150
00026c  eafffff7          B        |L1.592|
;;;154    
                          ENDP

                  EINT1Callback PROC
;;;155    INT32 EINT1Callback(UINT32 status, UINT32 userData)
000270  e92d4038          PUSH     {r3-r5,lr}
;;;156    {
000274  e1a04000          MOV      r4,r0
000278  e1a05001          MOV      r5,r1
;;;157        //#if(BUILD_DEBUG_VERSION || JUST_TEST_NT066E)
;;;158        //sysprintf("\r\n  -#- EINT7 0x%08x [%04d] -#- \r\n", status, intTimes++);
;;;159        //sysprintf("\r\n  -#- EINT7 [%04d] -#- \r\n", intTimes++);
;;;160        
;;;161        //setPrintfFlag(FALSE);
;;;162        //sysprintf("\r\n  -#- EINT1 [%02x] -#- \r\n", GPIO_ReadPort(GPIOF)&0x3f);
;;;163        //setPrintfFlag(TRUE);
;;;164        
;;;165        if(xNT066ESemaphore != NULL)
00027c  e59f0098          LDR      r0,|L1.796|
000280  e5900000          LDR      r0,[r0,#0]  ; xNT066ESemaphore
000284  e3500000          CMP      r0,#0
000288  0a00000a          BEQ      |L1.696|
;;;166        {
;;;167            BaseType_t xHigherPriorityTaskWoken;        
;;;168            
;;;169            xHigherPriorityTaskWoken = pdFALSE;
00028c  e3a00000          MOV      r0,#0
000290  e58d0000          STR      r0,[sp,#0]
;;;170            xSemaphoreGiveFromISR( xNT066ESemaphore, &xHigherPriorityTaskWoken );
000294  e1a0100d          MOV      r1,sp
000298  e59f007c          LDR      r0,|L1.796|
00029c  e5900000          LDR      r0,[r0,#0]  ; xNT066ESemaphore
0002a0  ebfffffe          BL       xQueueGiveFromISR
;;;171            portEXIT_SWITCHING_ISR (xHigherPriorityTaskWoken); 
0002a4  e59d0000          LDR      r0,[sp,#0]
0002a8  e3500000          CMP      r0,#0
0002ac  0a000000          BEQ      |L1.692|
0002b0  ebfffffe          BL       vTaskSwitchContext
                  |L1.692|
;;;172        }        
0002b4  e1a00000          MOV      r0,r0
                  |L1.696|
;;;173    
;;;174        GPIO_ClrISRBit(GPIOH, BIT1);    
0002b8  e3a01002          MOV      r1,#2
0002bc  e3a00d07          MOV      r0,#0x1c0
0002c0  ebfffffe          BL       GPIO_ClrISRBit
;;;175        return 0;
0002c4  e3a00000          MOV      r0,#0
;;;176    }
0002c8  e8bd8038          POP      {r3-r5,pc}
                  |L1.716|
                          DCD      pI2cInterface
                  |L1.720|
                          DCD      0x00001388
                  |L1.724|
0002d4  0a202121          DCB      "\n !!! NT066E Write ERROR !!!\n",0
0002d8  21204e54
0002dc  30363645
0002e0  20577269
0002e4  74652045
0002e8  52524f52
0002ec  20212121
0002f0  0a00    
0002f2  00                DCB      0
0002f3  00                DCB      0
                  |L1.756|
                          DCD      wErrTimes
                  |L1.760|
0002f8  0a202121          DCB      "\n !!! NT066E Read ERROR !!!\n",0
0002fc  21204e54
000300  30363645
000304  20526561
000308  64204552
00030c  524f5220
000310  2121210a
000314  00      
000315  00                DCB      0
000316  00                DCB      0
000317  00                DCB      0
                  |L1.792|
                          DCD      rErrTimes
                  |L1.796|
                          DCD      xNT066ESemaphore
                          ENDP

                  processKeyEvent PROC
;;;177    
;;;178    static int processKeyEvent(uint8_t value)
000320  e92d4070          PUSH     {r4-r6,lr}
;;;179    {
000324  e1a05000          MOV      r5,r0
;;;180        int i;
;;;181        for(i = 0; i<8; i++)
000328  e3a04000          MOV      r4,#0
00032c  ea000027          B        |L1.976|
                  |L1.816|
;;;182        {
;;;183            if((value>>i)&0x1)
000330  e1a00455          ASR      r0,r5,r4
000334  e3100001          TST      r0,#1
000338  0a000011          BEQ      |L1.900|
;;;184            {
;;;185                //sysprintf("\r\n~~~~Key %d DOWN Event ~~~~~\r\n", i);  
;;;186                if(keyDownFlag[i] == FALSE)
00033c  e59f018c          LDR      r0,|L1.1232|
000340  e7d00004          LDRB     r0,[r0,r4]
000344  e3500000          CMP      r0,#0
000348  1a00001f          BNE      |L1.972|
;;;187                {
;;;188                    //sysprintf("  -- v -- Key [%d] Down Event  ---\r\n", i);
;;;189                    keyDownFlag[i] = TRUE;
00034c  e3a00001          MOV      r0,#1
000350  e59f1178          LDR      r1,|L1.1232|
000354  e7c10004          STRB     r0,[r1,r4]
;;;190                    //processKeyDownEvent(i);
;;;191                    if(pKeyHardwareCallbackFunc != NULL)
000358  e59f0174          LDR      r0,|L1.1236|
00035c  e5900000          LDR      r0,[r0,#0]  ; pKeyHardwareCallbackFunc
000360  e3500000          CMP      r0,#0
000364  0a000004          BEQ      |L1.892|
;;;192                        pKeyHardwareCallbackFunc(i, KEY_HARDWARE_DOWN_EVENT);
000368  e20400ff          AND      r0,r4,#0xff
00036c  e3a01001          MOV      r1,#1
000370  e59f215c          LDR      r2,|L1.1236|
000374  e5922000          LDR      r2,[r2,#0]  ; pKeyHardwareCallbackFunc
000378  e12fff32          BLX      r2
                  |L1.892|
;;;193                    return KEY_HARDWARE_DOWN_EVENT;//just one key
00037c  e3a00001          MOV      r0,#1
                  |L1.896|
;;;194                }
;;;195                else
;;;196                {
;;;197                    //sysprintf("  -- v -- Key [%d] Down Event error, ignore ---\r\n", i);
;;;198                }
;;;199            }
;;;200            else
;;;201            {
;;;202                //sysprintf("\r\n~~~~Key %d UP Event ~~~~~\r\n", i);  
;;;203                if(keyDownFlag[i] == TRUE)
;;;204                {
;;;205                    //sysprintf("  -- ^ -- Key [%d] Up Event  ---\r\n", i);
;;;206                    keyDownFlag[i] = FALSE;
;;;207                    //processKeyUpEvent(i);
;;;208                    if(pKeyHardwareCallbackFunc != NULL)
;;;209                        pKeyHardwareCallbackFunc(i, KEY_HARDWARE_UP_EVENT);
;;;210                    return KEY_HARDWARE_UP_EVENT;//just one key
;;;211                }
;;;212                else
;;;213                {
;;;214                    //sysprintf("  -- ^ -- Key [%d] Up Event error, irnore ---\r\n", i);
;;;215                }
;;;216            }
;;;217        }
;;;218        return KEY_HARDWARE_ERROR_EVENT;
;;;219    }
000380  e8bd8070          POP      {r4-r6,pc}
                  |L1.900|
000384  e59f0144          LDR      r0,|L1.1232|
000388  e7d00004          LDRB     r0,[r0,r4]            ;203
00038c  e3500001          CMP      r0,#1                 ;203
000390  1a00000d          BNE      |L1.972|
000394  e3a00000          MOV      r0,#0                 ;206
000398  e59f1130          LDR      r1,|L1.1232|
00039c  e7c10004          STRB     r0,[r1,r4]            ;206
0003a0  e59f012c          LDR      r0,|L1.1236|
0003a4  e5900000          LDR      r0,[r0,#0]            ;208  ; pKeyHardwareCallbackFunc
0003a8  e3500000          CMP      r0,#0                 ;208
0003ac  0a000004          BEQ      |L1.964|
0003b0  e20400ff          AND      r0,r4,#0xff           ;209
0003b4  e3a01002          MOV      r1,#2                 ;209
0003b8  e59f2114          LDR      r2,|L1.1236|
0003bc  e5922000          LDR      r2,[r2,#0]            ;209  ; pKeyHardwareCallbackFunc
0003c0  e12fff32          BLX      r2                    ;209
                  |L1.964|
0003c4  e3a00002          MOV      r0,#2                 ;210
0003c8  eaffffec          B        |L1.896|
                  |L1.972|
0003cc  e2844001          ADD      r4,r4,#1              ;181
                  |L1.976|
0003d0  e3540008          CMP      r4,#8                 ;181
0003d4  baffffd5          BLT      |L1.816|
0003d8  e3a0000f          MOV      r0,#0xf               ;218
0003dc  eaffffe7          B        |L1.896|
;;;220    static void vNT066EDrvTask( void *pvparamOuteters )
                          ENDP

                  vNT066EDrvTask PROC
0003e0  e92d401c          PUSH     {r2-r4,lr}
;;;221    {
;;;222        sysprintf("vNT066EDrvTask Going...\r\n");   
0003e4  e28f00ec          ADR      r0,|L1.1240|
0003e8  ebfffffe          BL       sysprintf
;;;223        uint8_t data[8];
;;;224        for(;;)
0003ec  e1a00000          MOV      r0,r0
                  |L1.1008|
;;;225        {       
;;;226            BOOL reVal;
;;;227            BaseType_t reval = xSemaphoreTake(xNT066ESemaphore, threadWaitTime);         
0003f0  e3a03000          MOV      r3,#0
0003f4  e59f00f8          LDR      r0,|L1.1268|
0003f8  e1a01003          MOV      r1,r3
0003fc  e5902000          LDR      r2,[r0,#0]  ; threadWaitTime
000400  e51f00ec          LDR      r0,|L1.796|
000404  e5900000          LDR      r0,[r0,#0]  ; xNT066ESemaphore
000408  ebfffffe          BL       xQueueGenericReceive
00040c  e1a05000          MOV      r5,r0
;;;228            //#if(!SUPPORT_NT066E) 
;;;229            //if(GPIO_ReadBit(GPIOI, BIT2) == 0)
;;;230            //#endif
;;;231            {        
;;;232                if(enableTestNT066E) 
000410  e59f00e0          LDR      r0,|L1.1272|
000414  e5d00000          LDRB     r0,[r0,#0]  ; enableTestNT066E
000418  e3500000          CMP      r0,#0
00041c  0a000001          BEQ      |L1.1064|
;;;233                { 
;;;234                    sysprintf("\r\n **vNT066EDrvTask  GO **\r\n");
000420  e28f00d4          ADR      r0,|L1.1276|
000424  ebfffffe          BL       sysprintf
                  |L1.1064|
;;;235                }                
;;;236    
;;;237                //data[0] = 0x11;
;;;238                //sendNT066EWriteCmd(NULL, data, 1);  
;;;239                reVal = sendNT066EReadCmd(0x11, data, 1);
000428  e3a02001          MOV      r2,#1
00042c  e1a0100d          MOV      r1,sp
000430  e3a00011          MOV      r0,#0x11
000434  ebfffffe          BL       sendNT066EReadCmd
000438  e1a04000          MOV      r4,r0
;;;240    
;;;241                if(reVal)
00043c  e3540000          CMP      r4,#0
000440  0a00000b          BEQ      |L1.1140|
;;;242                {
;;;243                    if(enableTestNT066E)
000444  e59f00ac          LDR      r0,|L1.1272|
000448  e5d00000          LDRB     r0,[r0,#0]  ; enableTestNT066E
00044c  e3500000          CMP      r0,#0
000450  0a000004          BEQ      |L1.1128|
;;;244                    {
;;;245                        sysprintf("~~~ NT066E Read SensReg[%d] 0x%02x ~~~\n", intTimes, data[0]);
000454  e5dd2000          LDRB     r2,[sp,#0]
000458  e59f00bc          LDR      r0,|L1.1308|
00045c  e5901000          LDR      r1,[r0,#0]  ; intTimes
000460  e28f00b8          ADR      r0,|L1.1312|
000464  ebfffffe          BL       sysprintf
                  |L1.1128|
;;;246                    }
;;;247                    if(KEY_HARDWARE_DOWN_EVENT == processKeyEvent(data[0]))
000468  e5dd0000          LDRB     r0,[sp,#0]
00046c  ebfffffe          BL       processKeyEvent
000470  ea000001          B        |L1.1148|
                  |L1.1140|
;;;248                    {
;;;249    
;;;250                    }
;;;251                }
;;;252                else
;;;253                {
;;;254                    sysprintf("!!! NT066E Read SensReg ERROR !!!\n");
000474  e28f00cc          ADR      r0,|L1.1352|
000478  ebfffffe          BL       sysprintf
                  |L1.1148|
;;;255                } 
;;;256        
;;;257            } 
;;;258        }
00047c  eaffffdb          B        |L1.1008|
;;;259    }
;;;260    
                          ENDP

                  NT066ESetClkReg PROC
;;;261    void NT066ESetClkReg(uint8_t frqc, uint8_t frqf)
000480  e92d4030          PUSH     {r4,r5,lr}
;;;262    {
000484  e24dd014          SUB      sp,sp,#0x14
000488  e1a04000          MOV      r4,r0
00048c  e1a05001          MOV      r5,r1
;;;263        uint8_t dataTmp[8];
;;;264        uint8_t dataTmp1[8];
;;;265        sysprintf("Start Tx ClkReg [frqc: 0x%x (b%02b), frqf: 0x%x (b%03b)]--> \n", frqc, frqc, frqf, frqf);
000490  e58d5000          STR      r5,[sp,#0]
000494  e1a03005          MOV      r3,r5
000498  e1a02004          MOV      r2,r4
00049c  e1a01004          MOV      r1,r4
0004a0  e28f00c4          ADR      r0,|L1.1388|
0004a4  ebfffffe          BL       sysprintf
;;;266        if(sendNT066EReadCmd(0x36, dataTmp, 1))
0004a8  e3a02001          MOV      r2,#1
0004ac  e28d100c          ADD      r1,sp,#0xc
0004b0  e3a00036          MOV      r0,#0x36
0004b4  ebfffffe          BL       sendNT066EReadCmd
0004b8  e3500000          CMP      r0,#0
0004bc  0a000044          BEQ      |L1.1492|
;;;267        {
;;;268            sysprintf(" ~~~ NT066E Read ClkReg(1) 0x%02x ~~~\n", dataTmp[0]);
0004c0  e5dd100c          LDRB     r1,[sp,#0xc]
0004c4  e28f00e0          ADR      r0,|L1.1452|
0004c8  ebfffffe          BL       sysprintf
0004cc  ea000044          B        |L1.1508|
                  |L1.1232|
                          DCD      keyDownFlag
                  |L1.1236|
                          DCD      pKeyHardwareCallbackFunc
                  |L1.1240|
0004d8  764e5430          DCB      "vNT066EDrvTask Going...\r\n",0
0004dc  36364544
0004e0  72765461
0004e4  736b2047
0004e8  6f696e67
0004ec  2e2e2e0d
0004f0  0a00    
0004f2  00                DCB      0
0004f3  00                DCB      0
                  |L1.1268|
                          DCD      threadWaitTime
                  |L1.1272|
                          DCD      enableTestNT066E
                  |L1.1276|
0004fc  0d0a202a          DCB      "\r\n **vNT066EDrvTask  GO **\r\n",0
000500  2a764e54
000504  30363645
000508  44727654
00050c  61736b20
000510  20474f20
000514  2a2a0d0a
000518  00      
000519  00                DCB      0
00051a  00                DCB      0
00051b  00                DCB      0
                  |L1.1308|
                          DCD      intTimes
                  |L1.1312|
000520  7e7e7e20          DCB      "~~~ NT066E Read SensReg[%d] 0x%02x ~~~\n",0
000524  4e543036
000528  36452052
00052c  65616420
000530  53656e73
000534  5265675b
000538  25645d20
00053c  30782530
000540  3278207e
000544  7e7e0a00
                  |L1.1352|
000548  21212120          DCB      "!!! NT066E Read SensReg ERROR !!!\n",0
00054c  4e543036
000550  36452052
000554  65616420
000558  53656e73
00055c  52656720
000560  4552524f
000564  52202121
000568  210a00  
00056b  00                DCB      0
                  |L1.1388|
00056c  53746172          DCB      "Start Tx ClkReg [frqc: 0x%x (b%02b), frqf: 0x%x (b%03b)"
000570  74205478
000574  20436c6b
000578  52656720
00057c  5b667271
000580  633a2030
000584  78257820
000588  28622530
00058c  3262292c
000590  20667271
000594  663a2030
000598  78257820
00059c  28622530
0005a0  336229  
0005a3  5d2d2d3e          DCB      "]--> \n",0
0005a7  200a00  
0005aa  00                DCB      0
0005ab  00                DCB      0
                  |L1.1452|
0005ac  207e7e7e          DCB      " ~~~ NT066E Read ClkReg(1) 0x%02x ~~~\n",0
0005b0  204e5430
0005b4  36364520
0005b8  52656164
0005bc  20436c6b
0005c0  52656728
0005c4  31292030
0005c8  78253032
0005cc  78207e7e
0005d0  7e0a00  
0005d3  00                DCB      0
                  |L1.1492|
;;;269        }
;;;270        else
;;;271        {
;;;272            sysprintf(" !!! NT066E Read ERROR !!!\n");
0005d4  e28f0f69          ADR      r0,|L1.1920|
0005d8  ebfffffe          BL       sysprintf
                  |L1.1500|
;;;273            return;
;;;274        }   
;;;275        if(frqc != 0xff)
;;;276        {
;;;277            dataTmp[0] = (dataTmp[0] & ~(0x3<<3)) | (frqc&0x3)<<3; 
;;;278        }
;;;279        if(frqf != 0xff)
;;;280        {
;;;281            dataTmp[0] = (dataTmp[0] & ~(0x7<<0)) | (frqf&0x7)<<0;
;;;282        }
;;;283        sysprintf(" ~~~ NT066E write ClkReg 0x%02x ~~~\n", dataTmp[0]);
;;;284        sendNT066EWriteCmd(0x35, dataTmp, 1);   
;;;285    
;;;286        if(sendNT066EReadCmd(0x36, dataTmp1, 1))
;;;287        {
;;;288            
;;;289            if(dataTmp1[0] != dataTmp[0])
;;;290            {
;;;291                sysprintf(" ~~~ NT066E Tx ClkReg error 0x%02x : 0x%02x ~~~\n", dataTmp[0], dataTmp1[0]);
;;;292                return;
;;;293            }
;;;294            else
;;;295            {
;;;296                sysprintf(" ~~~ NT066E Read ClkReg(2) 0x%02x (b%08b)~~~\n", dataTmp1[0], dataTmp1[0]);
;;;297            }
;;;298        }
;;;299        else
;;;300        {
;;;301            sysprintf(" !!! NT066E Read ERROR !!!\n");
;;;302            return;
;;;303        }   
;;;304    }
0005dc  e28dd014          ADD      sp,sp,#0x14
0005e0  e8bd8030          POP      {r4,r5,pc}
                  |L1.1508|
0005e4  e35400ff          CMP      r4,#0xff              ;275
0005e8  0a000004          BEQ      |L1.1536|
0005ec  e5dd000c          LDRB     r0,[sp,#0xc]          ;277
0005f0  e3c00018          BIC      r0,r0,#0x18           ;277
0005f4  e2041003          AND      r1,r4,#3              ;277
0005f8  e1800181          ORR      r0,r0,r1,LSL #3       ;277
0005fc  e5cd000c          STRB     r0,[sp,#0xc]          ;277
                  |L1.1536|
000600  e35500ff          CMP      r5,#0xff              ;279
000604  0a000004          BEQ      |L1.1564|
000608  e5dd000c          LDRB     r0,[sp,#0xc]          ;281
00060c  e3c00007          BIC      r0,r0,#7              ;281
000610  e2051007          AND      r1,r5,#7              ;281
000614  e1800001          ORR      r0,r0,r1              ;281
000618  e5cd000c          STRB     r0,[sp,#0xc]          ;281
                  |L1.1564|
00061c  e5dd100c          LDRB     r1,[sp,#0xc]          ;283
000620  e28f0f5d          ADR      r0,|L1.1948|
000624  ebfffffe          BL       sysprintf
000628  e3a02001          MOV      r2,#1                 ;284
00062c  e28d100c          ADD      r1,sp,#0xc            ;284
000630  e3a00035          MOV      r0,#0x35              ;284
000634  ebfffffe          BL       sendNT066EWriteCmd
000638  e3a02001          MOV      r2,#1                 ;286
00063c  e28d1004          ADD      r1,sp,#4              ;286
000640  e3a00036          MOV      r0,#0x36              ;286
000644  ebfffffe          BL       sendNT066EReadCmd
000648  e3500000          CMP      r0,#0                 ;286
00064c  0a00000d          BEQ      |L1.1672|
000650  e5dd0004          LDRB     r0,[sp,#4]            ;289
000654  e5dd100c          LDRB     r1,[sp,#0xc]          ;289
000658  e1500001          CMP      r0,r1                 ;289
00065c  0a000004          BEQ      |L1.1652|
000660  e5dd2004          LDRB     r2,[sp,#4]            ;291
000664  e5dd100c          LDRB     r1,[sp,#0xc]          ;291
000668  e28f0f55          ADR      r0,|L1.1988|
00066c  ebfffffe          BL       sysprintf
000670  eaffffd9          B        |L1.1500|
                  |L1.1652|
000674  e5dd2004          LDRB     r2,[sp,#4]            ;296
000678  e1a01002          MOV      r1,r2                 ;296
00067c  e28f0f5d          ADR      r0,|L1.2040|
000680  ebfffffe          BL       sysprintf
000684  ea000002          B        |L1.1684|
                  |L1.1672|
000688  e28f00f0          ADR      r0,|L1.1920|
00068c  ebfffffe          BL       sysprintf
000690  eaffffd1          B        |L1.1500|
                  |L1.1684|
000694  e1a00000          MOV      r0,r0
000698  eaffffcf          B        |L1.1500|
;;;305    static BOOL hwInit(void)
                          ENDP

                  NT066EResetBuildBit PROC
;;;527    
;;;528    BOOL NT066EResetBuildBit(BOOL flag)
00069c  e92d401f          PUSH     {r0-r4,lr}
;;;529    {
0006a0  e1a04000          MOV      r4,r0
;;;530        //#if(SUPPORT_NT066E)
;;;531        uint8_t dataTmp[8];
;;;532        uint8_t dataTmp1[8];
;;;533        if(initFlag == FALSE)
0006a4  e59f017c          LDR      r0,|L1.2088|
0006a8  e5d00000          LDRB     r0,[r0,#0]  ; initFlag
0006ac  e3500000          CMP      r0,#0
0006b0  1a000002          BNE      |L1.1728|
;;;534            return FALSE;
0006b4  e3a00000          MOV      r0,#0
                  |L1.1720|
0006b8  e28dd010          ADD      sp,sp,#0x10
;;;535        sysprintf("NT066EResetBuildBit --> \n");
;;;536        if(sendNT066EReadCmd(0x04, dataTmp, 1))
;;;537        {
;;;538            sysprintf(" ~~~ NT066E Read NT066EResetBuildBit(1) 0x%02x ~~~\n", dataTmp[0]);
;;;539        }
;;;540        else
;;;541        {
;;;542            sysprintf(" !!! NT066E Read ERROR !!!\n");
;;;543            return FALSE;
;;;544        }   
;;;545        if(flag)
;;;546            dataTmp[0] = dataTmp[0] | 0x1;
;;;547        else
;;;548            dataTmp[0] = dataTmp[0] & (~0x1);
;;;549        
;;;550        sendNT066EWriteCmd(0x04, dataTmp, 1);   
;;;551    
;;;552        if(sendNT066EReadCmd(0x04, dataTmp1, 1))
;;;553        {
;;;554            sysprintf(" ~~~ NT066E Read NT066EResetBuildBit(2) 0x%02x ~~~\n", dataTmp1[0]);
;;;555            if(dataTmp1[0] != dataTmp[0])
;;;556            {
;;;557                sysprintf(" ~~~ NT066E Tx NT066EResetBuildBit error 0x%02x : 0x%02x ~~~\n", dataTmp[0], dataTmp1[0]);
;;;558                return FALSE;
;;;559            }
;;;560        }
;;;561        else
;;;562        {
;;;563            sysprintf(" !!! NT066E Read ERROR !!!\n");
;;;564            return FALSE;
;;;565        }   
;;;566        //#endif    
;;;567        return TRUE;
;;;568    }
0006bc  e8bd8010          POP      {r4,pc}
                  |L1.1728|
0006c0  e28f0f59          ADR      r0,|L1.2092|
0006c4  ebfffffe          BL       sysprintf
0006c8  e3a02001          MOV      r2,#1                 ;536
0006cc  e28d1008          ADD      r1,sp,#8              ;536
0006d0  e3a00004          MOV      r0,#4                 ;536
0006d4  ebfffffe          BL       sendNT066EReadCmd
0006d8  e3500000          CMP      r0,#0                 ;536
0006dc  0a000003          BEQ      |L1.1776|
0006e0  e5dd1008          LDRB     r1,[sp,#8]            ;538
0006e4  e28f0f57          ADR      r0,|L1.2120|
0006e8  ebfffffe          BL       sysprintf
0006ec  ea000003          B        |L1.1792|
                  |L1.1776|
0006f0  e28f0088          ADR      r0,|L1.1920|
0006f4  ebfffffe          BL       sysprintf
0006f8  e3a00000          MOV      r0,#0                 ;543
0006fc  eaffffed          B        |L1.1720|
                  |L1.1792|
000700  e3540000          CMP      r4,#0                 ;545
000704  0a000003          BEQ      |L1.1816|
000708  e5dd0008          LDRB     r0,[sp,#8]            ;546
00070c  e3800001          ORR      r0,r0,#1              ;546
000710  e5cd0008          STRB     r0,[sp,#8]            ;546
000714  ea000002          B        |L1.1828|
                  |L1.1816|
000718  e5dd0008          LDRB     r0,[sp,#8]            ;548
00071c  e3c00001          BIC      r0,r0,#1              ;548
000720  e5cd0008          STRB     r0,[sp,#8]            ;548
                  |L1.1828|
000724  e3a02001          MOV      r2,#1                 ;550
000728  e28d1008          ADD      r1,sp,#8              ;550
00072c  e3a00004          MOV      r0,#4                 ;550
000730  ebfffffe          BL       sendNT066EWriteCmd
000734  e3a02001          MOV      r2,#1                 ;552
000738  e1a0100d          MOV      r1,sp                 ;552
00073c  e3a00004          MOV      r0,#4                 ;552
000740  ebfffffe          BL       sendNT066EReadCmd
000744  e3500000          CMP      r0,#0                 ;552
000748  0a000068          BEQ      |L1.2288|
00074c  e5dd1000          LDRB     r1,[sp,#0]            ;554
000750  e28f0f49          ADR      r0,|L1.2172|
000754  ebfffffe          BL       sysprintf
000758  e5dd0000          LDRB     r0,[sp,#0]            ;555
00075c  e5dd1008          LDRB     r1,[sp,#8]            ;555
000760  e1500001          CMP      r0,r1                 ;555
000764  0a000065          BEQ      |L1.2304|
000768  e5dd2000          LDRB     r2,[sp,#0]            ;557
00076c  e5dd1008          LDRB     r1,[sp,#8]            ;557
000770  e28f0f4e          ADR      r0,|L1.2224|
000774  ebfffffe          BL       sysprintf
000778  e3a00000          MOV      r0,#0                 ;558
00077c  eaffffcd          B        |L1.1720|
                  |L1.1920|
000780  20212121          DCB      " !!! NT066E Read ERROR !!!\n",0
000784  204e5430
000788  36364520
00078c  52656164
000790  20455252
000794  4f522021
000798  21210a00
                  |L1.1948|
00079c  207e7e7e          DCB      " ~~~ NT066E write ClkReg 0x%02x ~~~\n",0
0007a0  204e5430
0007a4  36364520
0007a8  77726974
0007ac  6520436c
0007b0  6b526567
0007b4  20307825
0007b8  30327820
0007bc  7e7e7e0a
0007c0  00      
0007c1  00                DCB      0
0007c2  00                DCB      0
0007c3  00                DCB      0
                  |L1.1988|
0007c4  207e7e7e          DCB      " ~~~ NT066E Tx ClkReg error 0x%02x : 0x%02x ~~~\n",0
0007c8  204e5430
0007cc  36364520
0007d0  54782043
0007d4  6c6b5265
0007d8  67206572
0007dc  726f7220
0007e0  30782530
0007e4  3278203a
0007e8  20307825
0007ec  30327820
0007f0  7e7e7e0a
0007f4  00      
0007f5  00                DCB      0
0007f6  00                DCB      0
0007f7  00                DCB      0
                  |L1.2040|
0007f8  207e7e7e          DCB      " ~~~ NT066E Read ClkReg(2) 0x%02x (b%08b)~~~\n",0
0007fc  204e5430
000800  36364520
000804  52656164
000808  20436c6b
00080c  52656728
000810  32292030
000814  78253032
000818  78202862
00081c  25303862
000820  297e7e7e
000824  0a00    
000826  00                DCB      0
000827  00                DCB      0
                  |L1.2088|
                          DCD      initFlag
                  |L1.2092|
00082c  4e543036          DCB      "NT066EResetBuildBit --> \n",0
000830  36455265
000834  73657442
000838  75696c64
00083c  42697420
000840  2d2d3e20
000844  0a00    
000846  00                DCB      0
000847  00                DCB      0
                  |L1.2120|
000848  207e7e7e          DCB      " ~~~ NT066E Read NT066EResetBuildBit(1) 0x%02x ~~~\n",0
00084c  204e5430
000850  36364520
000854  52656164
000858  204e5430
00085c  36364552
000860  65736574
000864  4275696c
000868  64426974
00086c  28312920
000870  30782530
000874  3278207e
000878  7e7e0a00
                  |L1.2172|
00087c  207e7e7e          DCB      " ~~~ NT066E Read NT066EResetBuildBit(2) 0x%02x ~~~\n",0
000880  204e5430
000884  36364520
000888  52656164
00088c  204e5430
000890  36364552
000894  65736574
000898  4275696c
00089c  64426974
0008a0  28322920
0008a4  30782530
0008a8  3278207e
0008ac  7e7e0a00
                  |L1.2224|
0008b0  207e7e7e          DCB      " ~~~ NT066E Tx NT066EResetBuildBit error 0x%02x : 0x%02"
0008b4  204e5430
0008b8  36364520
0008bc  5478204e
0008c0  54303636
0008c4  45526573
0008c8  65744275
0008cc  696c6442
0008d0  69742065
0008d4  72726f72
0008d8  20307825
0008dc  30327820
0008e0  3a203078
0008e4  253032  
0008e7  78207e7e          DCB      "x ~~~\n",0
0008eb  7e0a00  
0008ee  00                DCB      0
0008ef  00                DCB      0
                  |L1.2288|
0008f0  e24f0f5e          ADR      r0,|L1.1920|
0008f4  ebfffffe          BL       sysprintf
0008f8  e3a00000          MOV      r0,#0                 ;564
0008fc  eaffff6d          B        |L1.1720|
                  |L1.2304|
000900  e3a00001          MOV      r0,#1                 ;567
000904  eaffff6b          B        |L1.1720|
;;;569    #define SEN_TRIGGER_LEVEL_START_ADDRESS  0x20
                          ENDP

                  NT066ESetTriggerLevel PROC
;;;570    BOOL NT066ESetTriggerLevel(int level)
000908  e92d407c          PUSH     {r2-r6,lr}
;;;571    {
00090c  e1a05000          MOV      r5,r0
;;;572        //#if(SUPPORT_NT066E)
;;;573        uint8_t dataTmp = level;
000910  e20500ff          AND      r0,r5,#0xff
000914  e58d0004          STR      r0,[sp,#4]
;;;574        uint8_t dataTmp1;
;;;575        if(initFlag == FALSE)
000918  e51f00f8          LDR      r0,|L1.2088|
00091c  e5d00000          LDRB     r0,[r0,#0]  ; initFlag
000920  e3500000          CMP      r0,#0
000924  1a000001          BNE      |L1.2352|
;;;576            return FALSE;
000928  e3a00000          MOV      r0,#0
                  |L1.2348|
;;;577        sysprintf("NT066ESetTriggerLevel --> \n");
;;;578        NT066EResetBuildBit(TRUE);
;;;579        for(uint8_t i = 0; i<6; i++)
;;;580        {
;;;581            sendNT066EWriteCmd(i+SEN_TRIGGER_LEVEL_START_ADDRESS, &dataTmp, 1);   
;;;582    
;;;583            if(sendNT066EReadCmd(i+SEN_TRIGGER_LEVEL_START_ADDRESS, &dataTmp1, 1))
;;;584            {
;;;585                sysprintf(" ~~~ NT066E Read TriggerLevel 0x%02x ~~~\n", dataTmp1);
;;;586                if(dataTmp1 != dataTmp)
;;;587                {
;;;588                    sysprintf(" ~~~ NT066E Tx TriggerLevel error 0x%02x : 0x%02x ~~~\n", dataTmp, dataTmp1);
;;;589                    return FALSE;
;;;590                }
;;;591            }
;;;592            else
;;;593            {
;;;594                sysprintf(" !!! NT066E Read TriggerLevel ERROR !!!\n");
;;;595                return FALSE;
;;;596            }   
;;;597        }
;;;598        NT066EResetBuildBit(FALSE);
;;;599        return TRUE;
;;;600    }
00092c  e8bd807c          POP      {r2-r6,pc}
                  |L1.2352|
000930  e28f0f61          ADR      r0,|L1.2748|
000934  ebfffffe          BL       sysprintf
000938  e3a00001          MOV      r0,#1                 ;578
00093c  ebfffffe          BL       NT066EResetBuildBit
000940  e3a04000          MOV      r4,#0                 ;579
000944  ea00001e          B        |L1.2500|
                  |L1.2376|
000948  e2841020          ADD      r1,r4,#0x20           ;581
00094c  e20100ff          AND      r0,r1,#0xff           ;581
000950  e3a02001          MOV      r2,#1                 ;581
000954  e28d1004          ADD      r1,sp,#4              ;581
000958  ebfffffe          BL       sendNT066EWriteCmd
00095c  e2841020          ADD      r1,r4,#0x20           ;583
000960  e20100ff          AND      r0,r1,#0xff           ;583
000964  e3a02001          MOV      r2,#1                 ;583
000968  e1a0100d          MOV      r1,sp                 ;583
00096c  ebfffffe          BL       sendNT066EReadCmd
000970  e3500000          CMP      r0,#0                 ;583
000974  0a00000c          BEQ      |L1.2476|
000978  e5dd1000          LDRB     r1,[sp,#0]            ;585
00097c  e28f0f55          ADR      r0,|L1.2776|
000980  ebfffffe          BL       sysprintf
000984  e5dd0000          LDRB     r0,[sp,#0]            ;586
000988  e5dd1004          LDRB     r1,[sp,#4]            ;586
00098c  e1500001          CMP      r0,r1                 ;586
000990  0a000009          BEQ      |L1.2492|
000994  e5dd2000          LDRB     r2,[sp,#0]            ;588
000998  e5dd1004          LDRB     r1,[sp,#4]            ;588
00099c  e28f0e16          ADR      r0,|L1.2820|
0009a0  ebfffffe          BL       sysprintf
0009a4  e3a00000          MOV      r0,#0                 ;589
0009a8  eaffffdf          B        |L1.2348|
                  |L1.2476|
0009ac  e28f0f62          ADR      r0,|L1.2876|
0009b0  ebfffffe          BL       sysprintf
0009b4  e3a00000          MOV      r0,#0                 ;595
0009b8  eaffffdb          B        |L1.2348|
                  |L1.2492|
0009bc  e2840001          ADD      r0,r4,#1              ;579
0009c0  e20040ff          AND      r4,r0,#0xff           ;579
                  |L1.2500|
0009c4  e3540006          CMP      r4,#6                 ;579
0009c8  baffffde          BLT      |L1.2376|
0009cc  e3a00000          MOV      r0,#0                 ;598
0009d0  ebfffffe          BL       NT066EResetBuildBit
0009d4  e3a00001          MOV      r0,#1                 ;599
0009d8  eaffffd3          B        |L1.2348|
;;;601    
                          ENDP

                  NT066EResetChip PROC
;;;481    
;;;482    BOOL NT066EResetChip(void)
0009dc  e92d401f          PUSH     {r0-r4,lr}
;;;483    {
;;;484        //#if(SUPPORT_NT066E)
;;;485        uint8_t dataTmp[8];
;;;486        uint8_t dataTmp1[8];
;;;487        if(initFlag == FALSE)
0009e0  e51f01c0          LDR      r0,|L1.2088|
0009e4  e5d00000          LDRB     r0,[r0,#0]  ; initFlag
0009e8  e3500000          CMP      r0,#0
0009ec  1a000002          BNE      |L1.2556|
;;;488            return FALSE;
0009f0  e3a00000          MOV      r0,#0
                  |L1.2548|
0009f4  e28dd010          ADD      sp,sp,#0x10
;;;489    
;;;490    
;;;491        if(NT066ESetTriggerLevel(10) == FALSE)
;;;492        {
;;;493            return FALSE;
;;;494        } 
;;;495    
;;;496        sysprintf("NT066EResetChip --> \n");
;;;497        if(sendNT066EReadCmd(0x04, dataTmp, 1))
;;;498        {
;;;499            sysprintf(" ~~~ NT066E Read SysCtrl(1) 0x%02x ~~~\n", dataTmp[0]);
;;;500        }
;;;501        else
;;;502        {
;;;503            sysprintf(" !!! NT066E Read ERROR !!!\n");
;;;504            return FALSE;
;;;505        }   
;;;506        
;;;507        dataTmp[0] = dataTmp[0] | 0x80;
;;;508        sendNT066EWriteCmd(0x04, dataTmp, 1);   
;;;509    
;;;510        if(sendNT066EReadCmd(0x04, dataTmp1, 1))
;;;511        {
;;;512            sysprintf(" ~~~ NT066E Read SysCtrl(2) 0x%02x ~~~\n", dataTmp1[0]);
;;;513            if(dataTmp1[0] != dataTmp[0])
;;;514            {
;;;515                sysprintf(" ~~~ NT066E Tx SysCtrl error 0x%02x : 0x%02x ~~~\n", dataTmp[0], dataTmp1[0]);
;;;516                return FALSE;
;;;517            }
;;;518        }
;;;519        else
;;;520        {
;;;521            sysprintf(" !!! NT066E Read ERROR !!!\n");
;;;522            return FALSE;
;;;523        }   
;;;524        //#endif    
;;;525        return TRUE;
;;;526    }
0009f8  e8bd8010          POP      {r4,pc}
                  |L1.2556|
0009fc  e3a0000a          MOV      r0,#0xa               ;491
000a00  ebfffffe          BL       NT066ESetTriggerLevel
000a04  e3500000          CMP      r0,#0                 ;491
000a08  1a000001          BNE      |L1.2580|
000a0c  e3a00000          MOV      r0,#0                 ;493
000a10  eafffff7          B        |L1.2548|
                  |L1.2580|
000a14  e28f0f53          ADR      r0,|L1.2920|
000a18  ebfffffe          BL       sysprintf
000a1c  e3a02001          MOV      r2,#1                 ;497
000a20  e28d1008          ADD      r1,sp,#8              ;497
000a24  e3a00004          MOV      r0,#4                 ;497
000a28  ebfffffe          BL       sendNT066EReadCmd
000a2c  e3500000          CMP      r0,#0                 ;497
000a30  0a000003          BEQ      |L1.2628|
000a34  e5dd1008          LDRB     r1,[sp,#8]            ;499
000a38  e28f0d05          ADR      r0,|L1.2944|
000a3c  ebfffffe          BL       sysprintf
000a40  ea000003          B        |L1.2644|
                  |L1.2628|
000a44  e24f0fb3          ADR      r0,|L1.1920|
000a48  ebfffffe          BL       sysprintf
000a4c  e3a00000          MOV      r0,#0                 ;504
000a50  eaffffe7          B        |L1.2548|
                  |L1.2644|
000a54  e5dd0008          LDRB     r0,[sp,#8]            ;507
000a58  e3800080          ORR      r0,r0,#0x80           ;507
000a5c  e5cd0008          STRB     r0,[sp,#8]            ;507
000a60  e3a02001          MOV      r2,#1                 ;508
000a64  e28d1008          ADD      r1,sp,#8              ;508
000a68  e3a00004          MOV      r0,#4                 ;508
000a6c  ebfffffe          BL       sendNT066EWriteCmd
000a70  e3a02001          MOV      r2,#1                 ;510
000a74  e1a0100d          MOV      r1,sp                 ;510
000a78  e3a00004          MOV      r0,#4                 ;510
000a7c  ebfffffe          BL       sendNT066EReadCmd
000a80  e3500000          CMP      r0,#0                 ;510
000a84  0a00005e          BEQ      |L1.3076|
000a88  e5dd1000          LDRB     r1,[sp,#0]            ;512
000a8c  e28f0f45          ADR      r0,|L1.2984|
000a90  ebfffffe          BL       sysprintf
000a94  e5dd0000          LDRB     r0,[sp,#0]            ;513
000a98  e5dd1008          LDRB     r1,[sp,#8]            ;513
000a9c  e1500001          CMP      r0,r1                 ;513
000aa0  0a00005b          BEQ      |L1.3092|
000aa4  e5dd2000          LDRB     r2,[sp,#0]            ;515
000aa8  e5dd1008          LDRB     r1,[sp,#8]            ;515
000aac  e28f0f47          ADR      r0,|L1.3024|
000ab0  ebfffffe          BL       sysprintf
000ab4  e3a00000          MOV      r0,#0                 ;516
000ab8  eaffffcd          B        |L1.2548|
                  |L1.2748|
000abc  4e543036          DCB      "NT066ESetTriggerLevel --> \n",0
000ac0  36455365
000ac4  74547269
000ac8  67676572
000acc  4c657665
000ad0  6c202d2d
000ad4  3e200a00
                  |L1.2776|
000ad8  207e7e7e          DCB      " ~~~ NT066E Read TriggerLevel 0x%02x ~~~\n",0
000adc  204e5430
000ae0  36364520
000ae4  52656164
000ae8  20547269
000aec  67676572
000af0  4c657665
000af4  6c203078
000af8  25303278
000afc  207e7e7e
000b00  0a00    
000b02  00                DCB      0
000b03  00                DCB      0
                  |L1.2820|
000b04  207e7e7e          DCB      " ~~~ NT066E Tx TriggerLevel error 0x%02x : 0x%02x ~~~\n"
000b08  204e5430
000b0c  36364520
000b10  54782054
000b14  72696767
000b18  65724c65
000b1c  76656c20
000b20  6572726f
000b24  72203078
000b28  25303278
000b2c  203a2030
000b30  78253032
000b34  78207e7e
000b38  7e0a    
000b3a  00                DCB      0
000b3b  00                DCB      0
                  |L1.2876|
000b3c  20212121          DCB      " !!! NT066E Read TriggerLevel ERROR !!!\n",0
000b40  204e5430
000b44  36364520
000b48  52656164
000b4c  20547269
000b50  67676572
000b54  4c657665
000b58  6c204552
000b5c  524f5220
000b60  2121210a
000b64  00      
000b65  00                DCB      0
000b66  00                DCB      0
000b67  00                DCB      0
                  |L1.2920|
000b68  4e543036          DCB      "NT066EResetChip --> \n",0
000b6c  36455265
000b70  73657443
000b74  68697020
000b78  2d2d3e20
000b7c  0a00    
000b7e  00                DCB      0
000b7f  00                DCB      0
                  |L1.2944|
000b80  207e7e7e          DCB      " ~~~ NT066E Read SysCtrl(1) 0x%02x ~~~\n",0
000b84  204e5430
000b88  36364520
000b8c  52656164
000b90  20537973
000b94  4374726c
000b98  28312920
000b9c  30782530
000ba0  3278207e
000ba4  7e7e0a00
                  |L1.2984|
000ba8  207e7e7e          DCB      " ~~~ NT066E Read SysCtrl(2) 0x%02x ~~~\n",0
000bac  204e5430
000bb0  36364520
000bb4  52656164
000bb8  20537973
000bbc  4374726c
000bc0  28322920
000bc4  30782530
000bc8  3278207e
000bcc  7e7e0a00
                  |L1.3024|
000bd0  207e7e7e          DCB      " ~~~ NT066E Tx SysCtrl error 0x%02x : 0x%02x ~~~\n",0
000bd4  204e5430
000bd8  36364520
000bdc  54782053
000be0  79734374
000be4  726c2065
000be8  72726f72
000bec  20307825
000bf0  30327820
000bf4  3a203078
000bf8  25303278
000bfc  207e7e7e
000c00  0a00    
000c02  00                DCB      0
000c03  00                DCB      0
                  |L1.3076|
000c04  e59f03ac          LDR      r0,|L1.4024|
000c08  ebfffffe          BL       sysprintf
000c0c  e3a00000          MOV      r0,#0                 ;522
000c10  eaffff77          B        |L1.2548|
                  |L1.3092|
000c14  e3a00001          MOV      r0,#1                 ;525
000c18  eaffff75          B        |L1.2548|
;;;527    
                          ENDP

                  hwInit PROC
;;;304    }
;;;305    static BOOL hwInit(void)
000c1c  e92d4010          PUSH     {r4,lr}
;;;306    {
;;;307        //uint8_t dataTmp[8];
;;;308        //uint8_t dataTmp1[8];
;;;309        outpw(REG_CLK_PCLKEN0,inpw(REG_CLK_PCLKEN0) | (1<<3)); //Enable GPIO engin clock.
000c20  e3a0020b          MOV      r0,#0xb0000000
000c24  e5900218          LDR      r0,[r0,#0x218]
000c28  e3800008          ORR      r0,r0,#8
000c2c  e3a0120b          MOV      r1,#0xb0000000
000c30  e5810218          STR      r0,[r1,#0x218]
;;;310        /* Set PH1 to EINT7 */
;;;311        outpw(REG_SYS_GPH_MFPL,(inpw(REG_SYS_GPH_MFPL) & ~(0xF<<4)) | (0xF<<4));    
000c34  e3a0020b          MOV      r0,#0xb0000000
000c38  e59000a8          LDR      r0,[r0,#0xa8]
000c3c  e38000f0          ORR      r0,r0,#0xf0
000c40  e58100a8          STR      r0,[r1,#0xa8]
;;;312        /* Configure PH1 to input mode */
;;;313        GPIO_OpenBit(GPIOH, BIT1, DIR_INPUT, PULL_UP);
000c44  e3a03001          MOV      r3,#1
000c48  e3a02000          MOV      r2,#0
000c4c  e3a01002          MOV      r1,#2
000c50  e3a00d07          MOV      r0,#0x1c0
000c54  ebfffffe          BL       GPIO_OpenBit
;;;314        /* Confingure PH1 to falling-edge trigger */
;;;315        GPIO_EnableTriggerType(GPIOH, BIT1, BOTH_EDGE/*FALLING*/);
000c58  e3a02004          MOV      r2,#4
000c5c  e3a01002          MOV      r1,#2
000c60  e3a00d07          MOV      r0,#0x1c0
000c64  ebfffffe          BL       GPIO_EnableTriggerType
;;;316        //EINT1
;;;317        GPIO_EnableEINT(NIRQ1, (GPIO_CALLBACK)EINT1Callback, 0);
000c68  e3a02000          MOV      r2,#0
000c6c  e59f1348          LDR      r1,|L1.4028|
000c70  e3a00001          MOV      r0,#1
000c74  ebfffffe          BL       GPIO_EnableEINT
;;;318        
;;;319        GPIO_ClrISRBit(GPIOI, BIT2);    
000c78  e3a01004          MOV      r1,#4
000c7c  e3a00c02          MOV      r0,#0x200
000c80  ebfffffe          BL       GPIO_ClrISRBit
;;;320        
;;;321        #if(SUPPORT_HK_10_HW)
;;;322        //GPE8 Power pin
;;;323        outpw(REG_SYS_GPE_MFPH,(inpw(REG_SYS_GPE_MFPH) & ~(0xF<<0)) | (0x0<<0));
000c84  e3a0020b          MOV      r0,#0xb0000000
000c88  e5900094          LDR      r0,[r0,#0x94]
000c8c  e3c0000f          BIC      r0,r0,#0xf
000c90  e3a0120b          MOV      r1,#0xb0000000
000c94  e5810094          STR      r0,[r1,#0x94]
;;;324        #else
;;;325        //GPG0 Power pin
;;;326        outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<0)) | (0x0<<0));
;;;327        #endif    
;;;328    //    //GPG0 Power pin
;;;329    //    outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<0)) | (0x0<<0));
;;;330        
;;;331        GPIO_OpenBit(NT066E_POWER_PIN_PORT, NT066E_POWER_PORT_BIT, DIR_OUTPUT, NO_PULL_UP);  
000c98  e3a03000          MOV      r3,#0
000c9c  e3a02001          MOV      r2,#1
000ca0  e3a01c01          MOV      r1,#0x100
000ca4  e1a00001          MOV      r0,r1
000ca8  ebfffffe          BL       GPIO_OpenBit
;;;332        GPIO_SetBit(NT066E_POWER_PIN_PORT, NT066E_POWER_PORT_BIT); 
000cac  e3a01c01          MOV      r1,#0x100
000cb0  e1a00001          MOV      r0,r1
000cb4  ebfffffe          BL       GPIO_SetBit
;;;333        sysDelay(200/portTICK_RATE_MS);
000cb8  e3a00014          MOV      r0,#0x14
000cbc  ebfffffe          BL       sysDelay
;;;334        GPIO_ClrBit(NT066E_POWER_PIN_PORT, NT066E_POWER_PORT_BIT); 
000cc0  e3a01c01          MOV      r1,#0x100
000cc4  e1a00001          MOV      r0,r1
000cc8  ebfffffe          BL       GPIO_ClrBit
;;;335        
;;;336       #if(SUPPORT_HK_10_HW)
;;;337        //GPE9 reset pin
;;;338        outpw(REG_SYS_GPE_MFPH,(inpw(REG_SYS_GPE_MFPH) & ~(0xF<<4)) | (0x0<<4));
000ccc  e3a0020b          MOV      r0,#0xb0000000
000cd0  e5900094          LDR      r0,[r0,#0x94]
000cd4  e3c000f0          BIC      r0,r0,#0xf0
000cd8  e3a0120b          MOV      r1,#0xb0000000
000cdc  e5810094          STR      r0,[r1,#0x94]
;;;339        #else
;;;340        //GPG1 reset pin
;;;341        outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<4)) | (0x0<<4));
;;;342        #endif
;;;343    //    //GPG1 reset pin
;;;344    //    outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<4)) | (0x0<<4));
;;;345        
;;;346        GPIO_OpenBit(NT066E_RESET_PIN_PORT, NT066E_RESET_PORT_BIT, DIR_OUTPUT, NO_PULL_UP);
000ce0  e3a03000          MOV      r3,#0
000ce4  e3a02001          MOV      r2,#1
000ce8  e3a01c02          MOV      r1,#0x200
000cec  e3a00c01          MOV      r0,#0x100
000cf0  ebfffffe          BL       GPIO_OpenBit
;;;347        GPIO_SetBit(NT066E_RESET_PIN_PORT, NT066E_RESET_PORT_BIT); 
000cf4  e3a01c02          MOV      r1,#0x200
000cf8  e3a00c01          MOV      r0,#0x100
000cfc  ebfffffe          BL       GPIO_SetBit
;;;348        sysDelay(200/portTICK_RATE_MS);
000d00  e3a00014          MOV      r0,#0x14
000d04  ebfffffe          BL       sysDelay
;;;349        GPIO_ClrBit(NT066E_RESET_PIN_PORT, NT066E_RESET_PORT_BIT); 
000d08  e3a01c02          MOV      r1,#0x200
000d0c  e3a00c01          MOV      r0,#0x100
000d10  ebfffffe          BL       GPIO_ClrBit
;;;350        sysDelay(200/portTICK_RATE_MS);
000d14  e3a00014          MOV      r0,#0x14
000d18  ebfffffe          BL       sysDelay
;;;351        GPIO_SetBit(NT066E_RESET_PIN_PORT, NT066E_RESET_PORT_BIT); 
000d1c  e3a01c02          MOV      r1,#0x200
000d20  e3a00c01          MOV      r0,#0x100
000d24  ebfffffe          BL       GPIO_SetBit
;;;352        
;;;353        //GPF 0 ~ 5 trig pin set to input
;;;354        outpw(REG_SYS_GPF_MFPL,(inpw(REG_SYS_GPF_MFPL) & ~(0xFFFFFF<<0)) | (0x000000u<<0));
000d28  e3a0020b          MOV      r0,#0xb0000000
000d2c  e5900098          LDR      r0,[r0,#0x98]
000d30  e20004ff          AND      r0,r0,#0xff000000
000d34  e3a0120b          MOV      r1,#0xb0000000
000d38  e5810098          STR      r0,[r1,#0x98]
;;;355        GPIO_OpenBit(GPIOF, BIT0, DIR_INPUT, NO_PULL_UP);
000d3c  e3a03000          MOV      r3,#0
000d40  e1a02003          MOV      r2,r3
000d44  e3a01001          MOV      r1,#1
000d48  e3a00d05          MOV      r0,#0x140
000d4c  ebfffffe          BL       GPIO_OpenBit
;;;356        GPIO_OpenBit(GPIOF, BIT1, DIR_INPUT, NO_PULL_UP);
000d50  e3a03000          MOV      r3,#0
000d54  e1a02003          MOV      r2,r3
000d58  e3a01002          MOV      r1,#2
000d5c  e3a00d05          MOV      r0,#0x140
000d60  ebfffffe          BL       GPIO_OpenBit
;;;357        GPIO_OpenBit(GPIOF, BIT2, DIR_INPUT, NO_PULL_UP);
000d64  e3a03000          MOV      r3,#0
000d68  e1a02003          MOV      r2,r3
000d6c  e3a01004          MOV      r1,#4
000d70  e3a00d05          MOV      r0,#0x140
000d74  ebfffffe          BL       GPIO_OpenBit
;;;358        GPIO_OpenBit(GPIOF, BIT3, DIR_INPUT, NO_PULL_UP);
000d78  e3a03000          MOV      r3,#0
000d7c  e1a02003          MOV      r2,r3
000d80  e3a01008          MOV      r1,#8
000d84  e3a00d05          MOV      r0,#0x140
000d88  ebfffffe          BL       GPIO_OpenBit
;;;359        GPIO_OpenBit(GPIOF, BIT4, DIR_INPUT, NO_PULL_UP);
000d8c  e3a03000          MOV      r3,#0
000d90  e1a02003          MOV      r2,r3
000d94  e3a01010          MOV      r1,#0x10
000d98  e3a00d05          MOV      r0,#0x140
000d9c  ebfffffe          BL       GPIO_OpenBit
;;;360        GPIO_OpenBit(GPIOF, BIT5, DIR_INPUT, NO_PULL_UP);
000da0  e3a03000          MOV      r3,#0
000da4  e1a02003          MOV      r2,r3
000da8  e3a01020          MOV      r1,#0x20
000dac  e3a00d05          MOV      r0,#0x140
000db0  ebfffffe          BL       GPIO_OpenBit
;;;361        
;;;362        
;;;363        
;;;364        initFlag = TRUE;
000db4  e3a00001          MOV      r0,#1
000db8  e51f1598          LDR      r1,|L1.2088|
000dbc  e5c10000          STRB     r0,[r1,#0]  ; initFlag
;;;365        
;;;366        //if(NT066ESetTriggerLevel(7) == FALSE)
;;;367        //{
;;;368        //    return FALSE;
;;;369        //} 
;;;370        
;;;371        if(NT066EResetChip() == FALSE)
000dc0  ebfffffe          BL       NT066EResetChip
000dc4  e3500000          CMP      r0,#0
000dc8  1a000001          BNE      |L1.3540|
;;;372        {
;;;373            return FALSE;
000dcc  e3a00000          MOV      r0,#0
                  |L1.3536|
;;;374        }    
;;;375        
;;;376    
;;;377        pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, 0, 0);
;;;378        return TRUE;
;;;379    }
000dd0  e8bd8010          POP      {r4,pc}
                  |L1.3540|
000dd4  e51f0b10          LDR      r0,|L1.716|
000dd8  e5900000          LDR      r0,[r0,#0]            ;377  ; pI2cInterface
000ddc  e3a02000          MOV      r2,#0                 ;377
000de0  e1a01002          MOV      r1,r2                 ;377
000de4  e5903004          LDR      r3,[r0,#4]            ;377
000de8  e3a00001          MOV      r0,#1                 ;377
000dec  e12fff33          BLX      r3                    ;377
000df0  e3a00001          MOV      r0,#1                 ;378
000df4  eafffff5          B        |L1.3536|
;;;380    
                          ENDP

                  swInit PROC
;;;381    static BOOL swInit(void)
000df8  e92d401c          PUSH     {r2-r4,lr}
;;;382    {
;;;383        xNT066ESemaphore = xSemaphoreCreateBinary();
000dfc  e3a02003          MOV      r2,#3
000e00  e3a01000          MOV      r1,#0
000e04  e3a00001          MOV      r0,#1
000e08  ebfffffe          BL       xQueueGenericCreate
000e0c  e51f1af8          LDR      r1,|L1.796|
000e10  e5810000          STR      r0,[r1,#0]  ; xNT066ESemaphore
;;;384        xTaskCreate( vNT066EDrvTask, "vNT066EDrvTask", 1024, NULL, NT066E_DRV_THREAD_PROI, NULL );
000e14  e3a00000          MOV      r0,#0
000e18  e3a0100d          MOV      r1,#0xd
000e1c  e58d0004          STR      r0,[sp,#4]
000e20  e1a03000          MOV      r3,r0
000e24  e3a02b01          MOV      r2,#0x400
000e28  e58d1000          STR      r1,[sp,#0]
000e2c  e28f1f63          ADR      r1,|L1.4032|
000e30  e59f0198          LDR      r0,|L1.4048|
000e34  ebfffffe          BL       xTaskCreate
;;;385        return TRUE;
000e38  e3a00001          MOV      r0,#1
;;;386    }
000e3c  e8bd801c          POP      {r2-r4,pc}
;;;387    
                          ENDP

                  vNT066ETestTask PROC
;;;389    #if (ENABLE_BURNIN_TESTER)
;;;390    static void vNT066ETestTask(void *pvparamOuteters)
000e40  ebfffffe          BL       GetCurrentUTCTime
;;;391    {
;;;392        time_t lastTime = GetCurrentUTCTime();
000e44  e1a06000          MOV      r6,r0
;;;393        time_t currentTime;
;;;394        BOOL testLoop = FALSE;
000e48  e3a07000          MOV      r7,#0
;;;395        BOOL status;
;;;396        terninalPrintf("vNT066ETestTask Going...\r\n");
000e4c  e28f0d06          ADR      r0,|L1.4052|
000e50  ebfffffe          BL       terninalPrintf
;;;397        while (TRUE)
000e54  ea000023          B        |L1.3816|
                  |L1.3672|
;;;398        {
;;;399            if (GetPrepareStopBurninFlag())
000e58  ebfffffe          BL       GetPrepareStopBurninFlag
000e5c  e3500000          CMP      r0,#0
000e60  0a000003          BEQ      |L1.3700|
;;;400            {
;;;401                terninalPrintf("vNT066ETestTask Terminated !!\r\n");
000e64  e28f0f61          ADR      r0,|L1.4080|
000e68  ebfffffe          BL       terninalPrintf
;;;402                vTaskDelete(NULL);
000e6c  e3a00000          MOV      r0,#0
000e70  ebfffffe          BL       vTaskDelete
                  |L1.3700|
;;;403            }
;;;404            currentTime = GetCurrentUTCTime();
000e74  ebfffffe          BL       GetCurrentUTCTime
000e78  e1a04000          MOV      r4,r0
;;;405            if ((currentTime - lastTime) > BURNIN_NT066E_INTERVAL)
000e7c  e0440006          SUB      r0,r4,r6
000e80  e350000f          CMP      r0,#0xf
000e84  9a000001          BLS      |L1.3728|
;;;406            {
;;;407                //terninalPrintf("vNT066ETestTask heartbeat.\r\n");
;;;408                lastTime = currentTime;
000e88  e1a06004          MOV      r6,r4
;;;409                testLoop = TRUE;
000e8c  e3a07001          MOV      r7,#1
                  |L1.3728|
;;;410            }
;;;411            if (!testLoop)
000e90  e3570000          CMP      r7,#0
000e94  1a000002          BNE      |L1.3748|
;;;412            {
;;;413                vTaskDelay(100 / portTICK_RATE_MS);
000e98  e3a0000a          MOV      r0,#0xa
000e9c  ebfffffe          BL       vTaskDelay
;;;414                continue;
000ea0  ea000010          B        |L1.3816|
                  |L1.3748|
;;;415            }
;;;416            testLoop = FALSE;
000ea4  e3a07000          MOV      r7,#0
;;;417            status = NT066ESetTriggerLevel(10);
000ea8  e3a0000a          MOV      r0,#0xa
000eac  ebfffffe          BL       NT066ESetTriggerLevel
000eb0  e1a05000          MOV      r5,r0
;;;418            nt066eBurninCounter++;
000eb4  e59f0154          LDR      r0,|L1.4112|
000eb8  e5900000          LDR      r0,[r0,#0]  ; nt066eBurninCounter
000ebc  e2800001          ADD      r0,r0,#1
000ec0  e59f1148          LDR      r1,|L1.4112|
000ec4  e5810000          STR      r0,[r1,#0]  ; nt066eBurninCounter
;;;419            if (!status) {
000ec8  e3550000          CMP      r5,#0
000ecc  1a000004          BNE      |L1.3812|
;;;420                nt066eBurninErrorCounter++;
000ed0  e59f013c          LDR      r0,|L1.4116|
000ed4  e5900000          LDR      r0,[r0,#0]  ; nt066eBurninErrorCounter
000ed8  e2800001          ADD      r0,r0,#1
000edc  e59f1130          LDR      r1,|L1.4116|
000ee0  e5810000          STR      r0,[r1,#0]  ; nt066eBurninErrorCounter
                  |L1.3812|
000ee4  e1a00000          MOV      r0,r0                 ;414
                  |L1.3816|
000ee8  eaffffda          B        |L1.3672|
;;;421            }
;;;422            //terninalPrintf("vNT066ETestTask, status=%d\r\n", status);
;;;423        }
;;;424    }
;;;425    #endif
                          ENDP

                  NT066EDrvInit PROC
;;;430    /*-----------------------------------------*/
;;;431    BOOL NT066EDrvInit(BOOL testModeFlag)
000eec  e92d401c          PUSH     {r2-r4,lr}
;;;432    {
000ef0  e1a04000          MOV      r4,r0
;;;433        sysprintf("NT066EDrvInit!!\n");
000ef4  e28f0f47          ADR      r0,|L1.4120|
000ef8  ebfffffe          BL       sysprintf
;;;434    #if (ENABLE_BURNIN_TESTER)
;;;435        if (EnabledBurninTestMode() == FALSE)
000efc  ebfffffe          BL       EnabledBurninTestMode
000f00  e3500000          CMP      r0,#0
000f04  1a000005          BNE      |L1.3872|
;;;436    #endif
;;;437        {
;;;438            if(initFlag)
000f08  e51f06e8          LDR      r0,|L1.2088|
000f0c  e5d00000          LDRB     r0,[r0,#0]  ; initFlag
000f10  e3500000          CMP      r0,#0
000f14  0a000001          BEQ      |L1.3872|
;;;439                return TRUE;
000f18  e3a00001          MOV      r0,#1
                  |L1.3868|
;;;440        }
;;;441        pI2cInterface = I2cGetInterface(I2C_1_INTERFACE_INDEX);
;;;442        if(pI2cInterface == NULL)
;;;443        {
;;;444            sysprintf("NT066EDrvInit ERROR (pI2cInterface == NULL)!!\n");
;;;445            return FALSE;
;;;446        }
;;;447        
;;;448        if(pI2cInterface->initFunc() == FALSE)
;;;449        {
;;;450            sysprintf("NT066EDrvInit ERROR (initFunc false)!!\n");
;;;451            return FALSE;
;;;452        }
;;;453        
;;;454        if(hwInit() == FALSE)
;;;455        {
;;;456            sysprintf("NT066EDrvInit ERROR (hwInit false)!!\n");
;;;457            return FALSE;
;;;458        }
;;;459        
;;;460        if(testModeFlag == FALSE)
;;;461        {
;;;462            if(swInit() == FALSE)
;;;463            {
;;;464                sysprintf("NT066EDrvInit ERROR (swInit false)!!\n");
;;;465                return FALSE;
;;;466            }
;;;467        }
;;;468    #if (ENABLE_BURNIN_TESTER)
;;;469        else if (EnabledBurninTestMode())
;;;470        {
;;;471            xTaskCreate(vNT066ETestTask, "vNT066ETestTask", 1024*10, NULL, NT066E_DRV_THREAD_PROI, NULL);
;;;472        }
;;;473    #endif
;;;474        
;;;475        return TRUE;
;;;476    }
000f1c  e8bd801c          POP      {r2-r4,pc}
                  |L1.3872|
000f20  e3a00000          MOV      r0,#0                 ;441
000f24  ebfffffe          BL       I2cGetInterface
000f28  e51f1c64          LDR      r1,|L1.716|
000f2c  e5810000          STR      r0,[r1,#0]            ;441  ; pI2cInterface
000f30  e2810000          ADD      r0,r1,#0              ;442
000f34  e5900000          LDR      r0,[r0,#0]            ;442  ; pI2cInterface
000f38  e3500000          CMP      r0,#0                 ;442
000f3c  1a000003          BNE      |L1.3920|
000f40  e28f00e4          ADR      r0,|L1.4140|
000f44  ebfffffe          BL       sysprintf
000f48  e3a00000          MOV      r0,#0                 ;445
000f4c  eafffff2          B        |L1.3868|
                  |L1.3920|
000f50  e51f1c8c          LDR      r1,|L1.716|
000f54  e5911000          LDR      r1,[r1,#0]            ;448  ; pI2cInterface
000f58  e5910000          LDR      r0,[r1,#0]            ;448
000f5c  e12fff30          BLX      r0                    ;448
000f60  e3500000          CMP      r0,#0                 ;448
000f64  1a000003          BNE      |L1.3960|
000f68  e28f00ec          ADR      r0,|L1.4188|
000f6c  ebfffffe          BL       sysprintf
000f70  e3a00000          MOV      r0,#0                 ;451
000f74  eaffffe8          B        |L1.3868|
                  |L1.3960|
000f78  ebfffffe          BL       hwInit
000f7c  e3500000          CMP      r0,#0                 ;454
000f80  1a000003          BNE      |L1.3988|
000f84  e28f00f8          ADR      r0,|L1.4228|
000f88  ebfffffe          BL       sysprintf
000f8c  e3a00000          MOV      r0,#0                 ;457
000f90  eaffffe1          B        |L1.3868|
                  |L1.3988|
000f94  e3540000          CMP      r4,#0                 ;460
000f98  1a00004d          BNE      |L1.4308|
000f9c  ebfffffe          BL       swInit
000fa0  e3500000          CMP      r0,#0                 ;462
000fa4  1a000056          BNE      |L1.4356|
000fa8  e28f00fc          ADR      r0,|L1.4268|
000fac  ebfffffe          BL       sysprintf
000fb0  e3a00000          MOV      r0,#0                 ;465
000fb4  eaffffd8          B        |L1.3868|
                  |L1.4024|
                          DCD      ||.text||+0x780
                  |L1.4028|
                          DCD      EINT1Callback
                  |L1.4032|
000fc0  764e5430          DCB      "vNT066EDrvTask",0
000fc4  36364544
000fc8  72765461
000fcc  736b00  
000fcf  00                DCB      0
                  |L1.4048|
                          DCD      vNT066EDrvTask
                  |L1.4052|
000fd4  764e5430          DCB      "vNT066ETestTask Going...\r\n",0
000fd8  36364554
000fdc  65737454
000fe0  61736b20
000fe4  476f696e
000fe8  672e2e2e
000fec  0d0a00  
000fef  00                DCB      0
                  |L1.4080|
000ff0  764e5430          DCB      "vNT066ETestTask Terminated !!\r\n",0
000ff4  36364554
000ff8  65737454
000ffc  61736b20
001000  5465726d
001004  696e6174
001008  65642021
00100c  210d0a00
                  |L1.4112|
                          DCD      nt066eBurninCounter
                  |L1.4116|
                          DCD      nt066eBurninErrorCounter
                  |L1.4120|
001018  4e543036          DCB      "NT066EDrvInit!!\n",0
00101c  36454472
001020  76496e69
001024  7421210a
001028  00      
001029  00                DCB      0
00102a  00                DCB      0
00102b  00                DCB      0
                  |L1.4140|
00102c  4e543036          DCB      "NT066EDrvInit ERROR (pI2cInterface == NULL)!!\n",0
001030  36454472
001034  76496e69
001038  74204552
00103c  524f5220
001040  28704932
001044  63496e74
001048  65726661
00104c  6365203d
001050  3d204e55
001054  4c4c2921
001058  210a00  
00105b  00                DCB      0
                  |L1.4188|
00105c  4e543036          DCB      "NT066EDrvInit ERROR (initFunc false)!!\n",0
001060  36454472
001064  76496e69
001068  74204552
00106c  524f5220
001070  28696e69
001074  7446756e
001078  63206661
00107c  6c736529
001080  21210a00
                  |L1.4228|
001084  4e543036          DCB      "NT066EDrvInit ERROR (hwInit false)!!\n",0
001088  36454472
00108c  76496e69
001090  74204552
001094  524f5220
001098  28687749
00109c  6e697420
0010a0  66616c73
0010a4  65292121
0010a8  0a00    
0010aa  00                DCB      0
0010ab  00                DCB      0
                  |L1.4268|
0010ac  4e543036          DCB      "NT066EDrvInit ERROR (swInit false)!!\n",0
0010b0  36454472
0010b4  76496e69
0010b8  74204552
0010bc  524f5220
0010c0  28737749
0010c4  6e697420
0010c8  66616c73
0010cc  65292121
0010d0  0a00    
0010d2  00                DCB      0
0010d3  00                DCB      0
                  |L1.4308|
0010d4  ebfffffe          BL       EnabledBurninTestMode
0010d8  e3500000          CMP      r0,#0                 ;469
0010dc  0a000008          BEQ      |L1.4356|
0010e0  e3a00000          MOV      r0,#0                 ;471
0010e4  e3a0100d          MOV      r1,#0xd               ;471
0010e8  e58d0004          STR      r0,[sp,#4]            ;471
0010ec  e1a03000          MOV      r3,r0                 ;471
0010f0  e3a02b0a          MOV      r2,#0x2800            ;471
0010f4  e58d1000          STR      r1,[sp,#0]            ;471
0010f8  e28f10ac          ADR      r1,|L1.4524|
0010fc  e59f00b8          LDR      r0,|L1.4540|
001100  ebfffffe          BL       xTaskCreate
                  |L1.4356|
001104  e3a00001          MOV      r0,#1                 ;475
001108  eaffff83          B        |L1.3868|
;;;477    void NT066ESetCallbackFunc(keyHardwareCallbackFunc func)
                          ENDP

                  NT066ESetCallbackFunc PROC
00110c  e51f1c40          LDR      r1,|L1.1236|
;;;478    {
;;;479        pKeyHardwareCallbackFunc = func;
001110  e5810000          STR      r0,[r1,#0]  ; pKeyHardwareCallbackFunc
;;;480    }
001114  e12fff1e          BX       lr
;;;481    
                          ENDP

                  NT066ESetPower PROC
;;;601    
;;;602    BOOL NT066ESetPower(BOOL flag)
001118  e92d4010          PUSH     {r4,lr}
;;;603    {
00111c  e1a04000          MOV      r4,r0
;;;604        #if(0)
;;;605        return TRUE;
;;;606        #else
;;;607        if(flag)
001120  e3540000          CMP      r4,#0
001124  0a00000c          BEQ      |L1.4444|
;;;608        {
;;;609            sysprintf(" !!! NT066E Set Power ON !!!\n");
001128  e28f0090          ADR      r0,|L1.4544|
00112c  ebfffffe          BL       sysprintf
;;;610            pI2cInterface->setPin();
001130  e51f1e6c          LDR      r1,|L1.716|
001134  e5911000          LDR      r1,[r1,#0]  ; pI2cInterface
001138  e5910014          LDR      r0,[r1,#0x14]
00113c  e12fff30          BLX      r0
;;;611            GPIO_SetBit(NT066E_RESET_PIN_PORT, NT066E_RESET_PORT_BIT); 
001140  e3a01c02          MOV      r1,#0x200
001144  e3a00c01          MOV      r0,#0x100
001148  ebfffffe          BL       GPIO_SetBit
;;;612            
;;;613            GPIO_ClrBit(NT066E_POWER_PIN_PORT, NT066E_POWER_PORT_BIT); 
00114c  e3a01c01          MOV      r1,#0x100
001150  e1a00001          MOV      r0,r1
001154  ebfffffe          BL       GPIO_ClrBit
001158  ea00000b          B        |L1.4492|
                  |L1.4444|
;;;614            
;;;615        }
;;;616        else
;;;617        {
;;;618            sysprintf(" !!! NT066E Set Power OFF !!!\n");        
00115c  e28f007c          ADR      r0,|L1.4576|
001160  ebfffffe          BL       sysprintf
;;;619            GPIO_SetBit(NT066E_POWER_PIN_PORT, NT066E_POWER_PORT_BIT); 
001164  e3a01c01          MOV      r1,#0x100
001168  e1a00001          MOV      r0,r1
00116c  ebfffffe          BL       GPIO_SetBit
;;;620            
;;;621            GPIO_ClrBit(NT066E_RESET_PIN_PORT, NT066E_RESET_PORT_BIT); 
001170  e3a01c02          MOV      r1,#0x200
001174  e3a00c01          MOV      r0,#0x100
001178  ebfffffe          BL       GPIO_ClrBit
;;;622            pI2cInterface->resetPin();
00117c  e51f1eb8          LDR      r1,|L1.716|
001180  e5911000          LDR      r1,[r1,#0]  ; pI2cInterface
001184  e5910018          LDR      r0,[r1,#0x18]
001188  e12fff30          BLX      r0
                  |L1.4492|
;;;623        }
;;;624        return TRUE;
00118c  e3a00001          MOV      r0,#1
;;;625        #endif
;;;626    }
001190  e8bd8010          POP      {r4,pc}
;;;627    
                          ENDP

                  GetNT066EBurninTestCounter PROC
;;;628    #if (ENABLE_BURNIN_TESTER)
;;;629    uint32_t GetNT066EBurninTestCounter(void)
001194  e51f018c          LDR      r0,|L1.4112|
;;;630    {
;;;631        return nt066eBurninCounter;
001198  e5900000          LDR      r0,[r0,#0]  ; nt066eBurninCounter
;;;632    }
00119c  e12fff1e          BX       lr
;;;633    
                          ENDP

                  GetNT066EBurninTestErrorCounter PROC
;;;634    uint32_t GetNT066EBurninTestErrorCounter(void)
0011a0  e51f0194          LDR      r0,|L1.4116|
;;;635    {
;;;636        return nt066eBurninErrorCounter;
0011a4  e5900000          LDR      r0,[r0,#0]  ; nt066eBurninErrorCounter
;;;637    }
0011a8  e12fff1e          BX       lr
;;;638    #endif
                          ENDP

                  |L1.4524|
0011ac  764e5430          DCB      "vNT066ETestTask",0
0011b0  36364554
0011b4  65737454
0011b8  61736b00
                  |L1.4540|
                          DCD      vNT066ETestTask
                  |L1.4544|
0011c0  20212121          DCB      " !!! NT066E Set Power ON !!!\n",0
0011c4  204e5430
0011c8  36364520
0011cc  53657420
0011d0  506f7765
0011d4  72204f4e
0011d8  20212121
0011dc  0a00    
0011de  00                DCB      0
0011df  00                DCB      0
                  |L1.4576|
0011e0  20212121          DCB      " !!! NT066E Set Power OFF !!!\n",0
0011e4  204e5430
0011e8  36364520
0011ec  53657420
0011f0  506f7765
0011f4  72204f46
0011f8  46202121
0011fc  210a00  
0011ff  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  threadWaitTime
                          DCD      0xffffffff
                  enableTestNT066E
000004  00                DCB      0x00
                  keyDownFlag
000005  000000            DCB      0x00,0x00,0x00
                          DCD      0x00000000
00000c  00                DCB      0x00
                  initFlag
00000d  000000            DCB      0x00,0x00,0x00
                  nt066eBurninCounter
                          DCD      0x00000000
                  nt066eBurninErrorCounter
                          DCD      0x00000000
                  pI2cInterface
                          DCD      0x00000000
                  pKeyHardwareCallbackFunc
                          DCD      0x00000000
                  xNT066ESemaphore
                          DCD      0x00000000
                  intTimes
                          DCD      0x00000000
                  rErrTimes
                          DCD      0x00000000
                  wErrTimes
                          DCD      0x00000000
