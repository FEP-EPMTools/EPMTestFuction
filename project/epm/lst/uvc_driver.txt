; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\uvc_driver.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\uvc_driver.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\uvc_driver.crf ..\..\common\src\BSP\Library\USB_HOST\src_uvc\uvc_driver.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  alloc_uvc_device PROC
;;;46     
;;;47     static UVC_DEV_T *alloc_uvc_device(UDEV_T *udev)
000000  e92d4070          PUSH     {r4-r6,lr}
;;;48     {
000004  e1a06000          MOV      r6,r0
;;;49         UVC_DEV_T  *vdev;
;;;50         int        i;
;;;51     
;;;52         /*
;;;53          *  Search UVC device list check if this device already allocated.
;;;54          */
;;;55         vdev = g_vdev_list;
000008  e59f045c          LDR      r0,|L1.1132|
00000c  e5904000          LDR      r4,[r0,#0]  ; g_vdev_list
;;;56         while (vdev != NULL)
000010  ea000005          B        |L1.44|
                  |L1.20|
;;;57         {
;;;58             if (vdev->udev == udev)
000014  e5940000          LDR      r0,[r4,#0]
000018  e1500006          CMP      r0,r6
00001c  1a000001          BNE      |L1.40|
;;;59                 return vdev;
000020  e1a00004          MOV      r0,r4
                  |L1.36|
;;;60             vdev = vdev->next;
;;;61         }
;;;62     
;;;63         vdev = (UVC_DEV_T *)usbh_alloc_mem(sizeof(UVC_DEV_T));
;;;64         if (vdev == NULL)
;;;65             return NULL;
;;;66     
;;;67         memset((char *)vdev, 0, sizeof(UVC_DEV_T));
;;;68     
;;;69         for (i = 0; i < UVC_MAX_DEVICE; i++)
;;;70         {
;;;71             if (g_uvc_buff_used[i] == 0)
;;;72             {
;;;73                 vdev->in_buff = (uint8_t *)((uint32_t)&g_uvc_buff_pool[i][0] | 0x80000000);
;;;74                 g_uvc_buff_used[i] = 1;
;;;75                 break;
;;;76             }
;;;77         }
;;;78         if (vdev->in_buff == NULL)
;;;79         {
;;;80             UVC_DBGMSG("Failed to allocate UVC iso-in buffer!\n");
;;;81             usbh_free_mem(vdev, sizeof(UVC_DEV_T));
;;;82             return NULL;
;;;83         }
;;;84     
;;;85         return vdev;
;;;86     }
000024  e8bd8070          POP      {r4-r6,pc}
                  |L1.40|
000028  e5944138          LDR      r4,[r4,#0x138]        ;60
                  |L1.44|
00002c  e3540000          CMP      r4,#0                 ;56
000030  1afffff7          BNE      |L1.20|
000034  e3a00f4f          MOV      r0,#0x13c             ;63
000038  ebfffffe          BL       usbh_alloc_mem
00003c  e1a04000          MOV      r4,r0                 ;63
000040  e3540000          CMP      r4,#0                 ;64
000044  1a000001          BNE      |L1.80|
000048  e3a00000          MOV      r0,#0                 ;65
00004c  eafffff4          B        |L1.36|
                  |L1.80|
000050  e3a01f4f          MOV      r1,#0x13c             ;67
000054  e1a00004          MOV      r0,r4                 ;67
000058  ebfffffe          BL       __aeabi_memclr4
00005c  e3a05000          MOV      r5,#0                 ;69
000060  ea00000d          B        |L1.156|
                  |L1.100|
000064  e59f0404          LDR      r0,|L1.1136|
000068  e7d00005          LDRB     r0,[r0,r5]            ;71
00006c  e3500000          CMP      r0,#0                 ;71
000070  1a000008          BNE      |L1.152|
000074  e0850085          ADD      r0,r5,r5,LSL #1       ;73
000078  e59f13f4          LDR      r1,|L1.1140|
00007c  e0810780          ADD      r0,r1,r0,LSL #15      ;73
000080  e3800102          ORR      r0,r0,#0x80000000     ;73
000084  e5840114          STR      r0,[r4,#0x114]        ;73
000088  e3a00001          MOV      r0,#1                 ;74
00008c  e59f13dc          LDR      r1,|L1.1136|
000090  e7c10005          STRB     r0,[r1,r5]            ;74
000094  ea000002          B        |L1.164|
                  |L1.152|
000098  e2855001          ADD      r5,r5,#1              ;69
                  |L1.156|
00009c  e3550001          CMP      r5,#1                 ;69
0000a0  baffffef          BLT      |L1.100|
                  |L1.164|
0000a4  e1a00000          MOV      r0,r0                 ;75
0000a8  e5940114          LDR      r0,[r4,#0x114]        ;78
0000ac  e3500000          CMP      r0,#0                 ;78
0000b0  1a000004          BNE      |L1.200|
0000b4  e3a01f4f          MOV      r1,#0x13c             ;81
0000b8  e1a00004          MOV      r0,r4                 ;81
0000bc  ebfffffe          BL       usbh_free_mem
0000c0  e3a00000          MOV      r0,#0                 ;82
0000c4  eaffffd6          B        |L1.36|
                  |L1.200|
0000c8  e1a00004          MOV      r0,r4                 ;85
0000cc  eaffffd4          B        |L1.36|
;;;87     
                          ENDP

                  free_uvc_device PROC
;;;88     void  free_uvc_device(UVC_DEV_T *vdev)
0000d0  e92d4070          PUSH     {r4-r6,lr}
;;;89     {
0000d4  e1a05000          MOV      r5,r0
;;;90         int   i;
;;;91     
;;;92         if (vdev->in_buff != NULL)
0000d8  e5950114          LDR      r0,[r5,#0x114]
0000dc  e3500000          CMP      r0,#0
0000e0  0a000010          BEQ      |L1.296|
;;;93         {
;;;94             vdev->in_buff = (uint8_t *)((uint32_t)vdev->in_buff & ~0x80000000);
0000e4  e5950114          LDR      r0,[r5,#0x114]
0000e8  e3c00102          BIC      r0,r0,#0x80000000
0000ec  e5850114          STR      r0,[r5,#0x114]
;;;95             for (i = 0; i < UVC_MAX_DEVICE; i++)
0000f0  e3a04000          MOV      r4,#0
0000f4  ea000009          B        |L1.288|
                  |L1.248|
;;;96             {
;;;97                 if (vdev->in_buff == &g_uvc_buff_pool[i][0])
0000f8  e0841084          ADD      r1,r4,r4,LSL #1
0000fc  e59f2370          LDR      r2,|L1.1140|
000100  e0821781          ADD      r1,r2,r1,LSL #15
000104  e5950114          LDR      r0,[r5,#0x114]
000108  e1500001          CMP      r0,r1
00010c  1a000002          BNE      |L1.284|
;;;98                 {
;;;99                     UVC_DBGMSG("Free UVC iso-in buffer 0x%x.\n", (int)vdev->in_buff);
;;;100                    g_uvc_buff_used[i] = 0;
000110  e3a00000          MOV      r0,#0
000114  e59f1354          LDR      r1,|L1.1136|
000118  e7c10004          STRB     r0,[r1,r4]
                  |L1.284|
00011c  e2844001          ADD      r4,r4,#1              ;95
                  |L1.288|
000120  e3540001          CMP      r4,#1                 ;95
000124  bafffff3          BLT      |L1.248|
                  |L1.296|
;;;101                }
;;;102            }
;;;103        }
;;;104        usbh_free_mem(vdev, sizeof(UVC_DEV_T));
000128  e3a01f4f          MOV      r1,#0x13c
00012c  e1a00005          MOV      r0,r5
000130  ebfffffe          BL       usbh_free_mem
;;;105    }
000134  e8bd8070          POP      {r4-r6,pc}
;;;106    
                          ENDP

                  add_device_to_list PROC
;;;107    static void add_device_to_list(UVC_DEV_T *vdev)
000138  e59f232c          LDR      r2,|L1.1132|
;;;108    {
;;;109        UVC_DEV_T  *v;
;;;110    
;;;111        v = g_vdev_list;                        /* Search UVC device list. If this device     */
00013c  e5921000          LDR      r1,[r2,#0]  ; g_vdev_list
;;;112        while (v != NULL)                       /* found in list, do nothing.                 */
000140  ea000003          B        |L1.340|
                  |L1.324|
;;;113        {
;;;114            if (v == vdev)
000144  e1510000          CMP      r1,r0
000148  1a000000          BNE      |L1.336|
                  |L1.332|
;;;115                return;
;;;116            v = v->next;
;;;117        }
;;;118    
;;;119        if (g_vdev_list == NULL)                /* Add the UVC device into list.              */
;;;120        {
;;;121            vdev->next = NULL;
;;;122            g_vdev_list = vdev;
;;;123        }
;;;124        else
;;;125        {
;;;126            vdev->next = g_vdev_list;
;;;127            g_vdev_list = vdev;
;;;128        }
;;;129    }
00014c  e12fff1e          BX       lr
                  |L1.336|
000150  e5911138          LDR      r1,[r1,#0x138]        ;116
                  |L1.340|
000154  e3510000          CMP      r1,#0                 ;112
000158  1afffff9          BNE      |L1.324|
00015c  e59f2308          LDR      r2,|L1.1132|
000160  e5922000          LDR      r2,[r2,#0]            ;119  ; g_vdev_list
000164  e3520000          CMP      r2,#0                 ;119
000168  1a000004          BNE      |L1.384|
00016c  e3a02000          MOV      r2,#0                 ;121
000170  e5802138          STR      r2,[r0,#0x138]        ;121
000174  e59f22f0          LDR      r2,|L1.1132|
000178  e5820000          STR      r0,[r2,#0]            ;122  ; g_vdev_list
00017c  ea000004          B        |L1.404|
                  |L1.384|
000180  e59f22e4          LDR      r2,|L1.1132|
000184  e5922000          LDR      r2,[r2,#0]            ;126  ; g_vdev_list
000188  e5802138          STR      r2,[r0,#0x138]        ;126
00018c  e59f22d8          LDR      r2,|L1.1132|
000190  e5820000          STR      r0,[r2,#0]            ;127  ; g_vdev_list
                  |L1.404|
000194  e1a00000          MOV      r0,r0
000198  eaffffeb          B        |L1.332|
;;;130    
                          ENDP

                  remove_device_from_list PROC
;;;131    static void remove_device_from_list(UVC_DEV_T *vdev)
00019c  e1a01000          MOV      r1,r0
;;;132    {
;;;133        UVC_DEV_T  *p;
;;;134    
;;;135        if (g_vdev_list == vdev)
0001a0  e59f22c4          LDR      r2,|L1.1132|
0001a4  e5922000          LDR      r2,[r2,#0]  ; g_vdev_list
0001a8  e1520001          CMP      r2,r1
0001ac  1a000005          BNE      |L1.456|
;;;136        {
;;;137            g_vdev_list = g_vdev_list->next;
0001b0  e59f22b4          LDR      r2,|L1.1132|
0001b4  e5922000          LDR      r2,[r2,#0]  ; g_vdev_list
0001b8  e5922138          LDR      r2,[r2,#0x138]
0001bc  e59f32a8          LDR      r3,|L1.1132|
0001c0  e5832000          STR      r2,[r3,#0]  ; g_vdev_list
                  |L1.452|
;;;138            return;
;;;139        }
;;;140    
;;;141        p = g_vdev_list;
;;;142        while (p != NULL)
;;;143        {
;;;144            if (p->next == vdev)
;;;145            {
;;;146                p->next = vdev->next;
;;;147                return;
;;;148            }
;;;149            p = p->next;
;;;150        }
;;;151        UVC_DBGMSG("Warning! remove_device_from_list 0x%x not found!\n", (int)vdev);
;;;152    }
0001c4  e12fff1e          BX       lr
                  |L1.456|
0001c8  e59f229c          LDR      r2,|L1.1132|
0001cc  e5920000          LDR      r0,[r2,#0]            ;141  ; g_vdev_list
0001d0  ea000006          B        |L1.496|
                  |L1.468|
0001d4  e5902138          LDR      r2,[r0,#0x138]        ;144
0001d8  e1520001          CMP      r2,r1                 ;144
0001dc  1a000002          BNE      |L1.492|
0001e0  e5912138          LDR      r2,[r1,#0x138]        ;146
0001e4  e5802138          STR      r2,[r0,#0x138]        ;146
0001e8  eafffff5          B        |L1.452|
                  |L1.492|
0001ec  e5900138          LDR      r0,[r0,#0x138]        ;149
                  |L1.496|
0001f0  e3500000          CMP      r0,#0                 ;142
0001f4  1afffff6          BNE      |L1.468|
0001f8  e1a00000          MOV      r0,r0
0001fc  eafffff0          B        |L1.452|
;;;153    
                          ENDP

                  uvc_probe PROC
;;;154    
;;;155    static int  uvc_probe(IFACE_T *iface)
000200  e92d47f0          PUSH     {r4-r10,lr}
;;;156    {
000204  e1a05000          MOV      r5,r0
;;;157        UDEV_T         *udev = iface->udev;
000208  e5958000          LDR      r8,[r5,#0]
;;;158        ALT_IFACE_T    *aif = iface->aif;
00020c  e5959008          LDR      r9,[r5,#8]
;;;159        DESC_IF_T      *ifd;
;;;160        DESC_VC_IAD_T  *iad;
;;;161        UVC_DEV_T      *vdev;
;;;162        int            ret;
;;;163    
;;;164        ifd = aif->ifd;
000210  e5997000          LDR      r7,[r9,#0]
;;;165    
;;;166        /* Is this interface UVC class? */
;;;167        if (ifd->bInterfaceClass != USB_CLASS_VIDEO)
000214  e5d70005          LDRB     r0,[r7,#5]
000218  e350000e          CMP      r0,#0xe
00021c  0a000001          BEQ      |L1.552|
;;;168            return USBH_ERR_NOT_MATCHED;
000220  e3e00066          MVN      r0,#0x66
                  |L1.548|
;;;169    
;;;170        if (ifd->bInterfaceSubClass == UVC_SC_VIDEO_IF_COLLECT)
;;;171        {
;;;172            iad = (DESC_VC_IAD_T *)ifd;
;;;173            if (iad->bInterfaceCount != 2)
;;;174            {
;;;175                UVC_DBGMSG("Warning UVC IAD - interface count is not 2!\n");
;;;176            }
;;;177            return USBH_ERR_NOT_MATCHED;   /* Do not add to device working interface list.   */
;;;178        }
;;;179        else if (ifd->bInterfaceSubClass == UVC_SC_VIDEOCONTROL)
;;;180        {
;;;181            UVC_DBGMSG("uvc_probe - device (vid=0x%x, pid=0x%x), control interface %d.\n",
;;;182                       udev->descriptor.idVendor, udev->descriptor.idProduct, ifd->bInterfaceNumber);
;;;183    
;;;184            vdev = alloc_uvc_device(udev);
;;;185            if (vdev == NULL)
;;;186                return USBH_ERR_NOT_FOUND;
;;;187    
;;;188            vdev->udev = udev;
;;;189            iface->context = (void *)vdev;
;;;190    
;;;191            ret = uvc_parse_control_interface(vdev, iface);
;;;192            if (ret != 0)
;;;193            {
;;;194                UVC_DBGMSG("Parsing UVC control desceiptor failed! 0x%x\n", ret);
;;;195                remove_device_from_list(vdev);
;;;196                free_uvc_device(vdev);
;;;197                return -1;
;;;198            }
;;;199        }
;;;200        else if (ifd->bInterfaceSubClass == UVC_SC_VIDEOSTREAMING)
;;;201        {
;;;202            UVC_DBGMSG("uvc_probe - device (vid=0x%x, pid=0x%x), streaming interface %d.\n",
;;;203                       udev->descriptor.idVendor, udev->descriptor.idProduct, ifd->bInterfaceNumber);
;;;204    
;;;205            vdev = alloc_uvc_device(udev);
;;;206            if (vdev == NULL)
;;;207                return USBH_ERR_NOT_FOUND;
;;;208    
;;;209            vdev->udev = udev;
;;;210            iface->context = (void *)vdev;
;;;211    
;;;212            ret = uvc_parse_streaming_interface(vdev, iface);
;;;213            if (ret != 0)
;;;214            {
;;;215                UVC_DBGMSG("Parsing UVC control desceiptor failed! 0x%x\n", ret);
;;;216                remove_device_from_list(vdev);
;;;217                free_uvc_device(vdev);
;;;218                return -1;
;;;219            }
;;;220        }
;;;221        else
;;;222        {
;;;223            UVC_DBGMSG("Unsupported Video Class interface sub-class 0x%x!\n", ifd->bInterfaceSubClass);
;;;224            return -1;
;;;225        }
;;;226    
;;;227        add_device_to_list(vdev);
;;;228    
;;;229        if ((vdev->iface_ctrl != NULL) && (vdev->iface_stream != NULL))
;;;230        {
;;;231            ret = usbh_uvc_probe_control(vdev, UVC_GET_CUR, &vdev->param);
;;;232            if (ret < 0)
;;;233            {
;;;234                UVC_DBGMSG("Get Video Probe Control failed! %d\n", ret);
;;;235                remove_device_from_list(vdev);
;;;236                free_uvc_device(vdev);
;;;237                return ret;
;;;238            }
;;;239        }
;;;240    
;;;241        return 0;
;;;242    }
000224  e8bd87f0          POP      {r4-r10,pc}
                  |L1.552|
000228  e5d70006          LDRB     r0,[r7,#6]            ;170
00022c  e3500003          CMP      r0,#3                 ;170
000230  1a000002          BNE      |L1.576|
000234  e1a0a007          MOV      r10,r7                ;172
000238  e3e00066          MVN      r0,#0x66              ;177
00023c  eafffff8          B        |L1.548|
                  |L1.576|
000240  e5d70006          LDRB     r0,[r7,#6]            ;179
000244  e3500001          CMP      r0,#1                 ;179
000248  1a000014          BNE      |L1.672|
00024c  e1a00008          MOV      r0,r8                 ;184
000250  ebfffffe          BL       alloc_uvc_device
000254  e1a04000          MOV      r4,r0                 ;184
000258  e3540000          CMP      r4,#0                 ;185
00025c  1a000001          BNE      |L1.616|
000260  e3e00069          MVN      r0,#0x69              ;186
000264  eaffffee          B        |L1.548|
                  |L1.616|
000268  e5848000          STR      r8,[r4,#0]            ;188
00026c  e58544c0          STR      r4,[r5,#0x4c0]        ;189
000270  e1a01005          MOV      r1,r5                 ;191
000274  e1a00004          MOV      r0,r4                 ;191
000278  ebfffffe          BL       uvc_parse_control_interface
00027c  e1a06000          MOV      r6,r0                 ;191
000280  e3560000          CMP      r6,#0                 ;192
000284  0a00001f          BEQ      |L1.776|
000288  e1a00004          MOV      r0,r4                 ;195
00028c  ebfffffe          BL       remove_device_from_list
000290  e1a00004          MOV      r0,r4                 ;196
000294  ebfffffe          BL       free_uvc_device
000298  e3e00000          MVN      r0,#0                 ;197
00029c  eaffffe0          B        |L1.548|
                  |L1.672|
0002a0  e5d70006          LDRB     r0,[r7,#6]            ;200
0002a4  e3500002          CMP      r0,#2                 ;200
0002a8  1a000014          BNE      |L1.768|
0002ac  e1a00008          MOV      r0,r8                 ;205
0002b0  ebfffffe          BL       alloc_uvc_device
0002b4  e1a04000          MOV      r4,r0                 ;205
0002b8  e3540000          CMP      r4,#0                 ;206
0002bc  1a000001          BNE      |L1.712|
0002c0  e3e00069          MVN      r0,#0x69              ;207
0002c4  eaffffd6          B        |L1.548|
                  |L1.712|
0002c8  e5848000          STR      r8,[r4,#0]            ;209
0002cc  e58544c0          STR      r4,[r5,#0x4c0]        ;210
0002d0  e1a01005          MOV      r1,r5                 ;212
0002d4  e1a00004          MOV      r0,r4                 ;212
0002d8  ebfffffe          BL       uvc_parse_streaming_interface
0002dc  e1a06000          MOV      r6,r0                 ;212
0002e0  e3560000          CMP      r6,#0                 ;213
0002e4  0a000007          BEQ      |L1.776|
0002e8  e1a00004          MOV      r0,r4                 ;216
0002ec  ebfffffe          BL       remove_device_from_list
0002f0  e1a00004          MOV      r0,r4                 ;217
0002f4  ebfffffe          BL       free_uvc_device
0002f8  e3e00000          MVN      r0,#0                 ;218
0002fc  eaffffc8          B        |L1.548|
                  |L1.768|
000300  e3e00000          MVN      r0,#0                 ;224
000304  eaffffc6          B        |L1.548|
                  |L1.776|
000308  e1a00004          MOV      r0,r4                 ;227
00030c  ebfffffe          BL       add_device_to_list
000310  e59400d4          LDR      r0,[r4,#0xd4]         ;229
000314  e3500000          CMP      r0,#0                 ;229
000318  0a00000f          BEQ      |L1.860|
00031c  e59400d8          LDR      r0,[r4,#0xd8]         ;229
000320  e3500000          CMP      r0,#0                 ;229
000324  0a00000c          BEQ      |L1.860|
000328  e28420dc          ADD      r2,r4,#0xdc           ;231
00032c  e3a01081          MOV      r1,#0x81              ;231
000330  e1a00004          MOV      r0,r4                 ;231
000334  ebfffffe          BL       usbh_uvc_probe_control
000338  e1a06000          MOV      r6,r0                 ;231
00033c  e3560000          CMP      r6,#0                 ;232
000340  aa000005          BGE      |L1.860|
000344  e1a00004          MOV      r0,r4                 ;235
000348  ebfffffe          BL       remove_device_from_list
00034c  e1a00004          MOV      r0,r4                 ;236
000350  ebfffffe          BL       free_uvc_device
000354  e1a00006          MOV      r0,r6                 ;237
000358  eaffffb1          B        |L1.548|
                  |L1.860|
00035c  e3a00000          MOV      r0,#0                 ;241
000360  eaffffaf          B        |L1.548|
;;;243    
                          ENDP

                  uvc_disconnect PROC
;;;244    
;;;245    static void  uvc_disconnect(IFACE_T *iface)
000364  e92d4070          PUSH     {r4-r6,lr}
;;;246    {
000368  e1a06000          MOV      r6,r0
;;;247        UVC_DEV_T   *vdev;
;;;248        int         i;
;;;249    
;;;250        UVC_DBGMSG("UVC device interface %d disconnected!\n", iface->if_num);
;;;251        vdev = (UVC_DEV_T *)(iface->context);
00036c  e59644c0          LDR      r4,[r6,#0x4c0]
;;;252    
;;;253        if (vdev == NULL)
000370  e3540000          CMP      r4,#0
000374  1a000000          BNE      |L1.892|
                  |L1.888|
;;;254            return;                                     /* should have been disconnected.     */
;;;255    
;;;256        vdev->is_streaming = 0;                         /* inhibit isochronous transfer       */
;;;257    
;;;258        if (iface == vdev->iface_ctrl)
;;;259        {
;;;260            vdev->iface_ctrl = NULL;
;;;261        }
;;;262    
;;;263        if (iface == vdev->iface_stream)
;;;264        {
;;;265            for (i = 0; i < UVC_UTR_PER_STREAM; i++)
;;;266            {
;;;267                usbh_quit_utr(vdev->utr_rx[i]);          /* quit all UTRs                      */
;;;268            }
;;;269    
;;;270            for (i = 0; i < UVC_UTR_PER_STREAM; i++)    /* free all UTRs                      */
;;;271            {
;;;272                if (vdev->utr_rx[i] != NULL)
;;;273                {
;;;274                    free_utr(vdev->utr_rx[i]);
;;;275                    vdev->utr_rx[i] = NULL;
;;;276                }
;;;277            }
;;;278            vdev->iface_stream = NULL;
;;;279        }
;;;280    
;;;281        if ((vdev->iface_ctrl == NULL) && (vdev->iface_stream == NULL))
;;;282        {
;;;283            remove_device_from_list(vdev);
;;;284            free_uvc_device(vdev);
;;;285        }
;;;286    }
000378  e8bd8070          POP      {r4-r6,pc}
                  |L1.892|
00037c  e3a00000          MOV      r0,#0                 ;256
000380  e5c4010c          STRB     r0,[r4,#0x10c]        ;256
000384  e59400d4          LDR      r0,[r4,#0xd4]         ;258
000388  e1500006          CMP      r0,r6                 ;258
00038c  1a000001          BNE      |L1.920|
000390  e3a00000          MOV      r0,#0                 ;260
000394  e58400d4          STR      r0,[r4,#0xd4]         ;260
                  |L1.920|
000398  e59400d8          LDR      r0,[r4,#0xd8]         ;263
00039c  e1500006          CMP      r0,r6                 ;263
0003a0  1a000018          BNE      |L1.1032|
0003a4  e3a05000          MOV      r5,#0                 ;265
0003a8  ea000003          B        |L1.956|
                  |L1.940|
0003ac  e2841f46          ADD      r1,r4,#0x118          ;267
0003b0  e7910105          LDR      r0,[r1,r5,LSL #2]     ;267
0003b4  ebfffffe          BL       usbh_quit_utr
0003b8  e2855001          ADD      r5,r5,#1              ;265
                  |L1.956|
0003bc  e3550004          CMP      r5,#4                 ;265
0003c0  bafffff9          BLT      |L1.940|
0003c4  e3a05000          MOV      r5,#0                 ;270
0003c8  ea00000a          B        |L1.1016|
                  |L1.972|
0003cc  e2840f46          ADD      r0,r4,#0x118          ;272
0003d0  e7900105          LDR      r0,[r0,r5,LSL #2]     ;272
0003d4  e3500000          CMP      r0,#0                 ;272
0003d8  0a000005          BEQ      |L1.1012|
0003dc  e2841f46          ADD      r1,r4,#0x118          ;274
0003e0  e7910105          LDR      r0,[r1,r5,LSL #2]     ;274
0003e4  ebfffffe          BL       free_utr
0003e8  e3a00000          MOV      r0,#0                 ;275
0003ec  e2841f46          ADD      r1,r4,#0x118          ;275
0003f0  e7810105          STR      r0,[r1,r5,LSL #2]     ;275
                  |L1.1012|
0003f4  e2855001          ADD      r5,r5,#1              ;270
                  |L1.1016|
0003f8  e3550004          CMP      r5,#4                 ;270
0003fc  bafffff2          BLT      |L1.972|
000400  e3a00000          MOV      r0,#0                 ;278
000404  e58400d8          STR      r0,[r4,#0xd8]         ;278
                  |L1.1032|
000408  e59400d4          LDR      r0,[r4,#0xd4]         ;281
00040c  e3500000          CMP      r0,#0                 ;281
000410  1a000006          BNE      |L1.1072|
000414  e59400d8          LDR      r0,[r4,#0xd8]         ;281
000418  e3500000          CMP      r0,#0                 ;281
00041c  1a000003          BNE      |L1.1072|
000420  e1a00004          MOV      r0,r4                 ;283
000424  ebfffffe          BL       remove_device_from_list
000428  e1a00004          MOV      r0,r4                 ;284
00042c  ebfffffe          BL       free_uvc_device
                  |L1.1072|
000430  e1a00000          MOV      r0,r0
000434  eaffffcf          B        |L1.888|
;;;287    
                          ENDP

                  usbh_uvc_init PROC
;;;304      */
;;;305    void usbh_uvc_init(void)
000438  e92d4010          PUSH     {r4,lr}
;;;306    {
;;;307        memset(g_uvc_buff_used, 0, sizeof(g_uvc_buff_used));
00043c  e59f002c          LDR      r0,|L1.1136|
000440  e3a01000          MOV      r1,#0
000444  e5c01000          STRB     r1,[r0,#0]  ; g_uvc_buff_used
;;;308        g_vdev_list = NULL;
000448  e3a00000          MOV      r0,#0
00044c  e59f1018          LDR      r1,|L1.1132|
000450  e5810000          STR      r0,[r1,#0]  ; g_vdev_list
;;;309        usbh_register_driver(&uvc_driver);
000454  e59f001c          LDR      r0,|L1.1144|
000458  ebfffffe          BL       usbh_register_driver
;;;310    }
00045c  e8bd8010          POP      {r4,pc}
;;;311    
                          ENDP

                  usbh_uvc_get_device_list PROC
;;;320     */
;;;321    UVC_DEV_T * usbh_uvc_get_device_list(void)
000460  e59f0004          LDR      r0,|L1.1132|
;;;322    {
;;;323        return g_vdev_list;
000464  e5900000          LDR      r0,[r0,#0]  ; g_vdev_list
;;;324    }
000468  e12fff1e          BX       lr
;;;325    
                          ENDP

                  |L1.1132|
                          DCD      g_vdev_list
                  |L1.1136|
                          DCD      g_uvc_buff_used
                  |L1.1140|
                          DCD      g_uvc_buff_pool
                  |L1.1144|
                          DCD      uvc_driver

                          AREA ||.bss||, DATA, NOINIT, ALIGN=5

                  g_uvc_buff_pool
                          %        98304

                          AREA ||.data||, DATA, ALIGN=2

                  g_vdev_list
                          DCD      0x00000000
                  uvc_driver
                          DCD      uvc_probe
                          DCD      uvc_disconnect
                          DCD      0x00000000
                          DCD      0x00000000
                  g_uvc_buff_used
000014  00                DCB      0x00
