; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\userdrv.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\userdrv.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\userdrv.crf src\UserDrv\userdrv.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FakeDrvInit PROC
;;;56     /*-----------------------------------------*/
;;;57     static BOOL FakeDrvInit(BOOL testMode)      
000000  e92d4010          PUSH     {r4,lr}
;;;58     {
000004  e1a04000          MOV      r4,r0
;;;59         pUartInterface = UartGetInterface(UART_1_INTERFACE_INDEX);
000008  e3a00000          MOV      r0,#0
00000c  ebfffffe          BL       UartGetInterface
000010  e59f11bc          LDR      r1,|L1.468|
000014  e5810000          STR      r0,[r1,#0]  ; pUartInterface
;;;60         if(pUartInterface != NULL)
000018  e2810000          ADD      r0,r1,#0
00001c  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000020  e3500000          CMP      r0,#0
000024  0a000009          BEQ      |L1.80|
;;;61         {
;;;62             pUartInterface->setPowerFunc(FALSE);
000028  e2810000          ADD      r0,r1,#0
00002c  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000030  e5901010          LDR      r1,[r0,#0x10]
000034  e3a00000          MOV      r0,#0
000038  e12fff31          BLX      r1
;;;63             pUartInterface->setRS232PowerFunc(FALSE);        
00003c  e59f0190          LDR      r0,|L1.468|
000040  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000044  e5901014          LDR      r1,[r0,#0x14]
000048  e3a00000          MOV      r0,#0
00004c  e12fff31          BLX      r1
                  |L1.80|
;;;64         }
;;;65         
;;;66         pUartInterface = UartGetInterface(UART_3_INTERFACE_INDEX);
000050  e3a00002          MOV      r0,#2
000054  ebfffffe          BL       UartGetInterface
000058  e59f1174          LDR      r1,|L1.468|
00005c  e5810000          STR      r0,[r1,#0]  ; pUartInterface
;;;67         if(pUartInterface != NULL)
000060  e2810000          ADD      r0,r1,#0
000064  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000068  e3500000          CMP      r0,#0
00006c  0a000009          BEQ      |L1.152|
;;;68         {
;;;69             pUartInterface->setPowerFunc(FALSE);
000070  e2810000          ADD      r0,r1,#0
000074  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000078  e5901010          LDR      r1,[r0,#0x10]
00007c  e3a00000          MOV      r0,#0
000080  e12fff31          BLX      r1
;;;70             pUartInterface->setRS232PowerFunc(FALSE);        
000084  e59f0148          LDR      r0,|L1.468|
000088  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
00008c  e5901014          LDR      r1,[r0,#0x14]
000090  e3a00000          MOV      r0,#0
000094  e12fff31          BLX      r1
                  |L1.152|
;;;71         }
;;;72         
;;;73         pUartInterface = UartGetInterface(UART_7_INTERFACE_INDEX);
000098  e3a00004          MOV      r0,#4
00009c  ebfffffe          BL       UartGetInterface
0000a0  e59f112c          LDR      r1,|L1.468|
0000a4  e5810000          STR      r0,[r1,#0]  ; pUartInterface
;;;74         if(pUartInterface != NULL)
0000a8  e2810000          ADD      r0,r1,#0
0000ac  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
0000b0  e3500000          CMP      r0,#0
0000b4  0a000009          BEQ      |L1.224|
;;;75         {
;;;76             pUartInterface->setPowerFunc(FALSE);
0000b8  e2810000          ADD      r0,r1,#0
0000bc  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
0000c0  e5901010          LDR      r1,[r0,#0x10]
0000c4  e3a00000          MOV      r0,#0
0000c8  e12fff31          BLX      r1
;;;77             pUartInterface->setRS232PowerFunc(FALSE);        
0000cc  e59f0100          LDR      r0,|L1.468|
0000d0  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
0000d4  e5901014          LDR      r1,[r0,#0x14]
0000d8  e3a00000          MOV      r0,#0
0000dc  e12fff31          BLX      r1
                  |L1.224|
;;;78         }
;;;79         #if(ENABLE_MODEM_AGENT_DRIVER)
;;;80         
;;;81         #else
;;;82         pUartInterface = UartGetInterface(UART_4_INTERFACE_INDEX);
;;;83         if(pUartInterface != NULL)
;;;84         {
;;;85             pUartInterface->setPowerFunc(FALSE);
;;;86             pUartInterface->setRS232PowerFunc(FALSE);        
;;;87         }
;;;88         #endif
;;;89         /*
;;;90         //12V enable pin
;;;91         outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<24)) | (0x0u<<24));  
;;;92         GPIO_OpenBit(GPIOG, BIT6, DIR_OUTPUT, NO_PULL_UP); 
;;;93         GPIO_ClrBit(GPIOG, BIT6);
;;;94         */  // not need close 12V power 20200507 by Steven 
;;;95         #if(SUPPORT_HK_10_HW)  
;;;96         //Sensor board DC5V GPB6
;;;97         outpw(REG_SYS_GPB_MFPL,(inpw(REG_SYS_GPB_MFPL) & ~(0xF<<24)) | (0x0<<24));
0000e0  e3a0020b          MOV      r0,#0xb0000000
0000e4  e5900078          LDR      r0,[r0,#0x78]
0000e8  e3c0040f          BIC      r0,r0,#0xf000000
0000ec  e3a0120b          MOV      r1,#0xb0000000
0000f0  e5810078          STR      r0,[r1,#0x78]
;;;98         GPIO_OpenBit(GPIOB, BIT6, DIR_OUTPUT, NO_PULL_UP); 
0000f4  e3a03000          MOV      r3,#0
0000f8  e3a02001          MOV      r2,#1
0000fc  e3a01040          MOV      r1,#0x40
000100  e1a00001          MOV      r0,r1
000104  ebfffffe          BL       GPIO_OpenBit
;;;99         GPIO_ClrBit(GPIOB, BIT6);  
000108  e3a01040          MOV      r1,#0x40
00010c  e1a00001          MOV      r0,r1
000110  ebfffffe          BL       GPIO_ClrBit
;;;100        #endif
;;;101        
;;;102        return TRUE;
000114  e3a00001          MOV      r0,#1
;;;103    }    
000118  e8bd8010          POP      {r4,pc}
;;;104                                                                
                          ENDP

                  userDrvInit PROC
;;;105    static BOOL userDrvInit(BOOL testModeFlag)
00011c  e92d4070          PUSH     {r4-r6,lr}
;;;106    {
000120  e1a05000          MOV      r5,r0
;;;107        int i;
;;;108        sysprintf("  ==> userDrvInit start...\r\n");
000124  e28f00ac          ADR      r0,|L1.472|
000128  ebfffffe          BL       sysprintf
;;;109    
;;;110        for(i = 0; ; i++)
00012c  e3a04000          MOV      r4,#0
000130  e1a00000          MOV      r0,r0
                  |L1.308|
;;;111        {
;;;112            if(mUserDrvInitFunctionList[i].func != NULL)
000134  e59f00bc          LDR      r0,|L1.504|
000138  e0800184          ADD      r0,r0,r4,LSL #3
00013c  e5900004          LDR      r0,[r0,#4]
000140  e3500000          CMP      r0,#0
000144  0a000013          BEQ      |L1.408|
;;;113            {
;;;114                if(mUserDrvInitFunctionList[i].func(testModeFlag))
000148  e59f00a8          LDR      r0,|L1.504|
00014c  e0800184          ADD      r0,r0,r4,LSL #3
000150  e5901004          LDR      r1,[r0,#4]
000154  e1a00005          MOV      r0,r5
000158  e12fff31          BLX      r1
00015c  e3500000          CMP      r0,#0
000160  0a000005          BEQ      |L1.380|
;;;115                {
;;;116                    sysprintf("  = [%02d]: %s OK... =\r\n", i, mUserDrvInitFunctionList[i].drvName);
000164  e59f008c          LDR      r0,|L1.504|
000168  e7902184          LDR      r2,[r0,r4,LSL #3]
00016c  e1a01004          MOV      r1,r4
000170  e28f0084          ADR      r0,|L1.508|
000174  ebfffffe          BL       sysprintf
000178  ea000007          B        |L1.412|
                  |L1.380|
;;;117                }
;;;118                else
;;;119                {
;;;120                    sysprintf("  = [%02d]: %s ERROR... =\r\n", i, mUserDrvInitFunctionList[i].drvName);
00017c  e59f0074          LDR      r0,|L1.504|
000180  e7902184          LDR      r2,[r0,r4,LSL #3]
000184  e1a01004          MOV      r1,r4
000188  e28f0088          ADR      r0,|L1.536|
00018c  ebfffffe          BL       sysprintf
;;;121                    return FALSE;
000190  e3a00000          MOV      r0,#0
                  |L1.404|
;;;122                }
;;;123            }
;;;124            else
;;;125            {
;;;126                
;;;127                break;
;;;128            }
;;;129        }    
;;;130        sysprintf("  ==> userDrvInit end...\r\n");
;;;131        return TRUE;
;;;132    }
000194  e8bd8070          POP      {r4-r6,pc}
                  |L1.408|
000198  ea000001          B        |L1.420|
                  |L1.412|
00019c  e2844001          ADD      r4,r4,#1              ;110
0001a0  eaffffe3          B        |L1.308|
                  |L1.420|
0001a4  e1a00000          MOV      r0,r0                 ;127
0001a8  e28f0084          ADR      r0,|L1.564|
0001ac  ebfffffe          BL       sysprintf
0001b0  e3a00001          MOV      r0,#1                 ;131
0001b4  eafffff6          B        |L1.404|
;;;133    /*-----------------------------------------*/
                          ENDP

                  UserDrvInit PROC
;;;135    /*-----------------------------------------*/
;;;136    BOOL UserDrvInit(BOOL testModeFlag)
0001b8  e92d4010          PUSH     {r4,lr}
;;;137    {
0001bc  e1a04000          MOV      r4,r0
;;;138        sysprintf("UserDrvInit!!\n");
0001c0  e28f0088          ADR      r0,|L1.592|
0001c4  ebfffffe          BL       sysprintf
;;;139        return userDrvInit(testModeFlag);
0001c8  e1a00004          MOV      r0,r4
0001cc  ebfffffe          BL       userDrvInit
;;;140    }
0001d0  e8bd8010          POP      {r4,pc}
;;;141    
                          ENDP

                  |L1.468|
                          DCD      pUartInterface
                  |L1.472|
0001d8  20203d3d          DCB      "  ==> userDrvInit start...\r\n",0
0001dc  3e207573
0001e0  65724472
0001e4  76496e69
0001e8  74207374
0001ec  6172742e
0001f0  2e2e0d0a
0001f4  00      
0001f5  00                DCB      0
0001f6  00                DCB      0
0001f7  00                DCB      0
                  |L1.504|
                          DCD      mUserDrvInitFunctionList
                  |L1.508|
0001fc  20203d20          DCB      "  = [%02d]: %s OK... =\r\n",0
000200  5b253032
000204  645d3a20
000208  2573204f
00020c  4b2e2e2e
000210  203d0d0a
000214  00      
000215  00                DCB      0
000216  00                DCB      0
000217  00                DCB      0
                  |L1.536|
000218  20203d20          DCB      "  = [%02d]: %s ERROR... =\r\n",0
00021c  5b253032
000220  645d3a20
000224  25732045
000228  52524f52
00022c  2e2e2e20
000230  3d0d0a00
                  |L1.564|
000234  20203d3d          DCB      "  ==> userDrvInit end...\r\n",0
000238  3e207573
00023c  65724472
000240  76496e69
000244  7420656e
000248  642e2e2e
00024c  0d0a00  
00024f  00                DCB      0
                  |L1.592|
000250  55736572          DCB      "UserDrvInit!!\n",0
000254  44727649
000258  6e697421
00025c  210a00  
00025f  00                DCB      0

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  46616b65          DCB      "FakeDrvInit",0
000004  44727649
000008  6e697400
00000c  42757a7a          DCB      "BuzzerDrv",0
000010  65724472
000014  7600    
000016  4c656444          DCB      "LedDrv",0
00001a  727600  
00001d  42617474          DCB      "BatteryDrv",0
000021  65727944
000025  727600  
000028  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  mUserDrvInitFunctionList
                          DCD      ||.conststring||
                          DCD      FakeDrvInit
                          DCD      ||.conststring||+0xc
                          DCD      BuzzerDrvInit
                          DCD      ||.conststring||+0x16
                          DCD      LedDrvInit
                          DCD      ||.conststring||+0x1d
                          DCD      BatteryDrvInit
                          DCD      ||.conststring||+0x28
                          DCD      0x00000000
                  pUartInterface
                          DCD      0x00000000
