; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\yaffs_packedtags1.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\yaffs_packedtags1.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\yaffs_packedtags1.crf ..\..\common\src\BSP\ThirdParty\yaffs2\yaffs_packedtags1.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  yaffs_pack_tags1 PROC
;;;24     
;;;25     void yaffs_pack_tags1(struct yaffs_packed_tags1 *pt,
000000  e5902000          LDR      r2,[r0,#0]
;;;26     		      const struct yaffs_ext_tags *t)
;;;27     {
;;;28     	pt->chunk_id = t->chunk_id;
000004  e1a02a22          LSR      r2,r2,#20
000008  e1a02a02          LSL      r2,r2,#20
00000c  e5913008          LDR      r3,[r1,#8]
000010  e1a03603          LSL      r3,r3,#12
000014  e1a03623          LSR      r3,r3,#12
000018  e1822003          ORR      r2,r2,r3
00001c  e5802000          STR      r2,[r0,#0]
;;;29     	pt->serial_number = t->serial_number;
000020  e5902000          LDR      r2,[r0,#0]
000024  e3c22603          BIC      r2,r2,#0x300000
000028  e1d131bc          LDRH     r3,[r1,#0x1c]
00002c  e3a0c603          MOV      r12,#0x300000
000030  e00c3a03          AND      r3,r12,r3,LSL #20
000034  e1822003          ORR      r2,r2,r3
000038  e5802000          STR      r2,[r0,#0]
;;;30     	pt->n_bytes = t->n_bytes;
00003c  e5902000          LDR      r2,[r0,#0]
000040  e1a02502          LSL      r2,r2,#10
000044  e1a02522          LSR      r2,r2,#10
000048  e1d130bc          LDRH     r3,[r1,#0xc]
00004c  e24cc607          SUB      r12,r12,#0x700000
000050  e00c3b03          AND      r3,r12,r3,LSL #22
000054  e1822003          ORR      r2,r2,r3
000058  e5802000          STR      r2,[r0,#0]
;;;31     	pt->obj_id = t->obj_id;
00005c  e5902004          LDR      r2,[r0,#4]
000060  e002224c          AND      r2,r2,r12,ASR #4
000064  e5913004          LDR      r3,[r1,#4]
000068  e1c3324c          BIC      r3,r3,r12,ASR #4
00006c  e1822003          ORR      r2,r2,r3
000070  e5802004          STR      r2,[r0,#4]
;;;32     	pt->ecc = 0;
000074  e5902004          LDR      r2,[r0,#4]
000078  e3c2230f          BIC      r2,r2,#0x3c000000
00007c  e3c227ff          BIC      r2,r2,#0x3fc0000
000080  e5802004          STR      r2,[r0,#4]
;;;33     	pt->deleted = (t->is_deleted) ? 0 : 1;
000084  e5902004          LDR      r2,[r0,#4]
000088  e3c22101          BIC      r2,r2,#0x40000000
00008c  e5913018          LDR      r3,[r1,#0x18]
000090  e3530000          CMP      r3,#0
000094  1a000001          BNE      |L1.160|
000098  e3a03001          MOV      r3,#1
00009c  ea000000          B        |L1.164|
                  |L1.160|
0000a0  e3a03000          MOV      r3,#0
                  |L1.164|
0000a4  e3a0c101          MOV      r12,#0x40000000
0000a8  e00c3f03          AND      r3,r12,r3,LSL #30
0000ac  e1822003          ORR      r2,r2,r3
0000b0  e5802004          STR      r2,[r0,#4]
;;;34     	pt->unused_stuff = 0;
0000b4  e5902004          LDR      r2,[r0,#4]
0000b8  e3c22102          BIC      r2,r2,#0x80000000
0000bc  e5802004          STR      r2,[r0,#4]
;;;35     	pt->should_be_ff = 0xffffffff;
0000c0  e3e02000          MVN      r2,#0
0000c4  e5802008          STR      r2,[r0,#8]
;;;36     }
0000c8  e12fff1e          BX       lr
;;;37     
                          ENDP

                  yaffs_unpack_tags1 PROC
;;;38     void yaffs_unpack_tags1(struct yaffs_ext_tags *t,
0000cc  e92d4070          PUSH     {r4-r6,lr}
;;;39     			const struct yaffs_packed_tags1 *pt)
;;;40     {
0000d0  e1a04000          MOV      r4,r0
0000d4  e1a05001          MOV      r5,r1
;;;41     
;;;42     	if (memcmp(all_ff, pt, sizeof(struct yaffs_packed_tags1))) {
0000d8  e3a0200c          MOV      r2,#0xc
0000dc  e1a01005          MOV      r1,r5
0000e0  e59f0098          LDR      r0,|L1.384|
0000e4  ebfffffe          BL       memcmp
0000e8  e3500000          CMP      r0,#0
0000ec  0a00001f          BEQ      |L1.368|
;;;43     		t->block_bad = 0;
0000f0  e3a00000          MOV      r0,#0
0000f4  e5840014          STR      r0,[r4,#0x14]
;;;44     		if (pt->should_be_ff != 0xffffffff)
0000f8  e5950008          LDR      r0,[r5,#8]
0000fc  e3700001          CMN      r0,#1
000100  0a000001          BEQ      |L1.268|
;;;45     			t->block_bad = 1;
000104  e3a00001          MOV      r0,#1
000108  e5840014          STR      r0,[r4,#0x14]
                  |L1.268|
;;;46     		t->chunk_used = 1;
00010c  e3a00001          MOV      r0,#1
000110  e5840000          STR      r0,[r4,#0]
;;;47     		t->obj_id = pt->obj_id;
000114  e5950004          LDR      r0,[r5,#4]
000118  e1a00700          LSL      r0,r0,#14
00011c  e1a00720          LSR      r0,r0,#14
000120  e5840004          STR      r0,[r4,#4]
;;;48     		t->chunk_id = pt->chunk_id;
000124  e5950000          LDR      r0,[r5,#0]
000128  e1a00600          LSL      r0,r0,#12
00012c  e1a00620          LSR      r0,r0,#12
000130  e5840008          STR      r0,[r4,#8]
;;;49     		t->n_bytes = pt->n_bytes;
000134  e5950000          LDR      r0,[r5,#0]
000138  e1a00b20          LSR      r0,r0,#22
00013c  e584000c          STR      r0,[r4,#0xc]
;;;50     		t->ecc_result = YAFFS_ECC_RESULT_NO_ERROR;
000140  e3a00001          MOV      r0,#1
000144  e5c40010          STRB     r0,[r4,#0x10]
;;;51     		t->is_deleted = (pt->deleted) ? 0 : 1;
000148  e5950004          LDR      r0,[r5,#4]
00014c  e1a00080          LSL      r0,r0,#1
000150  e3a01001          MOV      r1,#1
000154  e0210fa0          EOR      r0,r1,r0,LSR #31
000158  e5840018          STR      r0,[r4,#0x18]
;;;52     		t->serial_number = pt->serial_number;
00015c  e5950000          LDR      r0,[r5,#0]
000160  e1a00500          LSL      r0,r0,#10
000164  e1a00f20          LSR      r0,r0,#30
000168  e584001c          STR      r0,[r4,#0x1c]
00016c  ea000002          B        |L1.380|
                  |L1.368|
;;;53     	} else {
;;;54     		memset(t, 0, sizeof(struct yaffs_ext_tags));
000170  e3a01048          MOV      r1,#0x48
000174  e1a00004          MOV      r0,r4
000178  ebfffffe          BL       __aeabi_memclr4
                  |L1.380|
;;;55     	}
;;;56     }
00017c  e8bd8070          POP      {r4-r6,pc}
                          ENDP

                  |L1.384|
                          DCD      all_ff

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  all_ff
000000  ffffffff          DCB      0xff,0xff,0xff,0xff
000004  ffffffff          DCB      0xff,0xff,0xff,0xff
000008  ffffffff          DCB      0xff,0xff,0xff,0xff
00000c  ffffffff          DCB      0xff,0xff,0xff,0xff
000010  ffffffff          DCB      0xff,0xff,0xff,0xff
