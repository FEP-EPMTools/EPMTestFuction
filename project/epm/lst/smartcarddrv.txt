; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\smartcarddrv.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\smartcarddrv.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\smartcarddrv.crf src\userdrv\smartcarddrv.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SC0_IRQHandler PROC
                  |L1.0|
;;;52       */
;;;53     void SC0_IRQHandler(void)
000000  e92d4010          PUSH     {r4,lr}
;;;54     {
;;;55         // Please don't remove any of the function calls below
;;;56     
;;;57         // No need to check CD event for SIM card.
;;;58         //if(SCLIB_CheckCDEvent(0))
;;;59         //    return; // Card insert/remove event occurred, no need to check other event...
;;;60         SCLIB_CheckTimeOutEvent(0);
000004  e3a00000          MOV      r0,#0
000008  ebfffffe          BL       SCLIB_CheckTimeOutEvent
;;;61         SCLIB_CheckTxRxEvent(0);
00000c  e3a00000          MOV      r0,#0
000010  ebfffffe          BL       SCLIB_CheckTxRxEvent
;;;62         SCLIB_CheckErrorEvent(0);
000014  e3a00000          MOV      r0,#0
000018  ebfffffe          BL       SCLIB_CheckErrorEvent
;;;63     
;;;64         return;
;;;65     }
00001c  e8bd8010          POP      {r4,pc}
;;;66     
                          ENDP

                  smartcardGetCardInfo PROC
;;;68     #if (ENABLE_BURNIN_TESTER)
;;;69     static BOOL smartcardGetCardInfo(void)
000020  e92d4030          PUSH     {r4,r5,lr}
;;;70     {
000024  e24dd02c          SUB      sp,sp,#0x2c
;;;71         int retval;
;;;72         int i;
;;;73         SCLIB_CARD_INFO_T cardInfo;
;;;74         // Activate slot 0
;;;75         retval = SCLIB_Activate(0, FALSE);
000028  e3a01000          MOV      r1,#0
00002c  e1a00001          MOV      r0,r1
000030  ebfffffe          BL       SCLIB_Activate
000034  e1a05000          MOV      r5,r0
;;;76     
;;;77         if (retval != SCLIB_SUCCESS) 
000038  e3550000          CMP      r5,#0
00003c  0a000004          BEQ      |L1.84|
;;;78         {
;;;79             sysprintf("!!! SIM card activate failed !!!\n");
000040  e28f0f7a          ADR      r0,|L1.560|
000044  ebfffffe          BL       sysprintf
;;;80             return FALSE;
000048  e3a00000          MOV      r0,#0
                  |L1.76|
00004c  e28dd02c          ADD      sp,sp,#0x2c
;;;81         }
;;;82         else
;;;83         {
;;;84             sysprintf("SIM card activate OK\n");
;;;85         }
;;;86         
;;;87         retval = SCLIB_GetCardInfo(0, &cardInfo);
;;;88         SCLIB_Deactivate(0);
;;;89         if (retval != SCLIB_SUCCESS) 
;;;90         {
;;;91             sysprintf("!!! SCLIB_GetCardInfo failed !!!\n");
;;;92             return FALSE;
;;;93         }
;;;94         else
;;;95         {
;;;96             sysprintf("SCLIB_GetCardInfo OK\n");
;;;97             sysprintf("cardInfo.T = %d(0x%04x), cardInfo.ATR_Len = %d\n", cardInfo.T, cardInfo.T, cardInfo.ATR_Len);
;;;98             for (i = 0; i < cardInfo.ATR_Len; i++) {
;;;99                  sysprintf("%02x ", cardInfo.ATR_Buf[i]);
;;;100            }
;;;101            sysprintf("\n");
;;;102        }
;;;103        return TRUE;
;;;104    }
000050  e8bd8030          POP      {r4,r5,pc}
                  |L1.84|
000054  e28f0f7e          ADR      r0,|L1.596|
000058  ebfffffe          BL       sysprintf
00005c  e28d1004          ADD      r1,sp,#4              ;87
000060  e3a00000          MOV      r0,#0                 ;87
000064  ebfffffe          BL       SCLIB_GetCardInfo
000068  e1a05000          MOV      r5,r0                 ;87
00006c  e3a00000          MOV      r0,#0                 ;88
000070  ebfffffe          BL       SCLIB_Deactivate
000074  e3550000          CMP      r5,#0                 ;89
000078  0a000003          BEQ      |L1.140|
00007c  e28f0f7a          ADR      r0,|L1.620|
000080  ebfffffe          BL       sysprintf
000084  e3a00000          MOV      r0,#0                 ;92
000088  eaffffef          B        |L1.76|
                  |L1.140|
00008c  e28f0f7f          ADR      r0,|L1.656|
000090  ebfffffe          BL       sysprintf
000094  e99d000c          LDMIB    sp,{r2,r3}            ;97
000098  e1a01002          MOV      r1,r2                 ;97
00009c  e28f0f81          ADR      r0,|L1.680|
0000a0  ebfffffe          BL       sysprintf
0000a4  e3a04000          MOV      r4,#0                 ;98
0000a8  ea000004          B        |L1.192|
                  |L1.172|
0000ac  e28d000c          ADD      r0,sp,#0xc            ;99
0000b0  e7d01004          LDRB     r1,[r0,r4]            ;99
0000b4  e28f0f87          ADR      r0,|L1.728|
0000b8  ebfffffe          BL       sysprintf
0000bc  e2844001          ADD      r4,r4,#1              ;98
                  |L1.192|
0000c0  e59d0008          LDR      r0,[sp,#8]            ;98
0000c4  e1500004          CMP      r0,r4                 ;98
0000c8  8afffff7          BHI      |L1.172|
0000cc  e28f0f5f          ADR      r0,|L1.592|
0000d0  ebfffffe          BL       sysprintf
0000d4  e3a00001          MOV      r0,#1                 ;103
0000d8  eaffffdb          B        |L1.76|
;;;105    #endif
                          ENDP

                  vSmartCardTestTask PROC
;;;107    #if (ENABLE_BURNIN_TESTER)
;;;108    static void vSmartCardTestTask(void *pvParameters)
0000dc  ebfffffe          BL       GetCurrentUTCTime
;;;109    {
;;;110        time_t lastTime = GetCurrentUTCTime();
0000e0  e1a06000          MOV      r6,r0
;;;111        time_t currentTime;
;;;112        BOOL testLoop = FALSE;
0000e4  e3a07000          MOV      r7,#0
;;;113        BOOL status;
;;;114        terninalPrintf("vSmartCardTestTask Going...\r\n");
0000e8  e28f0e1f          ADR      r0,|L1.736|
0000ec  ebfffffe          BL       terninalPrintf
;;;115        while (TRUE)
0000f0  ea000022          B        |L1.384|
                  |L1.244|
;;;116        {
;;;117            if (GetPrepareStopBurninFlag())
0000f4  ebfffffe          BL       GetPrepareStopBurninFlag
0000f8  e3500000          CMP      r0,#0
0000fc  0a000003          BEQ      |L1.272|
;;;118            {
;;;119                terninalPrintf("vSmartCardTestTask Terminated !!\r\n");
000100  e28f0f7e          ADR      r0,|L1.768|
000104  ebfffffe          BL       terninalPrintf
;;;120                vTaskDelete(NULL);
000108  e3a00000          MOV      r0,#0
00010c  ebfffffe          BL       vTaskDelete
                  |L1.272|
;;;121            }
;;;122            currentTime = GetCurrentUTCTime();
000110  ebfffffe          BL       GetCurrentUTCTime
000114  e1a04000          MOV      r4,r0
;;;123            if ((currentTime - lastTime) > BURNIN_SMARTCARD_INTERVAL)
000118  e0440006          SUB      r0,r4,r6
00011c  e350000a          CMP      r0,#0xa
000120  9a000001          BLS      |L1.300|
;;;124            {
;;;125                //terninalPrintf("vSmartCardTestTask heartbeat.\r\n");
;;;126                lastTime = currentTime;
000124  e1a06004          MOV      r6,r4
;;;127                testLoop = TRUE;
000128  e3a07001          MOV      r7,#1
                  |L1.300|
;;;128            }
;;;129            if (!testLoop)
00012c  e3570000          CMP      r7,#0
000130  1a000002          BNE      |L1.320|
;;;130            {
;;;131                vTaskDelay(100 / portTICK_RATE_MS);
000134  e3a0000a          MOV      r0,#0xa
000138  ebfffffe          BL       vTaskDelay
;;;132                continue;
00013c  ea00000f          B        |L1.384|
                  |L1.320|
;;;133            }
;;;134            testLoop = FALSE;
000140  e3a07000          MOV      r7,#0
;;;135            status = smartcardGetCardInfo();
000144  ebfffffe          BL       smartcardGetCardInfo
000148  e1a05000          MOV      r5,r0
;;;136            smartcardBurninCounter++;
00014c  e59f01d0          LDR      r0,|L1.804|
000150  e5900000          LDR      r0,[r0,#0]  ; smartcardBurninCounter
000154  e2800001          ADD      r0,r0,#1
000158  e59f11c4          LDR      r1,|L1.804|
00015c  e5810000          STR      r0,[r1,#0]  ; smartcardBurninCounter
;;;137            if (!status) {
000160  e3550000          CMP      r5,#0
000164  1a000004          BNE      |L1.380|
;;;138                smartcardBurninErrorCounter++;
000168  e59f01b8          LDR      r0,|L1.808|
00016c  e5900000          LDR      r0,[r0,#0]  ; smartcardBurninErrorCounter
000170  e2800001          ADD      r0,r0,#1
000174  e59f11ac          LDR      r1,|L1.808|
000178  e5810000          STR      r0,[r1,#0]  ; smartcardBurninErrorCounter
                  |L1.380|
00017c  e1a00000          MOV      r0,r0                 ;132
                  |L1.384|
000180  eaffffdb          B        |L1.244|
;;;139            }
;;;140            //terninalPrintf("vSmartCardTestTask, status=%d\r\n", status);
;;;141        }
;;;142    }
;;;143    #endif
                          ENDP

                  SmartCardDrvInit PROC
;;;150    /*-----------------------------------------*/
;;;151    BOOL SmartCardDrvInit(BOOL testModeFlag)
000184  e92d4070          PUSH     {r4-r6,lr}
;;;152    {
000188  e24dd028          SUB      sp,sp,#0x28
00018c  e1a06000          MOV      r6,r0
;;;153        int retval;
;;;154        int i;
;;;155        SCLIB_CARD_INFO_T cardInfo;
;;;156        // enable smartcard 0 clock and multi function pin
;;;157        outpw(REG_CLK_PCLKEN1, inpw(REG_CLK_PCLKEN1) | 0x00001000);
000190  e3a0020b          MOV      r0,#0xb0000000
000194  e590021c          LDR      r0,[r0,#0x21c]
000198  e3800a01          ORR      r0,r0,#0x1000
00019c  e3a0120b          MOV      r1,#0xb0000000
0001a0  e581021c          STR      r0,[r1,#0x21c]
;;;158        outpw(REG_CLK_DIVCTL6, inpw(REG_CLK_DIVCTL6) | 0x02000000);
0001a4  e3a0020b          MOV      r0,#0xb0000000
0001a8  e5900238          LDR      r0,[r0,#0x238]
0001ac  e3800402          ORR      r0,r0,#0x2000000
0001b0  e5810238          STR      r0,[r1,#0x238]
;;;159    
;;;160        // G10: RST, G11: CLK, G12: DAT, G13: PWR, G14: CD
;;;161        outpw(REG_SYS_GPG_MFPH, (inpw(REG_SYS_GPG_MFPH) & ~0x0FFFFF00) | 0x0AAAAA00);
0001b4  e3a0020b          MOV      r0,#0xb0000000
0001b8  e59000a4          LDR      r0,[r0,#0xa4]
0001bc  e59f1168          LDR      r1,|L1.812|
0001c0  e0000001          AND      r0,r0,r1
0001c4  e59f1164          LDR      r1,|L1.816|
0001c8  e1800001          ORR      r0,r0,r1
0001cc  e3a0120b          MOV      r1,#0xb0000000
0001d0  e58100a4          STR      r0,[r1,#0xa4]
;;;162    
;;;163        //sysprintf("\nThis sample code reads phone book from SIM card\n");
;;;164    
;;;165        // Open smartcard interface 0. CD pin state ignore and PWR pin high raise VCC pin to card
;;;166        SC_Open(0, SC_PIN_STATE_IGNORE,  SC_PIN_STATE_LOW/*SC_PIN_STATE_HIGH*/);
0001d4  e3a02000          MOV      r2,#0
0001d8  e3e01000          MVN      r1,#0
0001dc  e1a00002          MOV      r0,r2
0001e0  ebfffffe          BL       SC_Open
;;;167        sysInstallISR(HIGH_LEVEL_SENSITIVE | IRQ_LEVEL_1, SC0_IRQn, (PVOID)SC0_IRQHandler);
0001e4  e24f2f7b          ADR      r2,|L1.0|
0001e8  e3a01037          MOV      r1,#0x37
0001ec  e3a00041          MOV      r0,#0x41
0001f0  ebfffffe          BL       sysInstallISR
;;;168        sysSetLocalInterrupt(ENABLE_IRQ);
0001f4  e3a0007f          MOV      r0,#0x7f
0001f8  ebfffffe          BL       sysSetLocalInterrupt
;;;169        sysEnableInterrupt(SC0_IRQn);
0001fc  e3a00037          MOV      r0,#0x37
000200  ebfffffe          BL       sysEnableInterrupt
;;;170    
;;;171        // Ignore CD pin for SIM card
;;;172        //while(SC_IsCardInserted(0) == FALSE);
;;;173        // Activate slot 0
;;;174        retval = SCLIB_Activate(0, FALSE);
000204  e3a01000          MOV      r1,#0
000208  e1a00001          MOV      r0,r1
00020c  ebfffffe          BL       SCLIB_Activate
000210  e1a05000          MOV      r5,r0
;;;175    
;;;176        if(retval != SCLIB_SUCCESS) 
000214  e3550000          CMP      r5,#0
000218  0a000045          BEQ      |L1.820|
;;;177        {
;;;178            sysprintf("!!! SIM card activate failed !!!\n");
00021c  e28f000c          ADR      r0,|L1.560|
000220  ebfffffe          BL       sysprintf
;;;179            return FALSE;
000224  e3a00000          MOV      r0,#0
                  |L1.552|
000228  e28dd028          ADD      sp,sp,#0x28
;;;180        }
;;;181        else
;;;182        {
;;;183            sysprintf("SIM card activate OK\n");
;;;184        }
;;;185        
;;;186        retval = SCLIB_GetCardInfo(0, &cardInfo);
;;;187        if(retval != SCLIB_SUCCESS) 
;;;188        {
;;;189            sysprintf("!!! SCLIB_GetCardInfo failed !!!\n");
;;;190            
;;;191        }
;;;192        else
;;;193        {
;;;194            sysprintf("SCLIB_GetCardInfo OK\n");
;;;195            sysprintf("cardInfo.T = %d(0x%04x), cardInfo.ATR_Len = %d\n", cardInfo.T, cardInfo.T, cardInfo.ATR_Len);
;;;196            for(i = 0; i < cardInfo.ATR_Len; i++)
;;;197                 sysprintf("%02x ", cardInfo.ATR_Buf[i]);
;;;198    
;;;199            sysprintf("\n");
;;;200        }
;;;201        return TRUE;
;;;202    }
00022c  e8bd8070          POP      {r4-r6,pc}
                  |L1.560|
000230  21212120          DCB      "!!! SIM card activate failed !!!"
000234  53494d20
000238  63617264
00023c  20616374
000240  69766174
000244  65206661
000248  696c6564
00024c  20212121
                  |L1.592|
000250  0a00              DCB      "\n",0
000252  00                DCB      0
000253  00                DCB      0
                  |L1.596|
000254  53494d20          DCB      "SIM card activate OK\n",0
000258  63617264
00025c  20616374
000260  69766174
000264  65204f4b
000268  0a00    
00026a  00                DCB      0
00026b  00                DCB      0
                  |L1.620|
00026c  21212120          DCB      "!!! SCLIB_GetCardInfo failed !!!\n",0
000270  53434c49
000274  425f4765
000278  74436172
00027c  64496e66
000280  6f206661
000284  696c6564
000288  20212121
00028c  0a00    
00028e  00                DCB      0
00028f  00                DCB      0
                  |L1.656|
000290  53434c49          DCB      "SCLIB_GetCardInfo OK\n",0
000294  425f4765
000298  74436172
00029c  64496e66
0002a0  6f204f4b
0002a4  0a00    
0002a6  00                DCB      0
0002a7  00                DCB      0
                  |L1.680|
0002a8  63617264          DCB      "cardInfo.T = %d(0x%04x), cardInfo.ATR_Len = %d\n",0
0002ac  496e666f
0002b0  2e54203d
0002b4  20256428
0002b8  30782530
0002bc  3478292c
0002c0  20636172
0002c4  64496e66
0002c8  6f2e4154
0002cc  525f4c65
0002d0  6e203d20
0002d4  25640a00
                  |L1.728|
0002d8  25303278          DCB      "%02x ",0
0002dc  2000    
0002de  00                DCB      0
0002df  00                DCB      0
                  |L1.736|
0002e0  76536d61          DCB      "vSmartCardTestTask Going...\r\n",0
0002e4  72744361
0002e8  72645465
0002ec  73745461
0002f0  736b2047
0002f4  6f696e67
0002f8  2e2e2e0d
0002fc  0a00    
0002fe  00                DCB      0
0002ff  00                DCB      0
                  |L1.768|
000300  76536d61          DCB      "vSmartCardTestTask Terminated !!\r\n",0
000304  72744361
000308  72645465
00030c  73745461
000310  736b2054
000314  65726d69
000318  6e617465
00031c  64202121
000320  0d0a00  
000323  00                DCB      0
                  |L1.804|
                          DCD      smartcardBurninCounter
                  |L1.808|
                          DCD      smartcardBurninErrorCounter
                  |L1.812|
                          DCD      0xf00000ff
                  |L1.816|
                          DCD      0x0aaaaa00
                  |L1.820|
000334  e24f00e8          ADR      r0,|L1.596|
000338  ebfffffe          BL       sysprintf
00033c  e1a0100d          MOV      r1,sp                 ;186
000340  e3a00000          MOV      r0,#0                 ;186
000344  ebfffffe          BL       SCLIB_GetCardInfo
000348  e1a05000          MOV      r5,r0                 ;186
00034c  e3550000          CMP      r5,#0                 ;187
000350  0a000002          BEQ      |L1.864|
000354  e24f00f0          ADR      r0,|L1.620|
000358  ebfffffe          BL       sysprintf
00035c  ea000011          B        |L1.936|
                  |L1.864|
000360  e24f00d8          ADR      r0,|L1.656|
000364  ebfffffe          BL       sysprintf
000368  e1cd20d0          LDRD     r2,r3,[sp,#0]         ;195
00036c  e1a01002          MOV      r1,r2                 ;195
000370  e24f00d0          ADR      r0,|L1.680|
000374  ebfffffe          BL       sysprintf
000378  e3a04000          MOV      r4,#0                 ;196
00037c  ea000004          B        |L1.916|
                  |L1.896|
000380  e28d0008          ADD      r0,sp,#8              ;197
000384  e7d01004          LDRB     r1,[r0,r4]            ;197
000388  e24f00b8          ADR      r0,|L1.728|
00038c  ebfffffe          BL       sysprintf
000390  e2844001          ADD      r4,r4,#1              ;196
                  |L1.916|
000394  e59d0004          LDR      r0,[sp,#4]            ;196
000398  e1500004          CMP      r0,r4                 ;196
00039c  8afffff7          BHI      |L1.896|
0003a0  e24f0f56          ADR      r0,|L1.592|
0003a4  ebfffffe          BL       sysprintf
                  |L1.936|
0003a8  e3a00001          MOV      r0,#1                 ;201
0003ac  eaffff9d          B        |L1.552|
;;;203    
                          ENDP

                  SmartCardTestInit PROC
;;;204    #if (ENABLE_BURNIN_TESTER)
;;;205    BOOL SmartCardTestInit(BOOL testModeFlag)
0003b0  e92d401c          PUSH     {r2-r4,lr}
;;;206    {
0003b4  e1a04000          MOV      r4,r0
;;;207        // enable smartcard 0 clock and multi function pin
;;;208        outpw(REG_CLK_PCLKEN1, inpw(REG_CLK_PCLKEN1) | 0x00001000);
0003b8  e3a0020b          MOV      r0,#0xb0000000
0003bc  e590021c          LDR      r0,[r0,#0x21c]
0003c0  e3800a01          ORR      r0,r0,#0x1000
0003c4  e3a0120b          MOV      r1,#0xb0000000
0003c8  e581021c          STR      r0,[r1,#0x21c]
;;;209        outpw(REG_CLK_DIVCTL6, inpw(REG_CLK_DIVCTL6) | 0x02000000);
0003cc  e3a0020b          MOV      r0,#0xb0000000
0003d0  e5900238          LDR      r0,[r0,#0x238]
0003d4  e3800402          ORR      r0,r0,#0x2000000
0003d8  e5810238          STR      r0,[r1,#0x238]
;;;210    
;;;211        // G10: RST, G11: CLK, G12: DAT, G13: PWR, G14: CD
;;;212        outpw(REG_SYS_GPG_MFPH, (inpw(REG_SYS_GPG_MFPH) & ~0x0FFFFF00) | 0x0AAAAA00);
0003dc  e3a0020b          MOV      r0,#0xb0000000
0003e0  e59000a4          LDR      r0,[r0,#0xa4]
0003e4  e51f10c0          LDR      r1,|L1.812|
0003e8  e0000001          AND      r0,r0,r1
0003ec  e51f10c4          LDR      r1,|L1.816|
0003f0  e1800001          ORR      r0,r0,r1
0003f4  e3a0120b          MOV      r1,#0xb0000000
0003f8  e58100a4          STR      r0,[r1,#0xa4]
;;;213    
;;;214        //sysprintf("\nThis sample code reads phone book from SIM card\n");
;;;215    
;;;216        // Open smartcard interface 0. CD pin state ignore and PWR pin high raise VCC pin to card
;;;217        SC_Open(0, SC_PIN_STATE_IGNORE,  SC_PIN_STATE_LOW/*SC_PIN_STATE_HIGH*/);
0003fc  e3a02000          MOV      r2,#0
000400  e3e01000          MVN      r1,#0
000404  e1a00002          MOV      r0,r2
000408  ebfffffe          BL       SC_Open
;;;218        sysInstallISR(HIGH_LEVEL_SENSITIVE | IRQ_LEVEL_1, SC0_IRQn, (PVOID)SC0_IRQHandler);
00040c  e59f205c          LDR      r2,|L1.1136|
000410  e3a01037          MOV      r1,#0x37
000414  e3a00041          MOV      r0,#0x41
000418  ebfffffe          BL       sysInstallISR
;;;219        sysSetLocalInterrupt(ENABLE_IRQ);
00041c  e3a0007f          MOV      r0,#0x7f
000420  ebfffffe          BL       sysSetLocalInterrupt
;;;220        sysEnableInterrupt(SC0_IRQn);
000424  e3a00037          MOV      r0,#0x37
000428  ebfffffe          BL       sysEnableInterrupt
;;;221    
;;;222        // Ignore CD pin for SIM card
;;;223        //while(SC_IsCardInserted(0) == FALSE);
;;;224        xTaskCreate(vSmartCardTestTask, "vSmartCardTestTask", 1024*10, NULL, SMART_CARD_TEST_THREAD_PROI, NULL);
00042c  e3a00000          MOV      r0,#0
000430  e3a01002          MOV      r1,#2
000434  e58d0004          STR      r0,[sp,#4]
000438  e1a03000          MOV      r3,r0
00043c  e3a02b0a          MOV      r2,#0x2800
000440  e58d1000          STR      r1,[sp,#0]
000444  e28f1028          ADR      r1,|L1.1140|
000448  e59f0038          LDR      r0,|L1.1160|
00044c  ebfffffe          BL       xTaskCreate
;;;225        return TRUE;
000450  e3a00001          MOV      r0,#1
;;;226    }
000454  e8bd801c          POP      {r2-r4,pc}
;;;227    #endif
                          ENDP

                  GetSmartCardBurninTestCounter PROC
;;;229    #if (ENABLE_BURNIN_TESTER)
;;;230    uint32_t GetSmartCardBurninTestCounter(void)
000458  e51f013c          LDR      r0,|L1.804|
;;;231    {
;;;232        return smartcardBurninCounter;
00045c  e5900000          LDR      r0,[r0,#0]  ; smartcardBurninCounter
;;;233    }
000460  e12fff1e          BX       lr
;;;234    
                          ENDP

                  GetSmartCardBurninTestErrorCounter PROC
;;;235    uint32_t GetSmartCardBurninTestErrorCounter(void)
000464  e51f0144          LDR      r0,|L1.808|
;;;236    {
;;;237        return smartcardBurninErrorCounter;
000468  e5900000          LDR      r0,[r0,#0]  ; smartcardBurninErrorCounter
;;;238    }
00046c  e12fff1e          BX       lr
;;;239    #endif
                          ENDP

                  |L1.1136|
                          DCD      SC0_IRQHandler
                  |L1.1140|
000474  76536d61          DCB      "vSmartCardTestTask",0
000478  72744361
00047c  72645465
000480  73745461
000484  736b00  
000487  00                DCB      0
                  |L1.1160|
                          DCD      vSmartCardTestTask

                          AREA ||.data||, DATA, ALIGN=2

                  smartcardBurninCounter
                          DCD      0x00000000
                  smartcardBurninErrorCounter
                          DCD      0x00000000
