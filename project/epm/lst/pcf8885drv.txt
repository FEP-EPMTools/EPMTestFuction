; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\pcf8885drv.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\pcf8885drv.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\pcf8885drv.crf src\UserDrv\pcf8885drv.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  sendPCF8885WriteCmd PROC
;;;51     /*-----------------------------------------*/
;;;52     static BOOL sendPCF8885WriteCmd(uint8_t cmd, uint8_t* paraData, uint8_t dataLen)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;53     {
000004  e1a04000          MOV      r4,r0
000008  e1a07001          MOV      r7,r1
00000c  e1a05002          MOV      r5,r2
;;;54         int j;
;;;55         pI2cInterface->enableCriticalSectionFunc(TRUE);
000010  e59f02a0          LDR      r0,|L1.696|
000014  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000018  e5901010          LDR      r1,[r0,#0x10]
00001c  e3a00001          MOV      r0,#1
000020  e12fff31          BLX      r1
;;;56         pI2cInterface->ioctlFunc(I2C_IOC_SET_DEV_ADDRESS, PCF8885_ID, 0);
000024  e59f028c          LDR      r0,|L1.696|
000028  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
00002c  e3a02000          MOV      r2,#0
000030  e3a01030          MOV      r1,#0x30
000034  e5903004          LDR      r3,[r0,#4]
000038  e1a00002          MOV      r0,r2
00003c  e12fff33          BLX      r3
;;;57         if(cmd != NULL)
000040  e3540000          CMP      r4,#0
000044  0a000007          BEQ      |L1.104|
;;;58         {
;;;59             pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, cmd, 1);
000048  e59f0268          LDR      r0,|L1.696|
00004c  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000050  e3a02001          MOV      r2,#1
000054  e1a01004          MOV      r1,r4
000058  e5903004          LDR      r3,[r0,#4]
00005c  e1a00002          MOV      r0,r2
000060  e12fff33          BLX      r3
000064  ea000006          B        |L1.132|
                  |L1.104|
;;;60         }
;;;61         else
;;;62         {
;;;63             pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, NULL, 0);
000068  e59f0248          LDR      r0,|L1.696|
00006c  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000070  e3a02000          MOV      r2,#0
000074  e1a01002          MOV      r1,r2
000078  e5903004          LDR      r3,[r0,#4]
00007c  e3a00001          MOV      r0,#1
000080  e12fff33          BLX      r3
                  |L1.132|
;;;64         }
;;;65         j = RETRY;
000084  e59f6230          LDR      r6,|L1.700|
;;;66         while(j-- > 0) 
000088  ea000008          B        |L1.176|
                  |L1.140|
;;;67         {
;;;68             if(pI2cInterface->writeFunc(paraData, dataLen) == dataLen)
00008c  e59f0224          LDR      r0,|L1.696|
000090  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000094  e1a01005          MOV      r1,r5
000098  e5902008          LDR      r2,[r0,#8]
00009c  e1a00007          MOV      r0,r7
0000a0  e12fff32          BLX      r2
0000a4  e1500005          CMP      r0,r5
0000a8  1a000000          BNE      |L1.176|
;;;69                 break;
0000ac  ea000002          B        |L1.188|
                  |L1.176|
0000b0  e2560000          SUBS     r0,r6,#0              ;66
0000b4  e2466001          SUB      r6,r6,#1              ;66
0000b8  cafffff3          BGT      |L1.140|
                  |L1.188|
0000bc  e1a00000          MOV      r0,r0
;;;70         }
;;;71         pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, NULL, 0);
0000c0  e59f01f0          LDR      r0,|L1.696|
0000c4  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0000c8  e3a02000          MOV      r2,#0
0000cc  e1a01002          MOV      r1,r2
0000d0  e5903004          LDR      r3,[r0,#4]
0000d4  e3a00001          MOV      r0,#1
0000d8  e12fff33          BLX      r3
;;;72         if(j <= 0)
0000dc  e3560000          CMP      r6,#0
0000e0  ca00000d          BGT      |L1.284|
;;;73         {
;;;74             sysprintf("\n !!! NT066E Write ERROR !!!\n");
0000e4  e28f0f75          ADR      r0,|L1.704|
0000e8  ebfffffe          BL       sysprintf
;;;75             wErrTimes++;
0000ec  e59f01ec          LDR      r0,|L1.736|
0000f0  e5900000          LDR      r0,[r0,#0]  ; wErrTimes
0000f4  e2800001          ADD      r0,r0,#1
0000f8  e59f11e0          LDR      r1,|L1.736|
0000fc  e5810000          STR      r0,[r1,#0]  ; wErrTimes
;;;76             pI2cInterface->enableCriticalSectionFunc(FALSE);
000100  e59f01b0          LDR      r0,|L1.696|
000104  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000108  e5901010          LDR      r1,[r0,#0x10]
00010c  e3a00000          MOV      r0,#0
000110  e12fff31          BLX      r1
;;;77             return FALSE;
000114  e3a00000          MOV      r0,#0
                  |L1.280|
;;;78         }
;;;79         else
;;;80         {
;;;81             pI2cInterface->enableCriticalSectionFunc(FALSE);
;;;82             return TRUE;
;;;83         }
;;;84     }
000118  e8bd81f0          POP      {r4-r8,pc}
                  |L1.284|
00011c  e59f0194          LDR      r0,|L1.696|
000120  e5900000          LDR      r0,[r0,#0]            ;81  ; pI2cInterface
000124  e5901010          LDR      r1,[r0,#0x10]         ;81
000128  e3a00000          MOV      r0,#0                 ;81
00012c  e12fff31          BLX      r1                    ;81
000130  e3a00001          MOV      r0,#1                 ;82
000134  eafffff7          B        |L1.280|
;;;85     
                          ENDP

                  sendPCF8885ReadCmd PROC
;;;86     static BOOL sendPCF8885ReadCmd(uint8_t cmd, uint8_t* paraData, uint8_t dataLen)
000138  e92d41f0          PUSH     {r4-r8,lr}
;;;87     {
00013c  e1a04000          MOV      r4,r0
000140  e1a07001          MOV      r7,r1
000144  e1a05002          MOV      r5,r2
;;;88         int j;
;;;89         pI2cInterface->enableCriticalSectionFunc(TRUE);
000148  e59f0168          LDR      r0,|L1.696|
00014c  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000150  e5901010          LDR      r1,[r0,#0x10]
000154  e3a00001          MOV      r0,#1
000158  e12fff31          BLX      r1
;;;90         pI2cInterface->ioctlFunc(I2C_IOC_SET_DEV_ADDRESS, PCF8885_ID, 0);
00015c  e59f0154          LDR      r0,|L1.696|
000160  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000164  e3a02000          MOV      r2,#0
000168  e3a01030          MOV      r1,#0x30
00016c  e5903004          LDR      r3,[r0,#4]
000170  e1a00002          MOV      r0,r2
000174  e12fff33          BLX      r3
;;;91         if(cmd != NULL)
000178  e3540000          CMP      r4,#0
00017c  0a000007          BEQ      |L1.416|
;;;92         {
;;;93             pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, cmd, 1);
000180  e59f0130          LDR      r0,|L1.696|
000184  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000188  e3a02001          MOV      r2,#1
00018c  e1a01004          MOV      r1,r4
000190  e5903004          LDR      r3,[r0,#4]
000194  e1a00002          MOV      r0,r2
000198  e12fff33          BLX      r3
00019c  ea000006          B        |L1.444|
                  |L1.416|
;;;94         }
;;;95         else
;;;96         {
;;;97             //sysprintf("\n !!! @@@@@  NT066E Read I2C_IOC_SET_SUB_ADDRESS   @@@@ !!!\n");
;;;98             pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, NULL, 0);
0001a0  e59f0110          LDR      r0,|L1.696|
0001a4  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0001a8  e3a02000          MOV      r2,#0
0001ac  e1a01002          MOV      r1,r2
0001b0  e5903004          LDR      r3,[r0,#4]
0001b4  e3a00001          MOV      r0,#1
0001b8  e12fff33          BLX      r3
                  |L1.444|
;;;99         }
;;;100        j = RETRY;
0001bc  e59f60f8          LDR      r6,|L1.700|
;;;101        while(j-- > 0) 
0001c0  ea000008          B        |L1.488|
                  |L1.452|
;;;102        {
;;;103            if(pI2cInterface->readFunc(paraData, dataLen) == dataLen)
0001c4  e59f00ec          LDR      r0,|L1.696|
0001c8  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0001cc  e1a01005          MOV      r1,r5
0001d0  e590200c          LDR      r2,[r0,#0xc]
0001d4  e1a00007          MOV      r0,r7
0001d8  e12fff32          BLX      r2
0001dc  e1500005          CMP      r0,r5
0001e0  1a000000          BNE      |L1.488|
;;;104                break;
0001e4  ea000002          B        |L1.500|
                  |L1.488|
0001e8  e2560000          SUBS     r0,r6,#0              ;101
0001ec  e2466001          SUB      r6,r6,#1              ;101
0001f0  cafffff3          BGT      |L1.452|
                  |L1.500|
0001f4  e1a00000          MOV      r0,r0
;;;105        }
;;;106        pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, NULL, 0);
0001f8  e59f00b8          LDR      r0,|L1.696|
0001fc  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000200  e3a02000          MOV      r2,#0
000204  e1a01002          MOV      r1,r2
000208  e5903004          LDR      r3,[r0,#4]
00020c  e3a00001          MOV      r0,#1
000210  e12fff33          BLX      r3
;;;107        if(j <= 0)
000214  e3560000          CMP      r6,#0
000218  ca00000d          BGT      |L1.596|
;;;108        {
;;;109            sysprintf("\n !!! NT066E Read ERROR !!!\n");
00021c  e28f00c0          ADR      r0,|L1.740|
000220  ebfffffe          BL       sysprintf
;;;110            rErrTimes++;
000224  e59f00d8          LDR      r0,|L1.772|
000228  e5900000          LDR      r0,[r0,#0]  ; rErrTimes
00022c  e2800001          ADD      r0,r0,#1
000230  e59f10cc          LDR      r1,|L1.772|
000234  e5810000          STR      r0,[r1,#0]  ; rErrTimes
;;;111            pI2cInterface->enableCriticalSectionFunc(FALSE);
000238  e59f0078          LDR      r0,|L1.696|
00023c  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000240  e5901010          LDR      r1,[r0,#0x10]
000244  e3a00000          MOV      r0,#0
000248  e12fff31          BLX      r1
;;;112            return FALSE;
00024c  e3a00000          MOV      r0,#0
                  |L1.592|
;;;113        }
;;;114        else
;;;115        {
;;;116            //sysprintf("\n ~~~ NT066E Read 0x%02x command: 0x%02x ~~~\n", cmd, paraData[0]);
;;;117            pI2cInterface->enableCriticalSectionFunc(FALSE);
;;;118            return TRUE;
;;;119        }
;;;120        
;;;121    }
000250  e8bd81f0          POP      {r4-r8,pc}
                  |L1.596|
000254  e59f005c          LDR      r0,|L1.696|
000258  e5900000          LDR      r0,[r0,#0]            ;117  ; pI2cInterface
00025c  e5901010          LDR      r1,[r0,#0x10]         ;117
000260  e3a00000          MOV      r0,#0                 ;117
000264  e12fff31          BLX      r1                    ;117
000268  e3a00001          MOV      r0,#1                 ;118
00026c  eafffff7          B        |L1.592|
;;;122    
                          ENDP

                  EINT7Callback PROC
                  |L1.624|
;;;123    INT32 EINT7Callback(UINT32 status, UINT32 userData)
000270  e92d4038          PUSH     {r3-r5,lr}
;;;124    {
000274  e1a04000          MOV      r4,r0
000278  e1a05001          MOV      r5,r1
;;;125        //#if(BUILD_DEBUG_VERSION || JUST_TEST_PCF8885)
;;;126        //sysprintf("\r\n  -#- EINT7 0x%08x [%04d] -#- \r\n", status, intTimes++);
;;;127        //sysprintf("\r\n  -#- EINT7 [%04d] -#- \r\n", intTimes++);
;;;128        //#endif
;;;129        BaseType_t xHigherPriorityTaskWoken;
;;;130        
;;;131        
;;;132        xHigherPriorityTaskWoken = pdFALSE;
00027c  e3a00000          MOV      r0,#0
000280  e58d0000          STR      r0,[sp,#0]
;;;133        xSemaphoreGiveFromISR( xPCF8885Semaphore, &xHigherPriorityTaskWoken );
000284  e1a0100d          MOV      r1,sp
000288  e59f0078          LDR      r0,|L1.776|
00028c  e5900000          LDR      r0,[r0,#0]  ; xPCF8885Semaphore
000290  ebfffffe          BL       xQueueGiveFromISR
;;;134        portEXIT_SWITCHING_ISR (xHigherPriorityTaskWoken);   
000294  e59d0000          LDR      r0,[sp,#0]
000298  e3500000          CMP      r0,#0
00029c  0a000000          BEQ      |L1.676|
0002a0  ebfffffe          BL       vTaskSwitchContext
                  |L1.676|
;;;135    
;;;136        GPIO_ClrISRBit(GPIOI, BIT2);    
0002a4  e3a01004          MOV      r1,#4
0002a8  e3a00c02          MOV      r0,#0x200
0002ac  ebfffffe          BL       GPIO_ClrISRBit
;;;137        return 0;
0002b0  e3a00000          MOV      r0,#0
;;;138    }
0002b4  e8bd8038          POP      {r3-r5,pc}
                  |L1.696|
                          DCD      pI2cInterface
                  |L1.700|
                          DCD      0x00001388
                  |L1.704|
0002c0  0a202121          DCB      "\n !!! NT066E Write ERROR !!!\n",0
0002c4  21204e54
0002c8  30363645
0002cc  20577269
0002d0  74652045
0002d4  52524f52
0002d8  20212121
0002dc  0a00    
0002de  00                DCB      0
0002df  00                DCB      0
                  |L1.736|
                          DCD      wErrTimes
                  |L1.740|
0002e4  0a202121          DCB      "\n !!! NT066E Read ERROR !!!\n",0
0002e8  21204e54
0002ec  30363645
0002f0  20526561
0002f4  64204552
0002f8  524f5220
0002fc  2121210a
000300  00      
000301  00                DCB      0
000302  00                DCB      0
000303  00                DCB      0
                  |L1.772|
                          DCD      rErrTimes
                  |L1.776|
                          DCD      xPCF8885Semaphore
                          ENDP

                  processKeyEvent PROC
;;;139    
;;;140    static int processKeyEvent(uint8_t value)
00030c  e92d4070          PUSH     {r4-r6,lr}
;;;141    {
000310  e1a05000          MOV      r5,r0
;;;142        int i;
;;;143        for(i = 0; i<8; i++)
000314  e3a04000          MOV      r4,#0
000318  ea00002b          B        |L1.972|
                  |L1.796|
;;;144        {
;;;145            if((value>>i)&0x1)
00031c  e1a00455          ASR      r0,r5,r4
000320  e3100001          TST      r0,#1
000324  0a000015          BEQ      |L1.896|
;;;146            {
;;;147                //sysprintf("\r\n~~~~Key %d DOWN Event ~~~~~\r\n", i);  
;;;148                if(keyDownFlag[i] == FALSE)
000328  e59f019c          LDR      r0,|L1.1228|
00032c  e7d00004          LDRB     r0,[r0,r4]
000330  e3500000          CMP      r0,#0
000334  1a00000d          BNE      |L1.880|
;;;149                {
;;;150                    //sysprintf("  -- v -- Key [%d] Down Event  ---\r\n", i);
;;;151                    keyDownFlag[i] = TRUE;
000338  e3a00001          MOV      r0,#1
00033c  e59f1188          LDR      r1,|L1.1228|
000340  e7c10004          STRB     r0,[r1,r4]
;;;152                    //processKeyDownEvent(i);
;;;153                    if(pKeyHardwareCallbackFunc != NULL)
000344  e59f0184          LDR      r0,|L1.1232|
000348  e5900000          LDR      r0,[r0,#0]  ; pKeyHardwareCallbackFunc
00034c  e3500000          CMP      r0,#0
000350  0a000004          BEQ      |L1.872|
;;;154                        pKeyHardwareCallbackFunc(i, KEY_HARDWARE_DOWN_EVENT);
000354  e20400ff          AND      r0,r4,#0xff
000358  e3a01001          MOV      r1,#1
00035c  e59f216c          LDR      r2,|L1.1232|
000360  e5922000          LDR      r2,[r2,#0]  ; pKeyHardwareCallbackFunc
000364  e12fff32          BLX      r2
                  |L1.872|
;;;155                    return KEY_HARDWARE_DOWN_EVENT;//just one key
000368  e3a00001          MOV      r0,#1
                  |L1.876|
;;;156                }
;;;157                else
;;;158                {
;;;159                    sysprintf("  -- v -- Key [%d] Down Event error, ignore ---\r\n", i);
;;;160                }
;;;161            }
;;;162            else
;;;163            {
;;;164                //sysprintf("\r\n~~~~Key %d UP Event ~~~~~\r\n", i);  
;;;165                if(keyDownFlag[i] == TRUE)
;;;166                {
;;;167                    //sysprintf("  -- ^ -- Key [%d] Up Event  ---\r\n", i);
;;;168                    keyDownFlag[i] = FALSE;
;;;169                    //processKeyUpEvent(i);
;;;170                    if(pKeyHardwareCallbackFunc != NULL)
;;;171                        pKeyHardwareCallbackFunc(i, KEY_HARDWARE_UP_EVENT);
;;;172                    return KEY_HARDWARE_UP_EVENT;//just one key
;;;173                }
;;;174                else
;;;175                {
;;;176                    //sysprintf("  -- ^ -- Key [%d] Up Event error, irnore ---\r\n", i);
;;;177                }
;;;178            }
;;;179        }
;;;180        return KEY_HARDWARE_ERROR_EVENT;
;;;181    }
00036c  e8bd8070          POP      {r4-r6,pc}
                  |L1.880|
000370  e1a01004          MOV      r1,r4                 ;159
000374  e28f0f56          ADR      r0,|L1.1236|
000378  ebfffffe          BL       sysprintf
00037c  ea000011          B        |L1.968|
                  |L1.896|
000380  e59f0144          LDR      r0,|L1.1228|
000384  e7d00004          LDRB     r0,[r0,r4]            ;165
000388  e3500001          CMP      r0,#1                 ;165
00038c  1a00000d          BNE      |L1.968|
000390  e3a00000          MOV      r0,#0                 ;168
000394  e59f1130          LDR      r1,|L1.1228|
000398  e7c10004          STRB     r0,[r1,r4]            ;168
00039c  e59f012c          LDR      r0,|L1.1232|
0003a0  e5900000          LDR      r0,[r0,#0]            ;170  ; pKeyHardwareCallbackFunc
0003a4  e3500000          CMP      r0,#0                 ;170
0003a8  0a000004          BEQ      |L1.960|
0003ac  e20400ff          AND      r0,r4,#0xff           ;171
0003b0  e3a01002          MOV      r1,#2                 ;171
0003b4  e59f2114          LDR      r2,|L1.1232|
0003b8  e5922000          LDR      r2,[r2,#0]            ;171  ; pKeyHardwareCallbackFunc
0003bc  e12fff32          BLX      r2                    ;171
                  |L1.960|
0003c0  e3a00002          MOV      r0,#2                 ;172
0003c4  eaffffe8          B        |L1.876|
                  |L1.968|
0003c8  e2844001          ADD      r4,r4,#1              ;143
                  |L1.972|
0003cc  e3540008          CMP      r4,#8                 ;143
0003d0  baffffd1          BLT      |L1.796|
0003d4  e3a0000f          MOV      r0,#0xf               ;180
0003d8  eaffffe3          B        |L1.876|
;;;182    static void vPcf8885DrvTask( void *pvparamOuteters )
                          ENDP

                  vPcf8885DrvTask PROC
0003dc  e92d401c          PUSH     {r2-r4,lr}
;;;183    {
;;;184        sysprintf("vPcf8885DrvTask Going...\r\n");   
0003e0  e28f0e12          ADR      r0,|L1.1288|
0003e4  ebfffffe          BL       sysprintf
;;;185        uint8_t data[8];
;;;186        for(;;)
0003e8  e1a00000          MOV      r0,r0
                  |L1.1004|
;;;187        {       
;;;188            BOOL reVal;
;;;189            BaseType_t reval = xSemaphoreTake(xPCF8885Semaphore, threadWaitTime);         
0003ec  e3a03000          MOV      r3,#0
0003f0  e59f012c          LDR      r0,|L1.1316|
0003f4  e1a01003          MOV      r1,r3
0003f8  e5902000          LDR      r2,[r0,#0]  ; threadWaitTime
0003fc  e51f00fc          LDR      r0,|L1.776|
000400  e5900000          LDR      r0,[r0,#0]  ; xPCF8885Semaphore
000404  ebfffffe          BL       xQueueGenericReceive
000408  e1a05000          MOV      r5,r0
;;;190            //#if(!SUPPORT_NT066E) 
;;;191            //if(GPIO_ReadBit(GPIOI, BIT2) == 0)
;;;192            //#endif
;;;193            {        
;;;194                if(enableTestPcf8885) 
00040c  e59f0114          LDR      r0,|L1.1320|
000410  e5d00000          LDRB     r0,[r0,#0]  ; enableTestPcf8885
000414  e3500000          CMP      r0,#0
000418  0a000001          BEQ      |L1.1060|
;;;195                { 
;;;196                    sysprintf("\r\n **vPCF8885DrvTask  GO **\r\n");
00041c  e28f0f42          ADR      r0,|L1.1324|
000420  ebfffffe          BL       sysprintf
                  |L1.1060|
;;;197                }                
;;;198    
;;;199                //data[0] = 0x11;
;;;200                //sendPCF8885WriteCmd(NULL, data, 1);  
;;;201                reVal = sendPCF8885ReadCmd(0x11, data, 1);
000424  e3a02001          MOV      r2,#1
000428  e1a0100d          MOV      r1,sp
00042c  e3a00011          MOV      r0,#0x11
000430  ebfffffe          BL       sendPCF8885ReadCmd
000434  e1a04000          MOV      r4,r0
;;;202    
;;;203                if(reVal)
000438  e3540000          CMP      r4,#0
00043c  0a00000b          BEQ      |L1.1136|
;;;204                {
;;;205                    if(enableTestPcf8885)
000440  e59f00e0          LDR      r0,|L1.1320|
000444  e5d00000          LDRB     r0,[r0,#0]  ; enableTestPcf8885
000448  e3500000          CMP      r0,#0
00044c  0a000004          BEQ      |L1.1124|
;;;206                    {
;;;207                        sysprintf("~~~ NT066E Read SensReg[%d] 0x%02x ~~~\n", intTimes, data[0]);
000450  e5dd2000          LDRB     r2,[sp,#0]
000454  e59f00f0          LDR      r0,|L1.1356|
000458  e5901000          LDR      r1,[r0,#0]  ; intTimes
00045c  e28f00ec          ADR      r0,|L1.1360|
000460  ebfffffe          BL       sysprintf
                  |L1.1124|
;;;208                    }
;;;209                    if(KEY_HARDWARE_DOWN_EVENT == processKeyEvent(data[0]))
000464  e5dd0000          LDRB     r0,[sp,#0]
000468  ebfffffe          BL       processKeyEvent
00046c  ea000001          B        |L1.1144|
                  |L1.1136|
;;;210                    {
;;;211    
;;;212                    }
;;;213                }
;;;214                else
;;;215                {
;;;216                    sysprintf("!!! NT066E Read SensReg ERROR !!!\n");
000470  e28f0c01          ADR      r0,|L1.1400|
000474  ebfffffe          BL       sysprintf
                  |L1.1144|
;;;217                } 
;;;218        
;;;219            } 
;;;220        }
000478  eaffffdb          B        |L1.1004|
;;;221    }
;;;222    
                          ENDP

                  PCF8885SetClkReg PROC
;;;223    void PCF8885SetClkReg(uint8_t frqc, uint8_t frqf)
00047c  e92d4030          PUSH     {r4,r5,lr}
;;;224    {
000480  e24dd014          SUB      sp,sp,#0x14
000484  e1a04000          MOV      r4,r0
000488  e1a05001          MOV      r5,r1
;;;225        uint8_t dataTmp[8];
;;;226        uint8_t dataTmp1[8];
;;;227        sysprintf("Start Tx ClkReg [frqc: 0x%x (b%02b), frqf: 0x%x (b%03b)]--> \n", frqc, frqc, frqf, frqf);
00048c  e58d5000          STR      r5,[sp,#0]
000490  e1a03005          MOV      r3,r5
000494  e1a02004          MOV      r2,r4
000498  e1a01004          MOV      r1,r4
00049c  e28f00f8          ADR      r0,|L1.1436|
0004a0  ebfffffe          BL       sysprintf
;;;228        if(sendPCF8885ReadCmd(0x36, dataTmp, 1))
0004a4  e3a02001          MOV      r2,#1
0004a8  e28d100c          ADD      r1,sp,#0xc
0004ac  e3a00036          MOV      r0,#0x36
0004b0  ebfffffe          BL       sendPCF8885ReadCmd
0004b4  e3500000          CMP      r0,#0
0004b8  0a000051          BEQ      |L1.1540|
;;;229        {
;;;230            sysprintf(" ~~~ NT066E Read ClkReg(1) 0x%02x ~~~\n", dataTmp[0]);
0004bc  e5dd100c          LDRB     r1,[sp,#0xc]
0004c0  e28f0f45          ADR      r0,|L1.1500|
0004c4  ebfffffe          BL       sysprintf
0004c8  ea000051          B        |L1.1556|
                  |L1.1228|
                          DCD      keyDownFlag
                  |L1.1232|
                          DCD      pKeyHardwareCallbackFunc
                  |L1.1236|
0004d4  20202d2d          DCB      "  -- v -- Key [%d] Down Event error, ignore ---\r\n",0
0004d8  2076202d
0004dc  2d204b65
0004e0  79205b25
0004e4  645d2044
0004e8  6f776e20
0004ec  4576656e
0004f0  74206572
0004f4  726f722c
0004f8  2069676e
0004fc  6f726520
000500  2d2d2d0d
000504  0a00    
000506  00                DCB      0
000507  00                DCB      0
                  |L1.1288|
000508  76506366          DCB      "vPcf8885DrvTask Going...\r\n",0
00050c  38383835
000510  44727654
000514  61736b20
000518  476f696e
00051c  672e2e2e
000520  0d0a00  
000523  00                DCB      0
                  |L1.1316|
                          DCD      threadWaitTime
                  |L1.1320|
                          DCD      enableTestPcf8885
                  |L1.1324|
00052c  0d0a202a          DCB      "\r\n **vPCF8885DrvTask  GO **\r\n",0
000530  2a765043
000534  46383838
000538  35447276
00053c  5461736b
000540  2020474f
000544  202a2a0d
000548  0a00    
00054a  00                DCB      0
00054b  00                DCB      0
                  |L1.1356|
                          DCD      intTimes
                  |L1.1360|
000550  7e7e7e20          DCB      "~~~ NT066E Read SensReg[%d] 0x%02x ~~~\n",0
000554  4e543036
000558  36452052
00055c  65616420
000560  53656e73
000564  5265675b
000568  25645d20
00056c  30782530
000570  3278207e
000574  7e7e0a00
                  |L1.1400|
000578  21212120          DCB      "!!! NT066E Read SensReg ERROR !!!\n",0
00057c  4e543036
000580  36452052
000584  65616420
000588  53656e73
00058c  52656720
000590  4552524f
000594  52202121
000598  210a00  
00059b  00                DCB      0
                  |L1.1436|
00059c  53746172          DCB      "Start Tx ClkReg [frqc: 0x%x (b%02b), frqf: 0x%x (b%03b)"
0005a0  74205478
0005a4  20436c6b
0005a8  52656720
0005ac  5b667271
0005b0  633a2030
0005b4  78257820
0005b8  28622530
0005bc  3262292c
0005c0  20667271
0005c4  663a2030
0005c8  78257820
0005cc  28622530
0005d0  336229  
0005d3  5d2d2d3e          DCB      "]--> \n",0
0005d7  200a00  
0005da  00                DCB      0
0005db  00                DCB      0
                  |L1.1500|
0005dc  207e7e7e          DCB      " ~~~ NT066E Read ClkReg(1) 0x%02x ~~~\n",0
0005e0  204e5430
0005e4  36364520
0005e8  52656164
0005ec  20436c6b
0005f0  52656728
0005f4  31292030
0005f8  78253032
0005fc  78207e7e
000600  7e0a00  
000603  00                DCB      0
                  |L1.1540|
;;;231        }
;;;232        else
;;;233        {
;;;234            sysprintf(" !!! NT066E Read ERROR !!!\n");
000604  e28f0e17          ADR      r0,|L1.1916|
000608  ebfffffe          BL       sysprintf
                  |L1.1548|
;;;235            return;
;;;236        }   
;;;237        if(frqc != 0xff)
;;;238        {
;;;239            dataTmp[0] = (dataTmp[0] & ~(0x3<<3)) | (frqc&0x3)<<3; 
;;;240        }
;;;241        if(frqf != 0xff)
;;;242        {
;;;243            dataTmp[0] = (dataTmp[0] & ~(0x7<<0)) | (frqf&0x7)<<0;
;;;244        }
;;;245        sysprintf(" ~~~ NT066E write ClkReg 0x%02x ~~~\n", dataTmp[0]);
;;;246        sendPCF8885WriteCmd(0x35, dataTmp, 1);   
;;;247    
;;;248        if(sendPCF8885ReadCmd(0x36, dataTmp1, 1))
;;;249        {
;;;250            
;;;251            if(dataTmp1[0] != dataTmp[0])
;;;252            {
;;;253                sysprintf(" ~~~ NT066E Tx ClkReg error 0x%02x : 0x%02x ~~~\n", dataTmp[0], dataTmp1[0]);
;;;254                return;
;;;255            }
;;;256            else
;;;257            {
;;;258                sysprintf(" ~~~ NT066E Read ClkReg(2) 0x%02x (b%08b)~~~\n", dataTmp1[0], dataTmp1[0]);
;;;259            }
;;;260        }
;;;261        else
;;;262        {
;;;263            sysprintf(" !!! NT066E Read ERROR !!!\n");
;;;264            return;
;;;265        }   
;;;266    }
00060c  e28dd014          ADD      sp,sp,#0x14
000610  e8bd8030          POP      {r4,r5,pc}
                  |L1.1556|
000614  e35400ff          CMP      r4,#0xff              ;237
000618  0a000004          BEQ      |L1.1584|
00061c  e5dd000c          LDRB     r0,[sp,#0xc]          ;239
000620  e3c00018          BIC      r0,r0,#0x18           ;239
000624  e2041003          AND      r1,r4,#3              ;239
000628  e1800181          ORR      r0,r0,r1,LSL #3       ;239
00062c  e5cd000c          STRB     r0,[sp,#0xc]          ;239
                  |L1.1584|
000630  e35500ff          CMP      r5,#0xff              ;241
000634  0a000004          BEQ      |L1.1612|
000638  e5dd000c          LDRB     r0,[sp,#0xc]          ;243
00063c  e3c00007          BIC      r0,r0,#7              ;243
000640  e2051007          AND      r1,r5,#7              ;243
000644  e1800001          ORR      r0,r0,r1              ;243
000648  e5cd000c          STRB     r0,[sp,#0xc]          ;243
                  |L1.1612|
00064c  e5dd100c          LDRB     r1,[sp,#0xc]          ;245
000650  e28f0d05          ADR      r0,|L1.1944|
000654  ebfffffe          BL       sysprintf
000658  e3a02001          MOV      r2,#1                 ;246
00065c  e28d100c          ADD      r1,sp,#0xc            ;246
000660  e3a00035          MOV      r0,#0x35              ;246
000664  ebfffffe          BL       sendPCF8885WriteCmd
000668  e3a02001          MOV      r2,#1                 ;248
00066c  e28d1004          ADD      r1,sp,#4              ;248
000670  e3a00036          MOV      r0,#0x36              ;248
000674  ebfffffe          BL       sendPCF8885ReadCmd
000678  e3500000          CMP      r0,#0                 ;248
00067c  0a00000d          BEQ      |L1.1720|
000680  e5dd0004          LDRB     r0,[sp,#4]            ;251
000684  e5dd100c          LDRB     r1,[sp,#0xc]          ;251
000688  e1500001          CMP      r0,r1                 ;251
00068c  0a000004          BEQ      |L1.1700|
000690  e5dd2004          LDRB     r2,[sp,#4]            ;253
000694  e5dd100c          LDRB     r1,[sp,#0xc]          ;253
000698  e28f0e12          ADR      r0,|L1.1984|
00069c  ebfffffe          BL       sysprintf
0006a0  eaffffd9          B        |L1.1548|
                  |L1.1700|
0006a4  e5dd2004          LDRB     r2,[sp,#4]            ;258
0006a8  e1a01002          MOV      r1,r2                 ;258
0006ac  e28f0d05          ADR      r0,|L1.2036|
0006b0  ebfffffe          BL       sysprintf
0006b4  ea000002          B        |L1.1732|
                  |L1.1720|
0006b8  e28f00bc          ADR      r0,|L1.1916|
0006bc  ebfffffe          BL       sysprintf
0006c0  eaffffd1          B        |L1.1548|
                  |L1.1732|
0006c4  e1a00000          MOV      r0,r0
0006c8  eaffffcf          B        |L1.1548|
;;;267    static BOOL hwInit(void)
                          ENDP

                  PCF8885ResetChip PROC
;;;367    
;;;368    BOOL PCF8885ResetChip(void)
0006cc  e92d401f          PUSH     {r0-r4,lr}
;;;369    {
;;;370        //#if(SUPPORT_NT066E)
;;;371        uint8_t dataTmp[8];
;;;372        uint8_t dataTmp1[8];
;;;373        sysprintf("Start Tx SysCtrl --> \n");
0006d0  e28f0f53          ADR      r0,|L1.2084|
0006d4  ebfffffe          BL       sysprintf
;;;374        if(sendPCF8885ReadCmd(0x04, dataTmp, 1))
0006d8  e3a02001          MOV      r2,#1
0006dc  e28d1008          ADD      r1,sp,#8
0006e0  e3a00004          MOV      r0,#4
0006e4  ebfffffe          BL       sendPCF8885ReadCmd
0006e8  e3500000          CMP      r0,#0
0006ec  0a000003          BEQ      |L1.1792|
;;;375        {
;;;376            sysprintf(" ~~~ NT066E Read SysCtrl(1) 0x%02x ~~~\n", dataTmp[0]);
0006f0  e5dd1008          LDRB     r1,[sp,#8]
0006f4  e28f0d05          ADR      r0,|L1.2108|
0006f8  ebfffffe          BL       sysprintf
0006fc  ea000004          B        |L1.1812|
                  |L1.1792|
;;;377        }
;;;378        else
;;;379        {
;;;380            sysprintf(" !!! NT066E Read ERROR !!!\n");
000700  e28f0074          ADR      r0,|L1.1916|
000704  ebfffffe          BL       sysprintf
;;;381            return FALSE;
000708  e3a00000          MOV      r0,#0
                  |L1.1804|
00070c  e28dd010          ADD      sp,sp,#0x10
;;;382        }   
;;;383        
;;;384        dataTmp[0] = dataTmp[0] | 0x80;
;;;385        sendPCF8885WriteCmd(0x04, dataTmp, 1);   
;;;386    
;;;387        if(sendPCF8885ReadCmd(0x04, dataTmp1, 1))
;;;388        {
;;;389            sysprintf(" ~~~ NT066E Read SysCtrl(2) 0x%02x ~~~\n", dataTmp1[0]);
;;;390            if(dataTmp1[0] != dataTmp[0])
;;;391            {
;;;392                sysprintf(" ~~~ NT066E Tx SysCtrl error 0x%02x : 0x%02x ~~~\n", dataTmp[0], dataTmp1[0]);
;;;393                return FALSE;
;;;394            }
;;;395        }
;;;396        else
;;;397        {
;;;398            sysprintf(" !!! NT066E Read ERROR !!!\n");
;;;399            return FALSE;
;;;400        }   
;;;401        //#endif    
;;;402        return TRUE;
;;;403    }
000710  e8bd8010          POP      {r4,pc}
                  |L1.1812|
000714  e5dd0008          LDRB     r0,[sp,#8]            ;384
000718  e3800080          ORR      r0,r0,#0x80           ;384
00071c  e5cd0008          STRB     r0,[sp,#8]            ;384
000720  e3a02001          MOV      r2,#1                 ;385
000724  e28d1008          ADD      r1,sp,#8              ;385
000728  e3a00004          MOV      r0,#4                 ;385
00072c  ebfffffe          BL       sendPCF8885WriteCmd
000730  e3a02001          MOV      r2,#1                 ;387
000734  e1a0100d          MOV      r1,sp                 ;387
000738  e3a00004          MOV      r0,#4                 ;387
00073c  ebfffffe          BL       sendPCF8885ReadCmd
000740  e3500000          CMP      r0,#0                 ;387
000744  0a00005d          BEQ      |L1.2240|
000748  e5dd1000          LDRB     r1,[sp,#0]            ;389
00074c  e28f0e11          ADR      r0,|L1.2148|
000750  ebfffffe          BL       sysprintf
000754  e5dd0000          LDRB     r0,[sp,#0]            ;390
000758  e5dd1008          LDRB     r1,[sp,#8]            ;390
00075c  e1500001          CMP      r0,r1                 ;390
000760  0a00005a          BEQ      |L1.2256|
000764  e5dd2000          LDRB     r2,[sp,#0]            ;392
000768  e5dd1008          LDRB     r1,[sp,#8]            ;392
00076c  e28f0f46          ADR      r0,|L1.2188|
000770  ebfffffe          BL       sysprintf
000774  e3a00000          MOV      r0,#0                 ;393
000778  eaffffe3          B        |L1.1804|
                  |L1.1916|
00077c  20212121          DCB      " !!! NT066E Read ERROR !!!\n",0
000780  204e5430
000784  36364520
000788  52656164
00078c  20455252
000790  4f522021
000794  21210a00
                  |L1.1944|
000798  207e7e7e          DCB      " ~~~ NT066E write ClkReg 0x%02x ~~~\n",0
00079c  204e5430
0007a0  36364520
0007a4  77726974
0007a8  6520436c
0007ac  6b526567
0007b0  20307825
0007b4  30327820
0007b8  7e7e7e0a
0007bc  00      
0007bd  00                DCB      0
0007be  00                DCB      0
0007bf  00                DCB      0
                  |L1.1984|
0007c0  207e7e7e          DCB      " ~~~ NT066E Tx ClkReg error 0x%02x : 0x%02x ~~~\n",0
0007c4  204e5430
0007c8  36364520
0007cc  54782043
0007d0  6c6b5265
0007d4  67206572
0007d8  726f7220
0007dc  30782530
0007e0  3278203a
0007e4  20307825
0007e8  30327820
0007ec  7e7e7e0a
0007f0  00      
0007f1  00                DCB      0
0007f2  00                DCB      0
0007f3  00                DCB      0
                  |L1.2036|
0007f4  207e7e7e          DCB      " ~~~ NT066E Read ClkReg(2) 0x%02x (b%08b)~~~\n",0
0007f8  204e5430
0007fc  36364520
000800  52656164
000804  20436c6b
000808  52656728
00080c  32292030
000810  78253032
000814  78202862
000818  25303862
00081c  297e7e7e
000820  0a00    
000822  00                DCB      0
000823  00                DCB      0
                  |L1.2084|
000824  53746172          DCB      "Start Tx SysCtrl --> \n",0
000828  74205478
00082c  20537973
000830  4374726c
000834  202d2d3e
000838  200a00  
00083b  00                DCB      0
                  |L1.2108|
00083c  207e7e7e          DCB      " ~~~ NT066E Read SysCtrl(1) 0x%02x ~~~\n",0
000840  204e5430
000844  36364520
000848  52656164
00084c  20537973
000850  4374726c
000854  28312920
000858  30782530
00085c  3278207e
000860  7e7e0a00
                  |L1.2148|
000864  207e7e7e          DCB      " ~~~ NT066E Read SysCtrl(2) 0x%02x ~~~\n",0
000868  204e5430
00086c  36364520
000870  52656164
000874  20537973
000878  4374726c
00087c  28322920
000880  30782530
000884  3278207e
000888  7e7e0a00
                  |L1.2188|
00088c  207e7e7e          DCB      " ~~~ NT066E Tx SysCtrl error 0x%02x : 0x%02x ~~~\n",0
000890  204e5430
000894  36364520
000898  54782053
00089c  79734374
0008a0  726c2065
0008a4  72726f72
0008a8  20307825
0008ac  30327820
0008b0  3a203078
0008b4  25303278
0008b8  207e7e7e
0008bc  0a00    
0008be  00                DCB      0
0008bf  00                DCB      0
                  |L1.2240|
0008c0  e24f0f53          ADR      r0,|L1.1916|
0008c4  ebfffffe          BL       sysprintf
0008c8  e3a00000          MOV      r0,#0                 ;399
0008cc  eaffff8e          B        |L1.1804|
                  |L1.2256|
0008d0  e3a00001          MOV      r0,#1                 ;402
0008d4  eaffff8c          B        |L1.1804|
;;;404    
                          ENDP

                  hwInit PROC
;;;266    }
;;;267    static BOOL hwInit(void)
0008d8  e92d4010          PUSH     {r4,lr}
;;;268    {
;;;269        //uint8_t dataTmp[8];
;;;270        //uint8_t dataTmp1[8];
;;;271        outpw(REG_CLK_PCLKEN0,inpw(REG_CLK_PCLKEN0) | (1<<3)); //Enable GPIO engin clock.
0008dc  e3a0020b          MOV      r0,#0xb0000000
0008e0  e5900218          LDR      r0,[r0,#0x218]
0008e4  e3800008          ORR      r0,r0,#8
0008e8  e3a0120b          MOV      r1,#0xb0000000
0008ec  e5810218          STR      r0,[r1,#0x218]
;;;272        /* Set PI2 to EINT7 */
;;;273        outpw(REG_SYS_GPI_MFPL,(inpw(REG_SYS_GPI_MFPL) & ~(0xF<<8)) | (0xF<<8));    
0008f0  e3a0020b          MOV      r0,#0xb0000000
0008f4  e59000b0          LDR      r0,[r0,#0xb0]
0008f8  e3800c0f          ORR      r0,r0,#0xf00
0008fc  e58100b0          STR      r0,[r1,#0xb0]
;;;274        /* Configure PI2 to input mode */
;;;275        GPIO_OpenBit(GPIOI, BIT2, DIR_INPUT, PULL_UP);
000900  e3a03001          MOV      r3,#1
000904  e3a02000          MOV      r2,#0
000908  e3a01004          MOV      r1,#4
00090c  e3a00c02          MOV      r0,#0x200
000910  ebfffffe          BL       GPIO_OpenBit
;;;276        /* Confingure PI2 to falling-edge trigger */
;;;277        GPIO_EnableTriggerType(GPIOI, BIT2, BOTH_EDGE/*FALLING*/);
000914  e3a02004          MOV      r2,#4
000918  e1a01002          MOV      r1,r2
00091c  e3a00c02          MOV      r0,#0x200
000920  ebfffffe          BL       GPIO_EnableTriggerType
;;;278        //EINT7
;;;279        GPIO_EnableEINT(NIRQ7, (GPIO_CALLBACK)EINT7Callback, 0);
000924  e3a02000          MOV      r2,#0
000928  e24f1d1b          ADR      r1,|L1.624|
00092c  e3a00007          MOV      r0,#7
000930  ebfffffe          BL       GPIO_EnableEINT
;;;280        
;;;281        GPIO_ClrISRBit(GPIOI, BIT2);
000934  e3a01004          MOV      r1,#4
000938  e3a00c02          MOV      r0,#0x200
00093c  ebfffffe          BL       GPIO_ClrISRBit
;;;282        
;;;283    #if(1)
;;;284        if(PCF8885ResetChip() == FALSE)
000940  ebfffffe          BL       PCF8885ResetChip
000944  e3500000          CMP      r0,#0
000948  1a000001          BNE      |L1.2388|
;;;285        {
;;;286            return FALSE;
00094c  e3a00000          MOV      r0,#0
                  |L1.2384|
;;;287        }
;;;288    #else    
;;;289        sysprintf("Start Tx SysCtrl --> \n");
;;;290        if(sendPCF8885ReadCmd(0x04, dataTmp, 1))
;;;291        {
;;;292            sysprintf(" ~~~ NT066E Read SysCtrl(1) 0x%02x ~~~\n", dataTmp[0]);
;;;293        }
;;;294        else
;;;295        {
;;;296            sysprintf(" !!! NT066E Read ERROR !!!\n");
;;;297            return FALSE;
;;;298        }   
;;;299        
;;;300        dataTmp[0] = dataTmp[0] | 0x80;
;;;301        sendPCF8885WriteCmd(0x04, dataTmp, 1);   
;;;302    
;;;303        if(sendPCF8885ReadCmd(0x04, dataTmp1, 1))
;;;304        {
;;;305            sysprintf(" ~~~ NT066E Read SysCtrl(2) 0x%02x ~~~\n", dataTmp1[0]);
;;;306            if(dataTmp1[0] != dataTmp[0])
;;;307            {
;;;308                sysprintf(" ~~~ NT066E Tx SysCtrl error 0x%02x : 0x%02x ~~~\n", dataTmp[0], dataTmp1[0]);
;;;309                return FALSE;
;;;310            }
;;;311        }
;;;312        else
;;;313        {
;;;314            sysprintf(" !!! NT066E Read ERROR !!!\n");
;;;315            return FALSE;
;;;316        } 
;;;317    #endif    
;;;318        
;;;319    
;;;320        pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, NULL, 0);
;;;321        return TRUE;
;;;322    }
000950  e8bd8010          POP      {r4,pc}
                  |L1.2388|
000954  e51f06a4          LDR      r0,|L1.696|
000958  e5900000          LDR      r0,[r0,#0]            ;320  ; pI2cInterface
00095c  e3a02000          MOV      r2,#0                 ;320
000960  e1a01002          MOV      r1,r2                 ;320
000964  e5903004          LDR      r3,[r0,#4]            ;320
000968  e3a00001          MOV      r0,#1                 ;320
00096c  e12fff33          BLX      r3                    ;320
000970  e3a00001          MOV      r0,#1                 ;321
000974  eafffff5          B        |L1.2384|
;;;323    
                          ENDP

                  swInit PROC
;;;324    static BOOL swInit(void)
000978  e92d401c          PUSH     {r2-r4,lr}
;;;325    {
;;;326        xPCF8885Semaphore = xSemaphoreCreateBinary();
00097c  e3a02003          MOV      r2,#3
000980  e3a01000          MOV      r1,#0
000984  e3a00001          MOV      r0,#1
000988  ebfffffe          BL       xQueueGenericCreate
00098c  e51f168c          LDR      r1,|L1.776|
000990  e5810000          STR      r0,[r1,#0]  ; xPCF8885Semaphore
;;;327        xTaskCreate( vPcf8885DrvTask, "vPcf8885DrvTask", 1024, NULL, PCF8885_DRV_THREAD_PROI, NULL );
000994  e3a00000          MOV      r0,#0
000998  e3a0100d          MOV      r1,#0xd
00099c  e58d0004          STR      r0,[sp,#4]
0009a0  e1a03000          MOV      r3,r0
0009a4  e3a02b01          MOV      r2,#0x400
0009a8  e58d1000          STR      r1,[sp,#0]
0009ac  e28f10bc          ADR      r1,|L1.2672|
0009b0  e59f00c8          LDR      r0,|L1.2688|
0009b4  ebfffffe          BL       xTaskCreate
;;;328        return TRUE;
0009b8  e3a00001          MOV      r0,#1
;;;329    }
0009bc  e8bd801c          POP      {r2-r4,pc}
;;;330    
                          ENDP

                  Pcf8885DrvInit PROC
;;;333    /*-----------------------------------------*/
;;;334    BOOL Pcf8885DrvInit(void)
0009c0  e92d4010          PUSH     {r4,lr}
;;;335    {
;;;336        sysprintf("Pcf8885DrvInit!!\n");
0009c4  e28f00b8          ADR      r0,|L1.2692|
0009c8  ebfffffe          BL       sysprintf
;;;337        pI2cInterface = I2cGetInterface(I2C_1_INTERFACE_INDEX);
0009cc  e3a00000          MOV      r0,#0
0009d0  ebfffffe          BL       I2cGetInterface
0009d4  e51f1724          LDR      r1,|L1.696|
0009d8  e5810000          STR      r0,[r1,#0]  ; pI2cInterface
;;;338        if(pI2cInterface == NULL)
0009dc  e2810000          ADD      r0,r1,#0
0009e0  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0009e4  e3500000          CMP      r0,#0
0009e8  1a000003          BNE      |L1.2556|
;;;339        {
;;;340            sysprintf("Pcf8885DrvInit ERROR (pI2cInterface == NULL)!!\n");
0009ec  e28f00a4          ADR      r0,|L1.2712|
0009f0  ebfffffe          BL       sysprintf
;;;341            return FALSE;
0009f4  e3a00000          MOV      r0,#0
                  |L1.2552|
;;;342        }
;;;343        
;;;344        if(pI2cInterface->initFunc() == FALSE)
;;;345        {
;;;346            sysprintf("Pcf8885DrvInit ERROR (initFunc false)!!\n");
;;;347            return FALSE;
;;;348        }
;;;349        if(hwInit() == FALSE)
;;;350        {
;;;351            sysprintf("Pcf8885DrvInit ERROR (hwInit false)!!\n");
;;;352            return FALSE;
;;;353        }
;;;354        if(swInit() == FALSE)
;;;355        {
;;;356            sysprintf("Pcf8885DrvInit ERROR (swInit false)!!\n");
;;;357            return FALSE;
;;;358        }
;;;359        
;;;360        
;;;361        return TRUE;
;;;362    }
0009f8  e8bd8010          POP      {r4,pc}
                  |L1.2556|
0009fc  e51f174c          LDR      r1,|L1.696|
000a00  e5911000          LDR      r1,[r1,#0]            ;344  ; pI2cInterface
000a04  e5910000          LDR      r0,[r1,#0]            ;344
000a08  e12fff30          BLX      r0                    ;344
000a0c  e3500000          CMP      r0,#0                 ;344
000a10  1a000003          BNE      |L1.2596|
000a14  e28f00ac          ADR      r0,|L1.2760|
000a18  ebfffffe          BL       sysprintf
000a1c  e3a00000          MOV      r0,#0                 ;347
000a20  eafffff4          B        |L1.2552|
                  |L1.2596|
000a24  ebfffffe          BL       hwInit
000a28  e3500000          CMP      r0,#0                 ;349
000a2c  1a000003          BNE      |L1.2624|
000a30  e28f00bc          ADR      r0,|L1.2804|
000a34  ebfffffe          BL       sysprintf
000a38  e3a00000          MOV      r0,#0                 ;352
000a3c  eaffffed          B        |L1.2552|
                  |L1.2624|
000a40  ebfffffe          BL       swInit
000a44  e3500000          CMP      r0,#0                 ;354
000a48  1a000003          BNE      |L1.2652|
000a4c  e28f00c8          ADR      r0,|L1.2844|
000a50  ebfffffe          BL       sysprintf
000a54  e3a00000          MOV      r0,#0                 ;357
000a58  eaffffe6          B        |L1.2552|
                  |L1.2652|
000a5c  e3a00001          MOV      r0,#1                 ;361
000a60  eaffffe4          B        |L1.2552|
;;;363    void Pcf8885SetCallbackFunc(keyHardwareCallbackFunc func)
                          ENDP

                  Pcf8885SetCallbackFunc PROC
000a64  e51f159c          LDR      r1,|L1.1232|
;;;364    {
;;;365        pKeyHardwareCallbackFunc = func;
000a68  e5810000          STR      r0,[r1,#0]  ; pKeyHardwareCallbackFunc
;;;366    }
000a6c  e12fff1e          BX       lr
;;;367    
                          ENDP

                  |L1.2672|
000a70  76506366          DCB      "vPcf8885DrvTask",0
000a74  38383835
000a78  44727654
000a7c  61736b00
                  |L1.2688|
                          DCD      vPcf8885DrvTask
                  |L1.2692|
000a84  50636638          DCB      "Pcf8885DrvInit!!\n",0
000a88  38383544
000a8c  7276496e
000a90  69742121
000a94  0a00    
000a96  00                DCB      0
000a97  00                DCB      0
                  |L1.2712|
000a98  50636638          DCB      "Pcf8885DrvInit ERROR (pI2cInterface == NULL)!!\n",0
000a9c  38383544
000aa0  7276496e
000aa4  69742045
000aa8  52524f52
000aac  20287049
000ab0  3263496e
000ab4  74657266
000ab8  61636520
000abc  3d3d204e
000ac0  554c4c29
000ac4  21210a00
                  |L1.2760|
000ac8  50636638          DCB      "Pcf8885DrvInit ERROR (initFunc false)!!\n",0
000acc  38383544
000ad0  7276496e
000ad4  69742045
000ad8  52524f52
000adc  2028696e
000ae0  69744675
000ae4  6e632066
000ae8  616c7365
000aec  2921210a
000af0  00      
000af1  00                DCB      0
000af2  00                DCB      0
000af3  00                DCB      0
                  |L1.2804|
000af4  50636638          DCB      "Pcf8885DrvInit ERROR (hwInit false)!!\n",0
000af8  38383544
000afc  7276496e
000b00  69742045
000b04  52524f52
000b08  20286877
000b0c  496e6974
000b10  2066616c
000b14  73652921
000b18  210a00  
000b1b  00                DCB      0
                  |L1.2844|
000b1c  50636638          DCB      "Pcf8885DrvInit ERROR (swInit false)!!\n",0
000b20  38383544
000b24  7276496e
000b28  69742045
000b2c  52524f52
000b30  20287377
000b34  496e6974
000b38  2066616c
000b3c  73652921
000b40  210a00  
000b43  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  threadWaitTime
                          DCD      0xffffffff
                  enableTestPcf8885
000004  00                DCB      0x00
                  keyDownFlag
000005  000000            DCB      0x00,0x00,0x00
                          DCD      0x00000000
00000c  00000000          DCB      0x00,0x00,0x00,0x00
                  pI2cInterface
                          DCD      0x00000000
                  pKeyHardwareCallbackFunc
                          DCD      0x00000000
                  xPCF8885Semaphore
                          DCD      0x00000000
                  intTimes
                          DCD      0x00000000
                  rErrTimes
                          DCD      0x00000000
                  wErrTimes
                          DCD      0x00000000
