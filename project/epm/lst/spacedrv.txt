; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\spacedrv.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\spacedrv.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\spacedrv.crf src\SysHal\spacedrv.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SpaceDrvPreOffCallback PROC
;;;59     /*-----------------------------------------*/
;;;60     static BOOL SpaceDrvPreOffCallback(int flag)
000000  e1a01000          MOV      r1,r0
;;;61     {
;;;62         BOOL reVal = TRUE;
000004  e3a00001          MOV      r0,#1
;;;63         spaceDrvIgnoreRun = TRUE;
000008  e3a02001          MOV      r2,#1
00000c  e59f31cc          LDR      r3,|L1.480|
000010  e5c32000          STRB     r2,[r3,#0]  ; spaceDrvIgnoreRun
;;;64         //sysprintf("### SpaceDrv OFF Callback [%s] ###\r\n", dataAgentPowerCallabck.drvName);    
;;;65         return reVal;    
;;;66     }
000014  e12fff1e          BX       lr
;;;67     static BOOL SpaceDrvOffCallback(int flag)
                          ENDP

                  SpaceDrvOffCallback PROC
000018  e92d4070          PUSH     {r4-r6,lr}
;;;68     {
00001c  e1a05000          MOV      r5,r0
;;;69         int timers = 2000/10;
000020  e3a040c8          MOV      r4,#0xc8
;;;70         while(!spaceDrvPowerStatus)
000024  ea000008          B        |L1.76|
                  |L1.40|
;;;71         {
;;;72             sysprintf("[s]");
000028  e28f0f6d          ADR      r0,|L1.484|
00002c  ebfffffe          BL       sysprintf
;;;73             if(timers-- == 0)
000030  e1b00004          MOVS     r0,r4
000034  e2444001          SUB      r4,r4,#1
000038  1a000001          BNE      |L1.68|
;;;74             {
;;;75                 return FALSE;
00003c  e3a00000          MOV      r0,#0
                  |L1.64|
;;;76             }
;;;77             vTaskDelay(10/portTICK_RATE_MS); 
;;;78         }
;;;79         return TRUE;    
;;;80     }
000040  e8bd8070          POP      {r4-r6,pc}
                  |L1.68|
000044  e3a00001          MOV      r0,#1                 ;77
000048  ebfffffe          BL       vTaskDelay
                  |L1.76|
00004c  e59f0194          LDR      r0,|L1.488|
000050  e5d00000          LDRB     r0,[r0,#0]            ;70  ; spaceDrvPowerStatus
000054  e3500000          CMP      r0,#0                 ;70
000058  0afffff2          BEQ      |L1.40|
00005c  e3a00001          MOV      r0,#1                 ;79
000060  eafffff6          B        |L1.64|
;;;81     static BOOL SpaceDrvOnCallback(int flag)
                          ENDP

                  SpaceDrvOnCallback PROC
000064  e92d4070          PUSH     {r4-r6,lr}
;;;82     {
000068  e1a05000          MOV      r5,r0
;;;83         BOOL reVal = TRUE;
00006c  e3a04001          MOV      r4,#1
;;;84         //StartSpaceDrv();
;;;85         //sysprintf("### SpaceDrv ON Callback [%s] ###\r\n", dataAgentPowerCallabck.drvName); 
;;;86         spaceDrvIgnoreRun = FALSE;
000070  e3a00000          MOV      r0,#0
000074  e59f1164          LDR      r1,|L1.480|
000078  e5c10000          STRB     r0,[r1,#0]  ; spaceDrvIgnoreRun
;;;87         spaceDrvPowerStatus = FALSE;  
00007c  e59f1164          LDR      r1,|L1.488|
000080  e5c10000          STRB     r0,[r1,#0]  ; spaceDrvPowerStatus
;;;88         xSemaphoreGive(xSemaphore);    
000084  e3a03000          MOV      r3,#0
000088  e1a02003          MOV      r2,r3
00008c  e1a01003          MOV      r1,r3
000090  e59f0154          LDR      r0,|L1.492|
000094  e5900000          LDR      r0,[r0,#0]  ; xSemaphore
000098  ebfffffe          BL       xQueueGenericSend
;;;89         return reVal;    
00009c  e1a00004          MOV      r0,r4
;;;90     }
0000a0  e8bd8070          POP      {r4-r6,pc}
;;;91     static BOOL SpaceDrvCheckStatus(int flag)
                          ENDP

                  SpaceDrvCheckStatus PROC
0000a4  e1a01000          MOV      r1,r0
;;;92     {
;;;93         //BOOL reVal = TRUE;
;;;94         //sysprintf("### SpaceDrv STATUS Callback [%s] ###\r\n", dataAgentPowerCallabck.drvName); 
;;;95         return spaceDrvPowerStatus;    
0000a8  e59f0138          LDR      r0,|L1.488|
0000ac  e5d00000          LDRB     r0,[r0,#0]  ; spaceDrvPowerStatus
;;;96     }
0000b0  e12fff1e          BX       lr
;;;97     
                          ENDP

                  vSpaceDrvTask PROC
;;;98     
;;;99     static void vSpaceDrvTask( void *pvParameters )
0000b4  e92d401c          PUSH     {r2-r4,lr}
;;;100    {
;;;101        SpaceDrvOnCallback(0);
0000b8  e3a00000          MOV      r0,#0
0000bc  ebfffffe          BL       SpaceDrvOnCallback
;;;102        for(;;)
0000c0  e1a00000          MOV      r0,r0
                  |L1.196|
;;;103        {  
;;;104            #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;105            //sysprintf(" -wait- vSpaceDrvTask %d---\r\n", threadWaitTime); 
;;;106            #endif
;;;107            spaceDrvPowerStatus = TRUE;
0000c4  e3a00001          MOV      r0,#1
0000c8  e59f1118          LDR      r1,|L1.488|
0000cc  e5c10000          STRB     r0,[r1,#0]  ; spaceDrvPowerStatus
;;;108            xSemaphoreTake(xSemaphore, threadWaitTime/*portMAX_DELAY*/);
0000d0  e3a03000          MOV      r3,#0
0000d4  e59f0114          LDR      r0,|L1.496|
0000d8  e1a01003          MOV      r1,r3
0000dc  e5902000          LDR      r2,[r0,#0]  ; threadWaitTime
0000e0  e59f0104          LDR      r0,|L1.492|
0000e4  e5900000          LDR      r0,[r0,#0]  ; xSemaphore
0000e8  ebfffffe          BL       xQueueGenericReceive
;;;109            if(spaceDrvIgnoreRun)
0000ec  e59f00ec          LDR      r0,|L1.480|
0000f0  e5d00000          LDRB     r0,[r0,#0]  ; spaceDrvIgnoreRun
0000f4  e3500000          CMP      r0,#0
0000f8  0a000002          BEQ      |L1.264|
;;;110            {
;;;111                sysprintf("vSpaceDrvTask ignore---\r\n"); 
0000fc  e28f00f0          ADR      r0,|L1.500|
000100  ebfffffe          BL       sysprintf
;;;112                continue;
000104  eaffffee          B        |L1.196|
                  |L1.264|
;;;113            }
;;;114            #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;115            //sysprintf(" -start- vSpaceDrvTask ---\r\n"); 
;;;116            #endif
;;;117            //if(GetMainSpaceDrvFlag())
;;;118            {
;;;119                int detectResult;
;;;120                BOOL mSpaceStatusTmp[2] = {FALSE};//為了能一次更新狀態 不然拍照會拍兩張
000108  e3a00000          MOV      r0,#0
00010c  e58d0000          STR      r0,[sp,#0]
;;;121                spaceDrvPowerStatus = FALSE;
000110  e59f10d0          LDR      r1,|L1.488|
000114  e5c10000          STRB     r0,[r1,#0]  ; spaceDrvPowerStatus
;;;122                if(pDistInterface->measureDistFunc(DIST_DEVICE_1, &detectResult))
000118  e59f00f0          LDR      r0,|L1.528|
00011c  e5900000          LDR      r0,[r0,#0]  ; pDistInterface
000120  e28d1004          ADD      r1,sp,#4
000124  e5902004          LDR      r2,[r0,#4]
000128  e3a00000          MOV      r0,#0
00012c  e12fff32          BLX      r2
000130  e3500000          CMP      r0,#0
000134  0a00006f          BEQ      |L1.760|
;;;123                {
;;;124                    mSpaceDist[DIST_DEVICE_1] = detectResult;
000138  e59f10d4          LDR      r1,|L1.532|
00013c  e59d0004          LDR      r0,[sp,#4]
000140  e5810000          STR      r0,[r1,#0]  ; mSpaceDist
;;;125                    #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;126                    sysprintf(" -start- SPACE_DRV_1 detectResult = %d cm  ---\r\n", detectResult); 
000144  e28f00cc          ADR      r0,|L1.536|
000148  e59d1004          LDR      r1,[sp,#4]
00014c  ebfffffe          BL       sysprintf
;;;127                    #endif
;;;128                    if(detectResult < 80)
000150  e59d0004          LDR      r0,[sp,#4]
000154  e3500050          CMP      r0,#0x50
000158  aa000019          BGE      |L1.452|
;;;129                    {
;;;130                        
;;;131                        mSpaceCounter[SPACE_INDEX_1]++;
00015c  e59f00e8          LDR      r0,|L1.588|
000160  e5d00000          LDRB     r0,[r0,#0]  ; mSpaceCounter
000164  e2800001          ADD      r0,r0,#1
000168  e59f10dc          LDR      r1,|L1.588|
00016c  e5c10000          STRB     r0,[r1,#0]  ; mSpaceCounter
;;;132                        
;;;133                        if(mSpaceCounter[SPACE_INDEX_1] >= 3)
000170  e2810000          ADD      r0,r1,#0
000174  e5d00000          LDRB     r0,[r0,#0]  ; mSpaceCounter
000178  e3500003          CMP      r0,#3
00017c  ba000009          BLT      |L1.424|
;;;134                        {
;;;135                            #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;136                            sysprintf(" -start- SPACE_DRV_1 get car: counter = %d, set TRUE  ---\r\n", mSpaceCounter[SPACE_INDEX_1]); 
000180  e2810000          ADD      r0,r1,#0
000184  e5d01000          LDRB     r1,[r0,#0]  ; mSpaceCounter
000188  e28f00c0          ADR      r0,|L1.592|
00018c  ebfffffe          BL       sysprintf
;;;137                            #endif
;;;138                            mSpaceStatusTmp[SPACE_INDEX_1] = TRUE;
000190  e3a00001          MOV      r0,#1
000194  e5cd0000          STRB     r0,[sp,#0]
;;;139                            mSpaceCounter[SPACE_INDEX_1] = 3;
000198  e3a00003          MOV      r0,#3
00019c  e59f10a8          LDR      r1,|L1.588|
0001a0  e5c10000          STRB     r0,[r1,#0]  ; mSpaceCounter
0001a4  ea00005a          B        |L1.788|
                  |L1.424|
;;;140                        }
;;;141                        else
;;;142                        {
;;;143                            #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;144                            sysprintf(" -start- SPACE_DRV_1 get car: counter = %d, Set FALSE ---\r\n", mSpaceCounter[SPACE_INDEX_1]); 
0001a8  e59f009c          LDR      r0,|L1.588|
0001ac  e5d01000          LDRB     r1,[r0,#0]  ; mSpaceCounter
0001b0  e28f00d4          ADR      r0,|L1.652|
0001b4  ebfffffe          BL       sysprintf
;;;145                            #endif
;;;146                            mSpaceStatusTmp[SPACE_INDEX_1] = FALSE;
0001b8  e3a00000          MOV      r0,#0
0001bc  e5cd0000          STRB     r0,[sp,#0]
0001c0  ea000053          B        |L1.788|
                  |L1.452|
;;;147                        }
;;;148                    }
;;;149                    else
;;;150                    {
;;;151                        #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;152                        sysprintf(" -start- SPACE_DRV_1 no car: Set FALSE ---\r\n"); 
0001c4  e28f00fc          ADR      r0,|L1.712|
0001c8  ebfffffe          BL       sysprintf
;;;153                        #endif
;;;154                        mSpaceStatusTmp[SPACE_INDEX_1] = FALSE;
0001cc  e3a00000          MOV      r0,#0
0001d0  e5cd0000          STRB     r0,[sp,#0]
;;;155                        mSpaceCounter[SPACE_INDEX_1] = 0;
0001d4  e59f1070          LDR      r1,|L1.588|
0001d8  e5c10000          STRB     r0,[r1,#0]  ; mSpaceCounter
0001dc  ea00004c          B        |L1.788|
                  |L1.480|
                          DCD      spaceDrvIgnoreRun
                  |L1.484|
0001e4  5b735d00          DCB      "[s]",0
                  |L1.488|
                          DCD      spaceDrvPowerStatus
                  |L1.492|
                          DCD      xSemaphore
                  |L1.496|
                          DCD      threadWaitTime
                  |L1.500|
0001f4  76537061          DCB      "vSpaceDrvTask ignore---\r\n",0
0001f8  63654472
0001fc  76546173
000200  6b206967
000204  6e6f7265
000208  2d2d2d0d
00020c  0a00    
00020e  00                DCB      0
00020f  00                DCB      0
                  |L1.528|
                          DCD      pDistInterface
                  |L1.532|
                          DCD      mSpaceDist
                  |L1.536|
000218  202d7374          DCB      " -start- SPACE_DRV_1 detectResult = %d cm  ---\r\n",0
00021c  6172742d
000220  20535041
000224  43455f44
000228  52565f31
00022c  20646574
000230  65637452
000234  6573756c
000238  74203d20
00023c  25642063
000240  6d20202d
000244  2d2d0d0a
000248  00      
000249  00                DCB      0
00024a  00                DCB      0
00024b  00                DCB      0
                  |L1.588|
                          DCD      mSpaceCounter
                  |L1.592|
000250  202d7374          DCB      " -start- SPACE_DRV_1 get car: counter = %d, set TRUE  -"
000254  6172742d
000258  20535041
00025c  43455f44
000260  52565f31
000264  20676574
000268  20636172
00026c  3a20636f
000270  756e7465
000274  72203d20
000278  25642c20
00027c  73657420
000280  54525545
000284  20202d  
000287  2d2d0d0a          DCB      "--\r\n",0
00028b  00      
                  |L1.652|
00028c  202d7374          DCB      " -start- SPACE_DRV_1 get car: counter = %d, Set FALSE -"
000290  6172742d
000294  20535041
000298  43455f44
00029c  52565f31
0002a0  20676574
0002a4  20636172
0002a8  3a20636f
0002ac  756e7465
0002b0  72203d20
0002b4  25642c20
0002b8  53657420
0002bc  46414c53
0002c0  45202d  
0002c3  2d2d0d0a          DCB      "--\r\n",0
0002c7  00      
                  |L1.712|
0002c8  202d7374          DCB      " -start- SPACE_DRV_1 no car: Set FALSE ---\r\n",0
0002cc  6172742d
0002d0  20535041
0002d4  43455f44
0002d8  52565f31
0002dc  206e6f20
0002e0  6361723a
0002e4  20536574
0002e8  2046414c
0002ec  5345202d
0002f0  2d2d0d0a
0002f4  00      
0002f5  00                DCB      0
0002f6  00                DCB      0
0002f7  00                DCB      0
                  |L1.760|
;;;156                    }
;;;157                }
;;;158                else
;;;159                {
;;;160                    mSpaceDist[DIST_DEVICE_1] = 0;
0002f8  e3a00000          MOV      r0,#0
0002fc  e51f10f0          LDR      r1,|L1.532|
000300  e5810000          STR      r0,[r1,#0]  ; mSpaceDist
;;;161                    MeterSetErrorCode(METER_ERROR_CODE_SPSCE_DRV);                
000304  e3a00020          MOV      r0,#0x20
000308  ebfffffe          BL       MeterSetErrorCode
;;;162                    #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;163                    sysprintf(" -error- SPACE_DRV_1   ---\r\n"); 
00030c  e28f00fc          ADR      r0,|L1.1040|
000310  ebfffffe          BL       sysprintf
                  |L1.788|
;;;164                    #endif
;;;165                    #warning need check here
;;;166                }
;;;167                if(pDistInterface->measureDistFunc(DIST_DEVICE_2, &detectResult))
000314  e51f010c          LDR      r0,|L1.528|
000318  e5900000          LDR      r0,[r0,#0]  ; pDistInterface
00031c  e28d1004          ADD      r1,sp,#4
000320  e5902004          LDR      r2,[r0,#4]
000324  e3a00001          MOV      r0,#1
000328  e12fff32          BLX      r2
00032c  e3500000          CMP      r0,#0
000330  0a000029          BEQ      |L1.988|
;;;168                {
;;;169                    mSpaceDist[DIST_DEVICE_2] = detectResult;
000334  e51f1128          LDR      r1,|L1.532|
000338  e59d0004          LDR      r0,[sp,#4]
00033c  e5810004          STR      r0,[r1,#4]  ; mSpaceDist
;;;170                    #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;171                    sysprintf(" -start- SPACE_DRV_2 detectResult = %d cm  ---\r\n", detectResult); 
000340  e28f00e8          ADR      r0,|L1.1072|
000344  e59d1004          LDR      r1,[sp,#4]
000348  ebfffffe          BL       sysprintf
;;;172                    #endif
;;;173                    if(detectResult < 80)
00034c  e59d0004          LDR      r0,[sp,#4]
000350  e3500050          CMP      r0,#0x50
000354  aa000019          BGE      |L1.960|
;;;174                    {
;;;175                        
;;;176                        mSpaceCounter[SPACE_INDEX_2]++;
000358  e51f0114          LDR      r0,|L1.588|
00035c  e5d00001          LDRB     r0,[r0,#1]  ; mSpaceCounter
000360  e2800001          ADD      r0,r0,#1
000364  e51f1120          LDR      r1,|L1.588|
000368  e5c10001          STRB     r0,[r1,#1]  ; mSpaceCounter
;;;177                        
;;;178                        if(mSpaceCounter[SPACE_INDEX_2] >= 3)
00036c  e2810000          ADD      r0,r1,#0
000370  e5d00001          LDRB     r0,[r0,#1]  ; mSpaceCounter
000374  e3500003          CMP      r0,#3
000378  ba000009          BLT      |L1.932|
;;;179                        {
;;;180                            #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;181                            sysprintf(" -start- SPACE_DRV_2 get car: counter = %d, set TRUE  ---\r\n", mSpaceCounter[SPACE_INDEX_2]); 
00037c  e2810000          ADD      r0,r1,#0
000380  e5d01001          LDRB     r1,[r0,#1]  ; mSpaceCounter
000384  e28f00d8          ADR      r0,|L1.1124|
000388  ebfffffe          BL       sysprintf
;;;182                            #endif
;;;183                            mSpaceStatusTmp[SPACE_INDEX_2] = TRUE;
00038c  e3a00001          MOV      r0,#1
000390  e5cd0001          STRB     r0,[sp,#1]
;;;184                            mSpaceCounter[SPACE_INDEX_2] = 3;
000394  e3a00003          MOV      r0,#3
000398  e51f1154          LDR      r1,|L1.588|
00039c  e5c10001          STRB     r0,[r1,#1]  ; mSpaceCounter
0003a0  ea000014          B        |L1.1016|
                  |L1.932|
;;;185                        }
;;;186                        else
;;;187                        {
;;;188                            #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;189                            sysprintf(" -start- SPACE_DRV_2 get car: counter = %d, Set FALSE ---\r\n", mSpaceCounter[SPACE_INDEX_2]); 
0003a4  e51f0160          LDR      r0,|L1.588|
0003a8  e5d01001          LDRB     r1,[r0,#1]  ; mSpaceCounter
0003ac  e28f00ec          ADR      r0,|L1.1184|
0003b0  ebfffffe          BL       sysprintf
;;;190                            #endif
;;;191                            mSpaceStatusTmp[SPACE_INDEX_2] = FALSE;
0003b4  e3a00000          MOV      r0,#0
0003b8  e5cd0001          STRB     r0,[sp,#1]
0003bc  ea00000d          B        |L1.1016|
                  |L1.960|
;;;192                        }
;;;193                    }
;;;194                    else
;;;195                    {
;;;196                        #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;197                        sysprintf(" -start- SPACE_DRV_2 no car: Set FALSE ---\r\n"); 
0003c0  e28f0f45          ADR      r0,|L1.1244|
0003c4  ebfffffe          BL       sysprintf
;;;198                        #endif
;;;199                        mSpaceStatusTmp[SPACE_INDEX_2] = FALSE;
0003c8  e3a00000          MOV      r0,#0
0003cc  e5cd0001          STRB     r0,[sp,#1]
;;;200                        mSpaceCounter[SPACE_INDEX_2] = 0;
0003d0  e51f118c          LDR      r1,|L1.588|
0003d4  e5c10001          STRB     r0,[r1,#1]  ; mSpaceCounter
0003d8  ea000006          B        |L1.1016|
                  |L1.988|
;;;201                    }
;;;202                }
;;;203                else
;;;204                {
;;;205                    mSpaceDist[DIST_DEVICE_2] = 0;
0003dc  e3a00000          MOV      r0,#0
0003e0  e51f11d4          LDR      r1,|L1.532|
0003e4  e5810004          STR      r0,[r1,#4]  ; mSpaceDist
;;;206                    MeterSetErrorCode(METER_ERROR_CODE_SPSCE_DRV);   
0003e8  e3a00020          MOV      r0,#0x20
0003ec  ebfffffe          BL       MeterSetErrorCode
;;;207                    #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;208                    sysprintf(" -error- SPACE_DRV_1   ---\r\n"); 
0003f0  e28f0018          ADR      r0,|L1.1040|
0003f4  ebfffffe          BL       sysprintf
                  |L1.1016|
;;;209                    #endif
;;;210                    #warning need check here
;;;211                }
;;;212                mSpaceStatus[SPACE_INDEX_1] = mSpaceStatusTmp[SPACE_INDEX_1];
0003f8  e5dd0000          LDRB     r0,[sp,#0]
0003fc  e59f1108          LDR      r1,|L1.1292|
000400  e5c10000          STRB     r0,[r1,#0]  ; mSpaceStatus
;;;213                mSpaceStatus[SPACE_INDEX_2] = mSpaceStatusTmp[SPACE_INDEX_2];
000404  e5dd0001          LDRB     r0,[sp,#1]
000408  e5c10001          STRB     r0,[r1,#1]  ; mSpaceStatus
00040c  eaffff2c          B        |L1.196|
                  |L1.1040|
000410  202d6572          DCB      " -error- SPACE_DRV_1   ---\r\n",0
000414  726f722d
000418  20535041
00041c  43455f44
000420  52565f31
000424  2020202d
000428  2d2d0d0a
00042c  00      
00042d  00                DCB      0
00042e  00                DCB      0
00042f  00                DCB      0
                  |L1.1072|
000430  202d7374          DCB      " -start- SPACE_DRV_2 detectResult = %d cm  ---\r\n",0
000434  6172742d
000438  20535041
00043c  43455f44
000440  52565f32
000444  20646574
000448  65637452
00044c  6573756c
000450  74203d20
000454  25642063
000458  6d20202d
00045c  2d2d0d0a
000460  00      
000461  00                DCB      0
000462  00                DCB      0
000463  00                DCB      0
                  |L1.1124|
000464  202d7374          DCB      " -start- SPACE_DRV_2 get car: counter = %d, set TRUE  -"
000468  6172742d
00046c  20535041
000470  43455f44
000474  52565f32
000478  20676574
00047c  20636172
000480  3a20636f
000484  756e7465
000488  72203d20
00048c  25642c20
000490  73657420
000494  54525545
000498  20202d  
00049b  2d2d0d0a          DCB      "--\r\n",0
00049f  00      
                  |L1.1184|
0004a0  202d7374          DCB      " -start- SPACE_DRV_2 get car: counter = %d, Set FALSE -"
0004a4  6172742d
0004a8  20535041
0004ac  43455f44
0004b0  52565f32
0004b4  20676574
0004b8  20636172
0004bc  3a20636f
0004c0  756e7465
0004c4  72203d20
0004c8  25642c20
0004cc  53657420
0004d0  46414c53
0004d4  45202d  
0004d7  2d2d0d0a          DCB      "--\r\n",0
0004db  00      
                  |L1.1244|
0004dc  202d7374          DCB      " -start- SPACE_DRV_2 no car: Set FALSE ---\r\n",0
0004e0  6172742d
0004e4  20535041
0004e8  43455f44
0004ec  52565f32
0004f0  206e6f20
0004f4  6361723a
0004f8  20536574
0004fc  2046414c
000500  5345202d
000504  2d2d0d0a
000508  00      
000509  00                DCB      0
00050a  00                DCB      0
00050b  00                DCB      0
                  |L1.1292|
                          DCD      mSpaceStatus
                          ENDP

                  swInit PROC
;;;230    
;;;231    static BOOL swInit(void)
000510  e92d401c          PUSH     {r2-r4,lr}
;;;232    {   
;;;233        PowerRegCallback(&SpaceDrvPowerCallabck);
000514  e59f014c          LDR      r0,|L1.1640|
000518  ebfffffe          BL       PowerRegCallback
;;;234        xSemaphore = xSemaphoreCreateBinary();
00051c  e3a02003          MOV      r2,#3
000520  e3a01000          MOV      r1,#0
000524  e3a00001          MOV      r0,#1
000528  ebfffffe          BL       xQueueGenericCreate
00052c  e51f1348          LDR      r1,|L1.492|
000530  e5810000          STR      r0,[r1,#0]  ; xSemaphore
;;;235        xTaskCreate( vSpaceDrvTask, "vSpaceDrvTask", 2048, NULL, SPACE_DRV_THREAD_PROI, NULL );
000534  e3a00000          MOV      r0,#0
000538  e3a01004          MOV      r1,#4
00053c  e58d0004          STR      r0,[sp,#4]
000540  e1a03000          MOV      r3,r0
000544  e3a02b02          MOV      r2,#0x800
000548  e58d1000          STR      r1,[sp,#0]
00054c  e28f1f46          ADR      r1,|L1.1644|
000550  e59f0124          LDR      r0,|L1.1660|
000554  ebfffffe          BL       xTaskCreate
;;;236        return TRUE;
000558  e3a00001          MOV      r0,#1
;;;237    }
00055c  e8bd801c          POP      {r2-r4,pc}
;;;238    
                          ENDP

                  SpaceDrvInit PROC
;;;241    /*-----------------------------------------*/
;;;242    BOOL SpaceDrvInit(BOOL testModeFlag)
000560  e92d4010          PUSH     {r4,lr}
;;;243    {
000564  e1a04000          MOV      r4,r0
;;;244        sysprintf("SpaceDrvInit!!\n");
000568  e28f0e11          ADR      r0,|L1.1664|
00056c  ebfffffe          BL       sysprintf
;;;245        pDistInterface = DistGetInterface(SPACE_DEV_INTERFACE_INDEX);
000570  e3a00000          MOV      r0,#0
000574  ebfffffe          BL       DistGetInterface
000578  e51f1370          LDR      r1,|L1.528|
00057c  e5810000          STR      r0,[r1,#0]  ; pDistInterface
;;;246        if(pDistInterface == NULL)
000580  e2810000          ADD      r0,r1,#0
000584  e5900000          LDR      r0,[r0,#0]  ; pDistInterface
000588  e3500000          CMP      r0,#0
00058c  1a000003          BNE      |L1.1440|
;;;247        {
;;;248            sysprintf("SpaceDrvInit ERROR (pDistInterface == NULL)!!\n");
000590  e28f00f8          ADR      r0,|L1.1680|
000594  ebfffffe          BL       sysprintf
;;;249            return FALSE;
000598  e3a00000          MOV      r0,#0
                  |L1.1436|
;;;250        }
;;;251        if(pDistInterface->initFunc() == FALSE)
;;;252        {
;;;253            sysprintf("SpaceDrvInit ERROR (initFunc false)!!\n");
;;;254            return FALSE;
;;;255        }
;;;256        if(swInit() == FALSE)
;;;257        {
;;;258            sysprintf("SpaceDrvInit ERROR (swInit false)!!\n");
;;;259            return FALSE;
;;;260        }
;;;261        
;;;262        sysprintf("SpaceDrvInit OK!!\n");
;;;263        return TRUE;
;;;264    }
00059c  e8bd8010          POP      {r4,pc}
                  |L1.1440|
0005a0  e51f1398          LDR      r1,|L1.528|
0005a4  e5911000          LDR      r1,[r1,#0]            ;251  ; pDistInterface
0005a8  e5910000          LDR      r0,[r1,#0]            ;251
0005ac  e12fff30          BLX      r0                    ;251
0005b0  e3500000          CMP      r0,#0                 ;251
0005b4  1a000003          BNE      |L1.1480|
0005b8  e28f0c01          ADR      r0,|L1.1728|
0005bc  ebfffffe          BL       sysprintf
0005c0  e3a00000          MOV      r0,#0                 ;254
0005c4  eafffff4          B        |L1.1436|
                  |L1.1480|
0005c8  ebfffffe          BL       swInit
0005cc  e3500000          CMP      r0,#0                 ;256
0005d0  1a000003          BNE      |L1.1508|
0005d4  e28f0f43          ADR      r0,|L1.1768|
0005d8  ebfffffe          BL       sysprintf
0005dc  e3a00000          MOV      r0,#0                 ;259
0005e0  eaffffed          B        |L1.1436|
                  |L1.1508|
0005e4  e28f0f49          ADR      r0,|L1.1808|
0005e8  ebfffffe          BL       sysprintf
0005ec  e3a00001          MOV      r0,#1                 ;263
0005f0  eaffffe9          B        |L1.1436|
;;;265    
                          ENDP

                  GetSpaceStatus PROC
;;;266    BOOL GetSpaceStatus(uint8_t index)
0005f4  e1a01000          MOV      r1,r0
;;;267    {
;;;268        return mSpaceStatus[index];
0005f8  e51f00f4          LDR      r0,|L1.1292|
0005fc  e7d00001          LDRB     r0,[r0,r1]
;;;269    }
000600  e12fff1e          BX       lr
;;;270    
                          ENDP

                  GetSpaceDist PROC
;;;271    int GetSpaceDist(uint8_t index)
000604  e1a01000          MOV      r1,r0
;;;272    {
;;;273        return mSpaceDist[index];
000608  e51f03fc          LDR      r0,|L1.532|
00060c  e7900101          LDR      r0,[r0,r1,LSL #2]
;;;274    }
000610  e12fff1e          BX       lr
;;;275    void SetSpaceStatus(uint8_t index, BOOL status)
                          ENDP

                  SetSpaceStatus PROC
000614  e92d4070          PUSH     {r4-r6,lr}
;;;276    {
000618  e1a04000          MOV      r4,r0
00061c  e1a05001          MOV      r5,r1
;;;277        if(status)
000620  e3550000          CMP      r5,#0
000624  0a000006          BEQ      |L1.1604|
;;;278        {
;;;279            #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;280            sysprintf(" -- SetSpaceStatus [%] to be TRUE ---\r\n", index); 
000628  e1a01004          MOV      r1,r4
00062c  e28f00f0          ADR      r0,|L1.1828|
000630  ebfffffe          BL       sysprintf
;;;281            #endif
;;;282            mSpaceCounter[index] = 3;
000634  e3a00003          MOV      r0,#3
000638  e51f13f4          LDR      r1,|L1.588|
00063c  e7c10004          STRB     r0,[r1,r4]
000640  ea000005          B        |L1.1628|
                  |L1.1604|
;;;283        }
;;;284        else
;;;285        {
;;;286            #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;287            sysprintf(" -- SetSpaceStatus [%] to be FALSE ---\r\n", index); 
000644  e1a01004          MOV      r1,r4
000648  e28f00fc          ADR      r0,|L1.1868|
00064c  ebfffffe          BL       sysprintf
;;;288            #endif
;;;289            mSpaceCounter[index] = 0;
000650  e3a00000          MOV      r0,#0
000654  e51f1410          LDR      r1,|L1.588|
000658  e7c10004          STRB     r0,[r1,r4]
                  |L1.1628|
;;;290        }
;;;291        mSpaceStatus[index] = status;
00065c  e51f0158          LDR      r0,|L1.1292|
000660  e7c05004          STRB     r5,[r0,r4]
;;;292        
;;;293    }
000664  e8bd8070          POP      {r4-r6,pc}
                  |L1.1640|
                          DCD      SpaceDrvPowerCallabck
                  |L1.1644|
00066c  76537061          DCB      "vSpaceDrvTask",0
000670  63654472
000674  76546173
000678  6b00    
00067a  00                DCB      0
00067b  00                DCB      0
                  |L1.1660|
                          DCD      vSpaceDrvTask
                  |L1.1664|
000680  53706163          DCB      "SpaceDrvInit!!\n",0
000684  65447276
000688  496e6974
00068c  21210a00
                  |L1.1680|
000690  53706163          DCB      "SpaceDrvInit ERROR (pDistInterface == NULL)!!\n",0
000694  65447276
000698  496e6974
00069c  20455252
0006a0  4f522028
0006a4  70446973
0006a8  74496e74
0006ac  65726661
0006b0  6365203d
0006b4  3d204e55
0006b8  4c4c2921
0006bc  210a00  
0006bf  00                DCB      0
                  |L1.1728|
0006c0  53706163          DCB      "SpaceDrvInit ERROR (initFunc false)!!\n",0
0006c4  65447276
0006c8  496e6974
0006cc  20455252
0006d0  4f522028
0006d4  696e6974
0006d8  46756e63
0006dc  2066616c
0006e0  73652921
0006e4  210a00  
0006e7  00                DCB      0
                  |L1.1768|
0006e8  53706163          DCB      "SpaceDrvInit ERROR (swInit false)!!\n",0
0006ec  65447276
0006f0  496e6974
0006f4  20455252
0006f8  4f522028
0006fc  7377496e
000700  69742066
000704  616c7365
000708  2921210a
00070c  00      
00070d  00                DCB      0
00070e  00                DCB      0
00070f  00                DCB      0
                  |L1.1808|
000710  53706163          DCB      "SpaceDrvInit OK!!\n",0
000714  65447276
000718  496e6974
00071c  204f4b21
000720  210a00  
000723  00                DCB      0
                  |L1.1828|
000724  202d2d20          DCB      " -- SetSpaceStatus [%] to be TRUE ---\r\n",0
000728  53657453
00072c  70616365
000730  53746174
000734  7573205b
000738  255d2074
00073c  6f206265
000740  20545255
000744  45202d2d
000748  2d0d0a00
                  |L1.1868|
00074c  202d2d20          DCB      " -- SetSpaceStatus [%] to be FALSE ---\r\n",0
000750  53657453
000754  70616365
000758  53746174
00075c  7573205b
000760  255d2074
000764  6f206265
000768  2046414c
00076c  5345202d
000770  2d2d0d0a
000774  00      
000775  00                DCB      0
000776  00                DCB      0
000777  00                DCB      0
                          ENDP

                  StartSpaceDrv PROC
;;;294    void StartSpaceDrv(void)
000778  e92d4010          PUSH     {r4,lr}
;;;295    {
;;;296        #if(ENABLE_SPACE_DRV_DEBUG_MESSAGE)
;;;297        sysprintf(" --StartSpaceDrv ---\r\n"); 
00077c  e28f0028          ADR      r0,|L1.1964|
000780  ebfffffe          BL       sysprintf
;;;298        #endif
;;;299        spaceDrvPowerStatus = FALSE;
000784  e3a00000          MOV      r0,#0
000788  e51f15a8          LDR      r1,|L1.488|
00078c  e5c10000          STRB     r0,[r1,#0]  ; spaceDrvPowerStatus
;;;300        xSemaphoreGive(xSemaphore);
000790  e3a03000          MOV      r3,#0
000794  e1a02003          MOV      r2,r3
000798  e1a01003          MOV      r1,r3
00079c  e51f05b8          LDR      r0,|L1.492|
0007a0  e5900000          LDR      r0,[r0,#0]  ; xSemaphore
0007a4  ebfffffe          BL       xQueueGenericSend
;;;301    }
0007a8  e8bd8010          POP      {r4,pc}
;;;302    
                          ENDP

                  |L1.1964|
0007ac  202d2d53          DCB      " --StartSpaceDrv ---\r\n",0
0007b0  74617274
0007b4  53706163
0007b8  65447276
0007bc  202d2d2d
0007c0  0d0a00  
0007c3  00                DCB      0

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  205b5370          DCB      " [SpaceDrv] ",0
000004  61636544
000008  72765d20
00000c  00      

                          AREA ||.data||, DATA, ALIGN=2

                  mSpaceStatus
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  threadWaitTime
                          DCD      0xffffffff
                  spaceDrvPowerStatus
000008  01                DCB      0x01
                  spaceDrvIgnoreRun
000009  000000            DCB      0x00,0x00,0x00
                  SpaceDrvPowerCallabck
                          DCD      ||.conststring||
                          DCD      SpaceDrvPreOffCallback
                          DCD      SpaceDrvOffCallback
                          DCD      SpaceDrvOnCallback
                          DCD      SpaceDrvCheckStatus
                  pDistInterface
                          DCD      0x00000000
                  mSpaceDist
                          %        8
                  mSpaceCounter
00002c  00000000          DCB      0x00,0x00,0x00,0x00
                  xSemaphore
                          DCD      0x00000000
