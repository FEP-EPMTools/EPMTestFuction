; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\yaffs_packedtags2.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\yaffs_packedtags2.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\yaffs_packedtags2.crf ..\..\common\src\BSP\ThirdParty\yaffs2\yaffs_packedtags2.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  yaffs_dump_packed_tags2_tags_only PROC
;;;41     
;;;42     static void yaffs_dump_packed_tags2_tags_only(
000000  e92d4038          PUSH     {r3-r5,lr}
;;;43     				const struct yaffs_packed_tags2_tags_only *ptt)
;;;44     {
000004  e1a04000          MOV      r4,r0
;;;45     	yaffs_trace(YAFFS_TRACE_MTD,
000008  e59f0214          LDR      r0,|L1.548|
00000c  e1d000b0          LDRH     r0,[r0,#0]  ; yaffs_trace_mask
000010  e3100901          TST      r0,#0x4000
000014  0a000004          BEQ      |L1.44|
000018  e5940000          LDR      r0,[r4,#0]
00001c  e58d0000          STR      r0,[sp,#0]
000020  e28f0c02          ADR      r0,|L1.552|
000024  e994000e          LDMIB    r4,{r1-r3}
000028  ebfffffe          BL       sysprintf
                  |L1.44|
;;;46     		"packed tags obj %d chunk %d byte %d seq %d",
;;;47     		ptt->obj_id, ptt->chunk_id, ptt->n_bytes, ptt->seq_number);
;;;48     }
00002c  e8bd8038          POP      {r3-r5,pc}
;;;49     
                          ENDP

                  yaffs_dump_packed_tags2 PROC
;;;50     static void yaffs_dump_packed_tags2(const struct yaffs_packed_tags2 *pt)
000030  e92d4010          PUSH     {r4,lr}
;;;51     {
000034  e1a04000          MOV      r4,r0
;;;52     	yaffs_dump_packed_tags2_tags_only(&pt->t);
000038  e1a00004          MOV      r0,r4
00003c  ebfffffe          BL       yaffs_dump_packed_tags2_tags_only
;;;53     }
000040  e8bd8010          POP      {r4,pc}
;;;54     
                          ENDP

                  yaffs_dump_tags2 PROC
;;;55     static void yaffs_dump_tags2(const struct yaffs_ext_tags *t)
000044  e92d4010          PUSH     {r4,lr}
;;;56     {
000048  e24dd018          SUB      sp,sp,#0x18
00004c  e1a04000          MOV      r4,r0
;;;57     	yaffs_trace(YAFFS_TRACE_MTD,
000050  e59f01cc          LDR      r0,|L1.548|
000054  e1d000b0          LDRH     r0,[r0,#0]  ; yaffs_trace_mask
000058  e3100901          TST      r0,#0x4000
00005c  0a00000d          BEQ      |L1.152|
000060  e5940020          LDR      r0,[r4,#0x20]
000064  e594101c          LDR      r1,[r4,#0x1c]
000068  e594200c          LDR      r2,[r4,#0xc]
00006c  e5943018          LDR      r3,[r4,#0x18]
000070  e58d0014          STR      r0,[sp,#0x14]
000074  e58d1010          STR      r1,[sp,#0x10]
000078  e1cd20f8          STRD     r2,r3,[sp,#8]
00007c  e9940003          LDMIB    r4,{r0,r1}
000080  e1cd00f0          STRD     r0,r1,[sp,#0]
000084  e5942014          LDR      r2,[r4,#0x14]
000088  e5943000          LDR      r3,[r4,#0]
00008c  e5d41010          LDRB     r1,[r4,#0x10]
000090  e59f01c4          LDR      r0,|L1.604|
000094  ebfffffe          BL       sysprintf
                  |L1.152|
;;;58     		"ext.tags eccres %d blkbad %d chused %d obj %d chunk%d byte %d del %d ser %d seq %d",
;;;59     		t->ecc_result, t->block_bad, t->chunk_used, t->obj_id,
;;;60     		t->chunk_id, t->n_bytes, t->is_deleted, t->serial_number,
;;;61     		t->seq_number);
;;;62     
;;;63     }
000098  e28dd018          ADD      sp,sp,#0x18
00009c  e8bd8010          POP      {r4,pc}
;;;64     
                          ENDP

                  yaffs_check_tags_extra_packable PROC
;;;65     static int yaffs_check_tags_extra_packable(const struct yaffs_ext_tags *t)
0000a0  e1a01000          MOV      r1,r0
;;;66     {
;;;67     	if (t->chunk_id != 0 || !t->extra_available)
0000a4  e5910008          LDR      r0,[r1,#8]
0000a8  e3500000          CMP      r0,#0
0000ac  1a000002          BNE      |L1.188|
0000b0  e5910024          LDR      r0,[r1,#0x24]
0000b4  e3500000          CMP      r0,#0
0000b8  1a000001          BNE      |L1.196|
                  |L1.188|
;;;68     		return 0;
0000bc  e3a00000          MOV      r0,#0
                  |L1.192|
;;;69     
;;;70     	/* Check if the file size is too long to store */
;;;71     	if (t->extra_obj_type == YAFFS_OBJECT_TYPE_FILE &&
;;;72     	    (t->extra_file_size >> 31) != 0)
;;;73     		return 0;
;;;74     	return 1;
;;;75     }
0000c0  e12fff1e          BX       lr
                  |L1.196|
0000c4  e5d10034          LDRB     r0,[r1,#0x34]         ;71
0000c8  e3500001          CMP      r0,#1                 ;71
0000cc  1a00000c          BNE      |L1.260|
0000d0  e5912038          LDR      r2,[r1,#0x38]         ;72
0000d4  e1a02fa2          LSR      r2,r2,#31             ;72
0000d8  e591003c          LDR      r0,[r1,#0x3c]         ;72
0000dc  e1823080          ORR      r3,r2,r0,LSL #1       ;72
0000e0  e1a0cfc0          ASR      r12,r0,#31            ;72
0000e4  e3a02000          MOV      r2,#0                 ;72
0000e8  e1a00002          MOV      r0,r2                 ;72
0000ec  e0222003          EOR      r2,r2,r3              ;72
0000f0  e020000c          EOR      r0,r0,r12             ;72
0000f4  e1900002          ORRS     r0,r0,r2              ;72
0000f8  0a000001          BEQ      |L1.260|
0000fc  e3a00000          MOV      r0,#0                 ;73
000100  eaffffee          B        |L1.192|
                  |L1.260|
000104  e3a00001          MOV      r0,#1                 ;74
000108  eaffffec          B        |L1.192|
;;;76     
                          ENDP

                  yaffs_pack_tags2_tags_only PROC
;;;77     void yaffs_pack_tags2_tags_only(struct yaffs_packed_tags2_tags_only *ptt,
00010c  e92d4070          PUSH     {r4-r6,lr}
;;;78     				const struct yaffs_ext_tags *t)
;;;79     {
000110  e1a04000          MOV      r4,r0
000114  e1a05001          MOV      r5,r1
;;;80     	ptt->chunk_id = t->chunk_id;
000118  e5950008          LDR      r0,[r5,#8]
00011c  e5840008          STR      r0,[r4,#8]
;;;81     	ptt->seq_number = t->seq_number;
000120  e5950020          LDR      r0,[r5,#0x20]
000124  e5840000          STR      r0,[r4,#0]
;;;82     	ptt->n_bytes = t->n_bytes;
000128  e595000c          LDR      r0,[r5,#0xc]
00012c  e584000c          STR      r0,[r4,#0xc]
;;;83     	ptt->obj_id = t->obj_id;
000130  e5950004          LDR      r0,[r5,#4]
000134  e5840004          STR      r0,[r4,#4]
;;;84     
;;;85     	/* Only store extra tags for object headers.
;;;86     	 * If it is a file then only store  if the file size is short\
;;;87     	 * enough to fit.
;;;88     	 */
;;;89     	if (yaffs_check_tags_extra_packable(t)) {
000138  e1a00005          MOV      r0,r5
00013c  ebfffffe          BL       yaffs_check_tags_extra_packable
000140  e3500000          CMP      r0,#0
000144  0a000023          BEQ      |L1.472|
;;;90     		/* Store the extra header info instead */
;;;91     		/* We save the parent object in the chunk_id */
;;;92     		ptt->chunk_id = EXTRA_HEADER_INFO_FLAG | t->extra_parent_id;
000148  e5950028          LDR      r0,[r5,#0x28]
00014c  e3800102          ORR      r0,r0,#0x80000000
000150  e5840008          STR      r0,[r4,#8]
;;;93     		if (t->extra_is_shrink)
000154  e595002c          LDR      r0,[r5,#0x2c]
000158  e3500000          CMP      r0,#0
00015c  0a000002          BEQ      |L1.364|
;;;94     			ptt->chunk_id |= EXTRA_SHRINK_FLAG;
000160  e5940008          LDR      r0,[r4,#8]
000164  e3800101          ORR      r0,r0,#0x40000000
000168  e5840008          STR      r0,[r4,#8]
                  |L1.364|
;;;95     		if (t->extra_shadows)
00016c  e5950030          LDR      r0,[r5,#0x30]
000170  e3500000          CMP      r0,#0
000174  0a000002          BEQ      |L1.388|
;;;96     			ptt->chunk_id |= EXTRA_SHADOWS_FLAG;
000178  e5940008          LDR      r0,[r4,#8]
00017c  e3800202          ORR      r0,r0,#0x20000000
000180  e5840008          STR      r0,[r4,#8]
                  |L1.388|
;;;97     
;;;98     		ptt->obj_id &= ~EXTRA_OBJECT_TYPE_MASK;
000184  e5940004          LDR      r0,[r4,#4]
000188  e3c0020f          BIC      r0,r0,#0xf0000000
00018c  e5840004          STR      r0,[r4,#4]
;;;99     		ptt->obj_id |= (t->extra_obj_type << EXTRA_OBJECT_TYPE_SHIFT);
000190  e5940004          LDR      r0,[r4,#4]
000194  e5d51034          LDRB     r1,[r5,#0x34]
000198  e1800e01          ORR      r0,r0,r1,LSL #28
00019c  e5840004          STR      r0,[r4,#4]
;;;100    
;;;101    		if (t->extra_obj_type == YAFFS_OBJECT_TYPE_HARDLINK)
0001a0  e5d50034          LDRB     r0,[r5,#0x34]
0001a4  e3500004          CMP      r0,#4
0001a8  1a000002          BNE      |L1.440|
;;;102    			ptt->n_bytes = t->extra_equiv_id;
0001ac  e5950040          LDR      r0,[r5,#0x40]
0001b0  e584000c          STR      r0,[r4,#0xc]
0001b4  ea000007          B        |L1.472|
                  |L1.440|
;;;103    		else if (t->extra_obj_type == YAFFS_OBJECT_TYPE_FILE)
0001b8  e5d50034          LDRB     r0,[r5,#0x34]
0001bc  e3500001          CMP      r0,#1
0001c0  1a000002          BNE      |L1.464|
;;;104    			ptt->n_bytes = (unsigned) t->extra_file_size;
0001c4  e5950038          LDR      r0,[r5,#0x38]
0001c8  e584000c          STR      r0,[r4,#0xc]
0001cc  ea000001          B        |L1.472|
                  |L1.464|
;;;105    		else
;;;106    			ptt->n_bytes = 0;
0001d0  e3a00000          MOV      r0,#0
0001d4  e584000c          STR      r0,[r4,#0xc]
                  |L1.472|
;;;107    	}
;;;108    
;;;109    	yaffs_dump_packed_tags2_tags_only(ptt);
0001d8  e1a00004          MOV      r0,r4
0001dc  ebfffffe          BL       yaffs_dump_packed_tags2_tags_only
;;;110    	yaffs_dump_tags2(t);
0001e0  e1a00005          MOV      r0,r5
0001e4  ebfffffe          BL       yaffs_dump_tags2
;;;111    }
0001e8  e8bd8070          POP      {r4-r6,pc}
;;;112    
                          ENDP

                  yaffs_pack_tags2 PROC
;;;113    void yaffs_pack_tags2(struct yaffs_packed_tags2 *pt,
0001ec  e92d4070          PUSH     {r4-r6,lr}
;;;114    		      const struct yaffs_ext_tags *t, int tags_ecc)
;;;115    {
0001f0  e1a04000          MOV      r4,r0
0001f4  e1a06001          MOV      r6,r1
0001f8  e1a05002          MOV      r5,r2
;;;116    	yaffs_pack_tags2_tags_only(&pt->t, t);
0001fc  e1a01006          MOV      r1,r6
000200  e1a00004          MOV      r0,r4
000204  ebfffffe          BL       yaffs_pack_tags2_tags_only
;;;117    
;;;118    	if (tags_ecc)
000208  e3550000          CMP      r5,#0
00020c  0a000003          BEQ      |L1.544|
;;;119    		yaffs_ecc_calc_other((unsigned char *)&pt->t,
000210  e2842010          ADD      r2,r4,#0x10
000214  e3a01010          MOV      r1,#0x10
000218  e1a00004          MOV      r0,r4
00021c  ebfffffe          BL       yaffs_ecc_calc_other
                  |L1.544|
;;;120    				    sizeof(struct yaffs_packed_tags2_tags_only),
;;;121    				    &pt->ecc);
;;;122    }
000220  e8bd8070          POP      {r4-r6,pc}
                  |L1.548|
                          DCD      yaffs_trace_mask
                  |L1.552|
000228  79616666          DCB      "yaffs: packed tags obj %d chunk %d byte %d seq %d\n",0
00022c  733a2070
000230  61636b65
000234  64207461
000238  6773206f
00023c  626a2025
000240  64206368
000244  756e6b20
000248  25642062
00024c  79746520
000250  25642073
000254  65712025
000258  640a00  
00025b  00                DCB      0
                  |L1.604|
                          DCD      ||.constdata||
                          ENDP

                  yaffs_unpack_tags2_tags_only PROC
;;;123    
;;;124    void yaffs_unpack_tags2_tags_only(struct yaffs_ext_tags *t,
000260  e92d4070          PUSH     {r4-r6,lr}
;;;125    				  struct yaffs_packed_tags2_tags_only *ptt)
;;;126    {
000264  e1a04000          MOV      r4,r0
000268  e1a05001          MOV      r5,r1
;;;127    	memset(t, 0, sizeof(struct yaffs_ext_tags));
00026c  e3a01048          MOV      r1,#0x48
000270  e1a00004          MOV      r0,r4
000274  ebfffffe          BL       __aeabi_memclr4
;;;128    
;;;129    	if (ptt->seq_number == 0xffffffff)
000278  e5950000          LDR      r0,[r5,#0]
00027c  e3700001          CMN      r0,#1
000280  1a000000          BNE      |L1.648|
                  |L1.644|
;;;130    		return;
;;;131    
;;;132    	t->block_bad = 0;
;;;133    	t->chunk_used = 1;
;;;134    	t->obj_id = ptt->obj_id;
;;;135    	t->chunk_id = ptt->chunk_id;
;;;136    	t->n_bytes = ptt->n_bytes;
;;;137    	t->is_deleted = 0;
;;;138    	t->serial_number = 0;
;;;139    	t->seq_number = ptt->seq_number;
;;;140    
;;;141    	/* Do extra header info stuff */
;;;142    	if (ptt->chunk_id & EXTRA_HEADER_INFO_FLAG) {
;;;143    		t->chunk_id = 0;
;;;144    		t->n_bytes = 0;
;;;145    
;;;146    		t->extra_available = 1;
;;;147    		t->extra_parent_id = ptt->chunk_id & (~(ALL_EXTRA_FLAGS));
;;;148    		t->extra_is_shrink = ptt->chunk_id & EXTRA_SHRINK_FLAG ? 1 : 0;
;;;149    		t->extra_shadows = ptt->chunk_id & EXTRA_SHADOWS_FLAG ? 1 : 0;
;;;150    		t->extra_obj_type = ptt->obj_id >> EXTRA_OBJECT_TYPE_SHIFT;
;;;151    		t->obj_id &= ~EXTRA_OBJECT_TYPE_MASK;
;;;152    
;;;153    		if (t->extra_obj_type == YAFFS_OBJECT_TYPE_HARDLINK)
;;;154    			t->extra_equiv_id = ptt->n_bytes;
;;;155    		else
;;;156    			t->extra_file_size = ptt->n_bytes;
;;;157    	}
;;;158    	yaffs_dump_packed_tags2_tags_only(ptt);
;;;159    	yaffs_dump_tags2(t);
;;;160    }
000284  e8bd8070          POP      {r4-r6,pc}
                  |L1.648|
000288  e3a00000          MOV      r0,#0                 ;132
00028c  e5840014          STR      r0,[r4,#0x14]         ;132
000290  e3a00001          MOV      r0,#1                 ;133
000294  e5840000          STR      r0,[r4,#0]            ;133
000298  e5950004          LDR      r0,[r5,#4]            ;134
00029c  e5840004          STR      r0,[r4,#4]            ;134
0002a0  e5950008          LDR      r0,[r5,#8]            ;135
0002a4  e5840008          STR      r0,[r4,#8]            ;135
0002a8  e595000c          LDR      r0,[r5,#0xc]          ;136
0002ac  e584000c          STR      r0,[r4,#0xc]          ;136
0002b0  e3a00000          MOV      r0,#0                 ;137
0002b4  e5840018          STR      r0,[r4,#0x18]         ;137
0002b8  e584001c          STR      r0,[r4,#0x1c]         ;138
0002bc  e5950000          LDR      r0,[r5,#0]            ;139
0002c0  e5840020          STR      r0,[r4,#0x20]         ;139
0002c4  e5950008          LDR      r0,[r5,#8]            ;142
0002c8  e3100102          TST      r0,#0x80000000        ;142
0002cc  0a00001e          BEQ      |L1.844|
0002d0  e3a00000          MOV      r0,#0                 ;143
0002d4  e5840008          STR      r0,[r4,#8]            ;143
0002d8  e584000c          STR      r0,[r4,#0xc]          ;144
0002dc  e3a00001          MOV      r0,#1                 ;146
0002e0  e5840024          STR      r0,[r4,#0x24]         ;146
0002e4  e5950008          LDR      r0,[r5,#8]            ;147
0002e8  e3c0020f          BIC      r0,r0,#0xf0000000     ;147
0002ec  e5840028          STR      r0,[r4,#0x28]         ;147
0002f0  e5950008          LDR      r0,[r5,#8]            ;148
0002f4  e2000101          AND      r0,r0,#0x40000000     ;148
0002f8  e1a00f20          LSR      r0,r0,#30             ;148
0002fc  e584002c          STR      r0,[r4,#0x2c]         ;148
000300  e5950008          LDR      r0,[r5,#8]            ;149
000304  e2000202          AND      r0,r0,#0x20000000     ;149
000308  e1a00ea0          LSR      r0,r0,#29             ;149
00030c  e5840030          STR      r0,[r4,#0x30]         ;149
000310  e5950004          LDR      r0,[r5,#4]            ;150
000314  e1a00e20          LSR      r0,r0,#28             ;150
000318  e5c40034          STRB     r0,[r4,#0x34]         ;150
00031c  e5940004          LDR      r0,[r4,#4]            ;151
000320  e3c0020f          BIC      r0,r0,#0xf0000000     ;151
000324  e5840004          STR      r0,[r4,#4]            ;151
000328  e5d40034          LDRB     r0,[r4,#0x34]         ;153
00032c  e3500004          CMP      r0,#4                 ;153
000330  1a000002          BNE      |L1.832|
000334  e595000c          LDR      r0,[r5,#0xc]          ;154
000338  e5840040          STR      r0,[r4,#0x40]         ;154
00033c  ea000002          B        |L1.844|
                  |L1.832|
000340  e3a01000          MOV      r1,#0                 ;156
000344  e595000c          LDR      r0,[r5,#0xc]          ;156
000348  e1c403f8          STRD     r0,r1,[r4,#0x38]      ;156
                  |L1.844|
00034c  e1a00005          MOV      r0,r5                 ;158
000350  ebfffffe          BL       yaffs_dump_packed_tags2_tags_only
000354  e1a00004          MOV      r0,r4                 ;159
000358  ebfffffe          BL       yaffs_dump_tags2
00035c  e1a00000          MOV      r0,r0
000360  eaffffc7          B        |L1.644|
;;;161    
                          ENDP

                  yaffs_unpack_tags2 PROC
;;;162    void yaffs_unpack_tags2(struct yaffs_ext_tags *t, struct yaffs_packed_tags2 *pt,
000364  e92d43fe          PUSH     {r1-r9,lr}
;;;163    			int tags_ecc)
;;;164    {
000368  e1a05000          MOV      r5,r0
00036c  e1a04001          MOV      r4,r1
000370  e1a06002          MOV      r6,r2
;;;165    	enum yaffs_ecc_result ecc_result = YAFFS_ECC_RESULT_NO_ERROR;
000374  e3a07001          MOV      r7,#1
;;;166    
;;;167    	if (pt->t.seq_number != 0xffffffff && tags_ecc) {
000378  e5940000          LDR      r0,[r4,#0]
00037c  e3700001          CMN      r0,#1
000380  0a000020          BEQ      |L1.1032|
000384  e3560000          CMP      r6,#0
000388  0a00001e          BEQ      |L1.1032|
;;;168    		/* Chunk is in use and we need to do ECC */
;;;169    
;;;170    		struct yaffs_ecc_other ecc;
;;;171    		int result;
;;;172    		yaffs_ecc_calc_other((unsigned char *)&pt->t,
00038c  e1a0200d          MOV      r2,sp
000390  e3a01010          MOV      r1,#0x10
000394  e1a00004          MOV      r0,r4
000398  ebfffffe          BL       yaffs_ecc_calc_other
;;;173    				sizeof(struct yaffs_packed_tags2_tags_only),
;;;174    				&ecc);
;;;175    		result =
00039c  e1a0300d          MOV      r3,sp
0003a0  e2842010          ADD      r2,r4,#0x10
0003a4  e3a01010          MOV      r1,#0x10
0003a8  e1a00004          MOV      r0,r4
0003ac  ebfffffe          BL       yaffs_ecc_correct_other
0003b0  e1a08000          MOV      r8,r0
;;;176    		    yaffs_ecc_correct_other((unsigned char *)&pt->t,
;;;177    				sizeof(struct yaffs_packed_tags2_tags_only),
;;;178    				&pt->ecc, &ecc);
;;;179    		switch (result) {
0003b4  e3780001          CMN      r8,#1
0003b8  0a00000a          BEQ      |L1.1000|
0003bc  e3580000          CMP      r8,#0
0003c0  0a000002          BEQ      |L1.976|
0003c4  e3580001          CMP      r8,#1
0003c8  1a000009          BNE      |L1.1012|
0003cc  ea000002          B        |L1.988|
                  |L1.976|
;;;180    		case 0:
0003d0  e1a00000          MOV      r0,r0
;;;181    			ecc_result = YAFFS_ECC_RESULT_NO_ERROR;
0003d4  e3a07001          MOV      r7,#1
;;;182    			break;
0003d8  ea000008          B        |L1.1024|
                  |L1.988|
;;;183    		case 1:
0003dc  e1a00000          MOV      r0,r0
;;;184    			ecc_result = YAFFS_ECC_RESULT_FIXED;
0003e0  e3a07002          MOV      r7,#2
;;;185    			break;
0003e4  ea000005          B        |L1.1024|
                  |L1.1000|
;;;186    		case -1:
0003e8  e1a00000          MOV      r0,r0
;;;187    			ecc_result = YAFFS_ECC_RESULT_UNFIXED;
0003ec  e3a07003          MOV      r7,#3
;;;188    			break;
0003f0  ea000002          B        |L1.1024|
                  |L1.1012|
;;;189    		default:
0003f4  e1a00000          MOV      r0,r0
;;;190    			ecc_result = YAFFS_ECC_RESULT_UNKNOWN;
0003f8  e3a07000          MOV      r7,#0
0003fc  e1a00000          MOV      r0,r0                 ;179
                  |L1.1024|
000400  e1a00000          MOV      r0,r0                 ;182
;;;191    		}
;;;192    	}
000404  e1a00000          MOV      r0,r0
                  |L1.1032|
;;;193    	yaffs_unpack_tags2_tags_only(t, &pt->t);
000408  e1a01004          MOV      r1,r4
00040c  e1a00005          MOV      r0,r5
000410  ebfffffe          BL       yaffs_unpack_tags2_tags_only
;;;194    
;;;195    	t->ecc_result = ecc_result;
000414  e5c57010          STRB     r7,[r5,#0x10]
;;;196    
;;;197    	yaffs_dump_packed_tags2(pt);
000418  e1a00004          MOV      r0,r4
00041c  ebfffffe          BL       yaffs_dump_packed_tags2
;;;198    	yaffs_dump_tags2(t);
000420  e1a00005          MOV      r0,r5
000424  ebfffffe          BL       yaffs_dump_tags2
;;;199    }
000428  e8bd83fe          POP      {r1-r9,pc}
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  79616666          DCB      0x79,0x61,0x66,0x66
000004  733a2065          DCB      0x73,0x3a,0x20,0x65
000008  78742e74          DCB      0x78,0x74,0x2e,0x74
00000c  61677320          DCB      0x61,0x67,0x73,0x20
000010  65636372          DCB      0x65,0x63,0x63,0x72
000014  65732025          DCB      0x65,0x73,0x20,0x25
000018  6420626c          DCB      0x64,0x20,0x62,0x6c
00001c  6b626164          DCB      0x6b,0x62,0x61,0x64
000020  20256420          DCB      0x20,0x25,0x64,0x20
000024  63687573          DCB      0x63,0x68,0x75,0x73
000028  65642025          DCB      0x65,0x64,0x20,0x25
00002c  64206f62          DCB      0x64,0x20,0x6f,0x62
000030  6a202564          DCB      0x6a,0x20,0x25,0x64
000034  20636875          DCB      0x20,0x63,0x68,0x75
000038  6e6b2564          DCB      0x6e,0x6b,0x25,0x64
00003c  20627974          DCB      0x20,0x62,0x79,0x74
000040  65202564          DCB      0x65,0x20,0x25,0x64
000044  2064656c          DCB      0x20,0x64,0x65,0x6c
000048  20256420          DCB      0x20,0x25,0x64,0x20
00004c  73657220          DCB      0x73,0x65,0x72,0x20
000050  25642073          DCB      0x25,0x64,0x20,0x73
000054  65712025          DCB      0x65,0x71,0x20,0x25
000058  640a00            DCB      0x64,0x0a,0x00
