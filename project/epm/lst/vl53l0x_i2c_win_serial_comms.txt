; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\vl53l0x_i2c_win_serial_comms.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\vl53l0x_i2c_win_serial_comms.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\vl53l0x_i2c_win_serial_comms.crf src\UserDrv\vl53l0x\platform\src\vl53l0x_i2c_win_serial_comms.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _check_min_version PROC
;;;83     
;;;84     bool_t _check_min_version(void)
000000  e3a00001          MOV      r0,#1
;;;85     {
;;;86         return TRUE;
;;;87     }
000004  e12fff1e          BX       lr
;;;88     void VL53L0XPrintErrTimes(void)
                          ENDP

                  VL53L0XPrintErrTimes PROC
000008  e92d4010          PUSH     {r4,lr}
;;;89     {
;;;90         if((wErrTimes != 0) || (rErrTimes != 0))
00000c  e59f029c          LDR      r0,|L1.688|
000010  e5900000          LDR      r0,[r0,#0]  ; wErrTimes
000014  e3500000          CMP      r0,#0
000018  1a000003          BNE      |L1.44|
00001c  e59f0290          LDR      r0,|L1.692|
000020  e5900000          LDR      r0,[r0,#0]  ; rErrTimes
000024  e3500000          CMP      r0,#0
000028  0a000005          BEQ      |L1.68|
                  |L1.44|
;;;91             sysprintf("\r\n << INFO: VL53L0X error times : %d, %d >>\n", wErrTimes, rErrTimes);
00002c  e59f0280          LDR      r0,|L1.692|
000030  e5902000          LDR      r2,[r0,#0]  ; rErrTimes
000034  e59f0274          LDR      r0,|L1.688|
000038  e5901000          LDR      r1,[r0,#0]  ; wErrTimes
00003c  e28f0f9d          ADR      r0,|L1.696|
000040  ebfffffe          BL       sysprintf
                  |L1.68|
;;;92     }
000044  e8bd8010          POP      {r4,pc}
;;;93     void VL53L0XEnterCS(void)
                          ENDP

                  VL53L0XEnterCS PROC
000048  e92d4010          PUSH     {r4,lr}
;;;94     {
;;;95         pI2cInterface->enableCriticalSectionFunc(TRUE);
00004c  e59f0294          LDR      r0,|L1.744|
000050  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000054  e5901010          LDR      r1,[r0,#0x10]
000058  e3a00001          MOV      r0,#1
00005c  e12fff31          BLX      r1
;;;96     }
000060  e8bd8010          POP      {r4,pc}
;;;97     void VL53L0XExitCS(void)
                          ENDP

                  VL53L0XExitCS PROC
000064  e92d4010          PUSH     {r4,lr}
;;;98     {
;;;99         pI2cInterface->enableCriticalSectionFunc(FALSE);
000068  e59f0278          LDR      r0,|L1.744|
00006c  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000070  e5901010          LDR      r1,[r0,#0x10]
000074  e3a00000          MOV      r0,#0
000078  e12fff31          BLX      r1
;;;100    }
00007c  e8bd8010          POP      {r4,pc}
;;;101    
                          ENDP

                  VL53L0X_i2c_init PROC
;;;102    int VL53L0X_i2c_init(I2cInterface* i2cInterface) // mja
000080  e92d4010          PUSH     {r4,lr}
;;;103    {
000084  e1a04000          MOV      r4,r0
;;;104        sysprintf("\r\n ==>> call VL53L0X_i2c_init...\n");
000088  e28f0f97          ADR      r0,|L1.748|
00008c  ebfffffe          BL       sysprintf
;;;105        pI2cInterface = i2cInterface;
000090  e59f0250          LDR      r0,|L1.744|
000094  e5804000          STR      r4,[r0,#0]  ; pI2cInterface
;;;106        return VL53L0X_ERROR_NONE;
000098  e3a00000          MOV      r0,#0
;;;107    }
00009c  e8bd8010          POP      {r4,pc}
;;;108    int32_t VL53L0X_comms_close(void)
                          ENDP

                  VL53L0X_comms_close PROC
0000a0  e92d4010          PUSH     {r4,lr}
;;;109    {
;;;110        sysprintf("\r\n ==>> call VL53L0X_comms_close...\n");
0000a4  e28f0f99          ADR      r0,|L1.784|
0000a8  ebfffffe          BL       sysprintf
;;;111        return 0;
0000ac  e3a00000          MOV      r0,#0
;;;112    }
0000b0  e8bd8010          POP      {r4,pc}
;;;113    
                          ENDP

                  VL53L0X_write_multi PROC
;;;114    int32_t VL53L0X_write_multi(uint8_t address, uint8_t reg, uint8_t *pdata, int32_t count)
0000b4  e92d41f0          PUSH     {r4-r8,lr}
;;;115    {
0000b8  e1a05000          MOV      r5,r0
0000bc  e1a08001          MOV      r8,r1
0000c0  e1a06002          MOV      r6,r2
0000c4  e1a04003          MOV      r4,r3
;;;116        int j ;
;;;117        //sysprintf("[w]");
;;;118        //sysprintf("\r\n ==>> call VL53L0X_write_multi...\n");
;;;119        //i2cEnterCriticalSection(VL53L0X_I2C);
;;;120        
;;;121        VL53L0XEnterCS();
0000c8  ebfffffe          BL       VL53L0XEnterCS
;;;122        pI2cInterface->ioctlFunc(I2C_IOC_SET_DEV_ADDRESS, address, 0);
0000cc  e59f0214          LDR      r0,|L1.744|
0000d0  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0000d4  e3a02000          MOV      r2,#0
0000d8  e1a01005          MOV      r1,r5
0000dc  e5903004          LDR      r3,[r0,#4]
0000e0  e1a00002          MOV      r0,r2
0000e4  e12fff33          BLX      r3
;;;123        pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, reg, 1);
0000e8  e59f01f8          LDR      r0,|L1.744|
0000ec  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0000f0  e3a02001          MOV      r2,#1
0000f4  e1a01008          MOV      r1,r8
0000f8  e5903004          LDR      r3,[r0,#4]
0000fc  e1a00002          MOV      r0,r2
000100  e12fff33          BLX      r3
;;;124        j = RETRY;
000104  e3a07ffa          MOV      r7,#0x3e8
;;;125        while(j-- > 0) 
000108  ea000014          B        |L1.352|
                  |L1.268|
;;;126        {
;;;127                
;;;128            if(pI2cInterface->writeFunc(pdata, count) == count)
00010c  e59f01d4          LDR      r0,|L1.744|
000110  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000114  e1a01004          MOV      r1,r4
000118  e5902008          LDR      r2,[r0,#8]
00011c  e1a00006          MOV      r0,r6
000120  e12fff32          BLX      r2
000124  e1500004          CMP      r0,r4
000128  1a000000          BNE      |L1.304|
;;;129            {
;;;130                break;
00012c  ea00000e          B        |L1.364|
                  |L1.304|
;;;131            }
;;;132            if(j <= 0)
000130  e3570000          CMP      r7,#0
000134  ca000009          BGT      |L1.352|
;;;133            {
;;;134                sysprintf("VL53L0X_write_multi WRITE ERROR!\n");
000138  e28f0f7e          ADR      r0,|L1.824|
00013c  ebfffffe          BL       sysprintf
;;;135                wErrTimes++;
000140  e59f0168          LDR      r0,|L1.688|
000144  e5900000          LDR      r0,[r0,#0]  ; wErrTimes
000148  e2800001          ADD      r0,r0,#1
00014c  e59f115c          LDR      r1,|L1.688|
000150  e5810000          STR      r0,[r1,#0]  ; wErrTimes
;;;136                VL53L0XExitCS();
000154  ebfffffe          BL       VL53L0XExitCS
;;;137                return STATUS_FAIL;
000158  e3a00001          MOV      r0,#1
                  |L1.348|
;;;138            }
;;;139        }
;;;140        VL53L0XExitCS();
;;;141        //sysprintf("VL53L0X_write_multi OK...\n");
;;;142        return STATUS_OK;
;;;143    }
00015c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.352|
000160  e2570000          SUBS     r0,r7,#0              ;125
000164  e2477001          SUB      r7,r7,#1              ;125
000168  caffffe7          BGT      |L1.268|
                  |L1.364|
00016c  e1a00000          MOV      r0,r0                 ;130
000170  ebfffffe          BL       VL53L0XExitCS
000174  e3a00000          MOV      r0,#0                 ;142
000178  eafffff7          B        |L1.348|
;;;144    
                          ENDP

                  VL53L0X_read_multi PROC
;;;145    int32_t VL53L0X_read_multi(uint8_t address, uint8_t reg, uint8_t *pdata, int32_t count)
00017c  e92d41ff          PUSH     {r0-r8,lr}
;;;146    { 
000180  e1a06000          MOV      r6,r0
000184  e1a07002          MOV      r7,r2
000188  e1a05003          MOV      r5,r3
;;;147        int j ;
;;;148        //sysprintf("[r]");
;;;149        //sysprintf("\r\n ==>> call VL53L0X_read_multi...\n");
;;;150        VL53L0XEnterCS();
00018c  ebfffffe          BL       VL53L0XEnterCS
;;;151        pI2cInterface->ioctlFunc(I2C_IOC_SET_DEV_ADDRESS, address, 0);
000190  e59f0150          LDR      r0,|L1.744|
000194  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
000198  e3a02000          MOV      r2,#0
00019c  e1a01006          MOV      r1,r6
0001a0  e5903004          LDR      r3,[r0,#4]
0001a4  e1a00002          MOV      r0,r2
0001a8  e12fff33          BLX      r3
;;;152        pI2cInterface->ioctlFunc(I2C_IOC_SET_SUB_ADDRESS, NULL, 0);
0001ac  e59f0134          LDR      r0,|L1.744|
0001b0  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0001b4  e3a02000          MOV      r2,#0
0001b8  e1a01002          MOV      r1,r2
0001bc  e5903004          LDR      r3,[r0,#4]
0001c0  e3a00001          MOV      r0,#1
0001c4  e12fff33          BLX      r3
;;;153        j = RETRY;
0001c8  e3a04ffa          MOV      r4,#0x3e8
;;;154        while(j-- > 0) 
0001cc  ea000015          B        |L1.552|
                  |L1.464|
;;;155        {            
;;;156            if(pI2cInterface->writeFunc(&reg, 1) == 1)
0001d0  e59f0110          LDR      r0,|L1.744|
0001d4  e5900000          LDR      r0,[r0,#0]  ; pI2cInterface
0001d8  e3a01001          MOV      r1,#1
0001dc  e5902008          LDR      r2,[r0,#8]
0001e0  e28d0004          ADD      r0,sp,#4
0001e4  e12fff32          BLX      r2
0001e8  e3500001          CMP      r0,#1
0001ec  1a000000          BNE      |L1.500|
;;;157            {
;;;158                break;
0001f0  ea00000f          B        |L1.564|
                  |L1.500|
;;;159            }
;;;160            if(j <= 0)
0001f4  e3540000          CMP      r4,#0
0001f8  ca00000a          BGT      |L1.552|
;;;161            {
;;;162                sysprintf("VL53L0X_read_multi WRITE ERROR!\n");
0001fc  e28f0f56          ADR      r0,|L1.860|
000200  ebfffffe          BL       sysprintf
;;;163                rErrTimes++;
000204  e59f00a8          LDR      r0,|L1.692|
000208  e5900000          LDR      r0,[r0,#0]  ; rErrTimes
00020c  e2800001          ADD      r0,r0,#1
000210  e59f109c          LDR      r1,|L1.692|
000214  e5810000          STR      r0,[r1,#0]  ; rErrTimes
;;;164                VL53L0XExitCS();
000218  ebfffffe          BL       VL53L0XExitCS
;;;165                return STATUS_FAIL;
00021c  e3a00001          MOV      r0,#1
                  |L1.544|
000220  e28dd010          ADD      sp,sp,#0x10
;;;166            }
;;;167        }
;;;168        
;;;169        j = RETRY;
;;;170        while(j-- > 0) 
;;;171        {
;;;172            if(pI2cInterface->readFunc(pdata, count) == count)
;;;173            {
;;;174                break;
;;;175            }
;;;176        }
;;;177        if(j <= 0)
;;;178        {
;;;179            sysprintf("VL53L0X_read_multi Read ERROR!\n");
;;;180            rErrTimes++;
;;;181            VL53L0XExitCS();
;;;182            return STATUS_FAIL;
;;;183        }
;;;184        //sysprintf("VL53L0X_read_multi OK...\n");
;;;185        VL53L0XExitCS();
;;;186        return STATUS_OK;
;;;187    }
000224  e8bd81f0          POP      {r4-r8,pc}
                  |L1.552|
000228  e2540000          SUBS     r0,r4,#0              ;154
00022c  e2444001          SUB      r4,r4,#1              ;154
000230  caffffe6          BGT      |L1.464|
                  |L1.564|
000234  e1a00000          MOV      r0,r0                 ;158
000238  e3a04ffa          MOV      r4,#0x3e8             ;169
00023c  ea000008          B        |L1.612|
                  |L1.576|
000240  e59f00a0          LDR      r0,|L1.744|
000244  e5900000          LDR      r0,[r0,#0]            ;172  ; pI2cInterface
000248  e1a01005          MOV      r1,r5                 ;172
00024c  e590200c          LDR      r2,[r0,#0xc]          ;172
000250  e1a00007          MOV      r0,r7                 ;172
000254  e12fff32          BLX      r2                    ;172
000258  e1500005          CMP      r0,r5                 ;172
00025c  1a000000          BNE      |L1.612|
000260  ea000002          B        |L1.624|
                  |L1.612|
000264  e2540000          SUBS     r0,r4,#0              ;170
000268  e2444001          SUB      r4,r4,#1              ;170
00026c  cafffff3          BGT      |L1.576|
                  |L1.624|
000270  e1a00000          MOV      r0,r0                 ;174
000274  e3540000          CMP      r4,#0                 ;177
000278  ca000009          BGT      |L1.676|
00027c  e28f00fc          ADR      r0,|L1.896|
000280  ebfffffe          BL       sysprintf
000284  e59f0028          LDR      r0,|L1.692|
000288  e5900000          LDR      r0,[r0,#0]            ;180  ; rErrTimes
00028c  e2800001          ADD      r0,r0,#1              ;180
000290  e59f101c          LDR      r1,|L1.692|
000294  e5810000          STR      r0,[r1,#0]            ;180  ; rErrTimes
000298  ebfffffe          BL       VL53L0XExitCS
00029c  e3a00001          MOV      r0,#1                 ;182
0002a0  eaffffde          B        |L1.544|
                  |L1.676|
0002a4  ebfffffe          BL       VL53L0XExitCS
0002a8  e3a00000          MOV      r0,#0                 ;186
0002ac  eaffffdb          B        |L1.544|
                  |L1.688|
                          DCD      wErrTimes
                  |L1.692|
                          DCD      rErrTimes
                  |L1.696|
0002b8  0d0a203c          DCB      "\r\n << INFO: VL53L0X error times : %d, %d >>\n",0
0002bc  3c20494e
0002c0  464f3a20
0002c4  564c3533
0002c8  4c305820
0002cc  6572726f
0002d0  72207469
0002d4  6d657320
0002d8  3a202564
0002dc  2c202564
0002e0  203e3e0a
0002e4  00      
0002e5  00                DCB      0
0002e6  00                DCB      0
0002e7  00                DCB      0
                  |L1.744|
                          DCD      pI2cInterface
                  |L1.748|
0002ec  0d0a203d          DCB      "\r\n ==>> call VL53L0X_i2c_init...\n",0
0002f0  3d3e3e20
0002f4  63616c6c
0002f8  20564c35
0002fc  334c3058
000300  5f693263
000304  5f696e69
000308  742e2e2e
00030c  0a00    
00030e  00                DCB      0
00030f  00                DCB      0
                  |L1.784|
000310  0d0a203d          DCB      "\r\n ==>> call VL53L0X_comms_close...\n",0
000314  3d3e3e20
000318  63616c6c
00031c  20564c35
000320  334c3058
000324  5f636f6d
000328  6d735f63
00032c  6c6f7365
000330  2e2e2e0a
000334  00      
000335  00                DCB      0
000336  00                DCB      0
000337  00                DCB      0
                  |L1.824|
000338  564c3533          DCB      "VL53L0X_write_multi WRITE ERROR!\n",0
00033c  4c30585f
000340  77726974
000344  655f6d75
000348  6c746920
00034c  57524954
000350  45204552
000354  524f5221
000358  0a00    
00035a  00                DCB      0
00035b  00                DCB      0
                  |L1.860|
00035c  564c3533          DCB      "VL53L0X_read_multi WRITE ERROR!\n",0
000360  4c30585f
000364  72656164
000368  5f6d756c
00036c  74692057
000370  52495445
000374  20455252
000378  4f52210a
00037c  00      
00037d  00                DCB      0
00037e  00                DCB      0
00037f  00                DCB      0
                  |L1.896|
000380  564c3533          DCB      "VL53L0X_read_multi Read ERROR!\n",0
000384  4c30585f
000388  72656164
00038c  5f6d756c
000390  74692052
000394  65616420
000398  4552524f
00039c  52210a00
                          ENDP

                  VL53L0X_write_byte PROC
;;;189    
;;;190    int32_t VL53L0X_write_byte(uint8_t address, uint8_t index, uint8_t data)
0003a0  e92d40f7          PUSH     {r0-r2,r4-r7,lr}
;;;191    {
0003a4  e1a04000          MOV      r4,r0
0003a8  e1a05001          MOV      r5,r1
;;;192        int32_t status = STATUS_OK;
0003ac  e3a06000          MOV      r6,#0
;;;193        const int32_t cbyte_count = 1;
0003b0  e3a07001          MOV      r7,#1
;;;194    
;;;195    #ifdef VL53L0X_LOG_ENABLE_1
;;;196        sysprintf(" - VL53L0X [Write Byte] reg : 0x%02X, Val : 0x%02X\n", index, data);
;;;197    #endif
;;;198    
;;;199        status = VL53L0X_write_multi(address, index, &data, cbyte_count);
0003b4  e3a03001          MOV      r3,#1
0003b8  e28d2008          ADD      r2,sp,#8
0003bc  e1a01005          MOV      r1,r5
0003c0  e1a00004          MOV      r0,r4
0003c4  ebfffffe          BL       VL53L0X_write_multi
0003c8  e1a06000          MOV      r6,r0
;;;200    
;;;201        return status;
0003cc  e1a00006          MOV      r0,r6
;;;202    
;;;203    }
0003d0  e8bd80fe          POP      {r1-r7,pc}
;;;204    
                          ENDP

                  VL53L0X_write_word PROC
;;;205    
;;;206    int32_t VL53L0X_write_word(uint8_t address, uint8_t index, uint16_t data)
0003d4  e92d40f8          PUSH     {r3-r7,lr}
;;;207    {
0003d8  e1a06000          MOV      r6,r0
0003dc  e1a04001          MOV      r4,r1
0003e0  e1a05002          MOV      r5,r2
;;;208        int32_t status = STATUS_OK;
0003e4  e3a07000          MOV      r7,#0
;;;209    
;;;210        uint8_t  buffer[BYTES_PER_WORD];
;;;211    #ifdef VL53L0X_LOG_ENABLE_1
;;;212        sysprintf(" - VL53L0X [Write word] reg : 0x%02X, Val : 0x%04X\n", index, data);
;;;213    #endif
;;;214        // Split 16-bit word into MS and LS uint8_t
;;;215        buffer[0] = (uint8_t)(data >> 8);
0003e8  e1a00445          ASR      r0,r5,#8
0003ec  e5cd0000          STRB     r0,[sp,#0]
;;;216        buffer[1] = (uint8_t)(data &  0x00FF);
0003f0  e5cd5001          STRB     r5,[sp,#1]
;;;217    
;;;218        if(index%2 == 1)
0003f4  e1a00004          MOV      r0,r4
0003f8  e0841fa0          ADD      r1,r4,r0,LSR #31
0003fc  e1a010c1          ASR      r1,r1,#1
000400  e0441081          SUB      r1,r4,r1,LSL #1
000404  e3510001          CMP      r1,#1
000408  1a00000d          BNE      |L1.1092|
;;;219        {
;;;220            status = VL53L0X_write_multi(address, index, &buffer[0], 1);
00040c  e3a03001          MOV      r3,#1
000410  e1a0200d          MOV      r2,sp
000414  e1a01004          MOV      r1,r4
000418  e1a00006          MOV      r0,r6
00041c  ebfffffe          BL       VL53L0X_write_multi
000420  e1a07000          MOV      r7,r0
;;;221            status = VL53L0X_write_multi(address, index + 1, &buffer[1], 1);
000424  e2840001          ADD      r0,r4,#1
000428  e20010ff          AND      r1,r0,#0xff
00042c  e3a03001          MOV      r3,#1
000430  e28d2001          ADD      r2,sp,#1
000434  e1a00006          MOV      r0,r6
000438  ebfffffe          BL       VL53L0X_write_multi
00043c  e1a07000          MOV      r7,r0
000440  ea000005          B        |L1.1116|
                  |L1.1092|
;;;222            // serial comms cannot handle word writes to non 2-byte aligned registers.
;;;223        }
;;;224        else
;;;225        {
;;;226            status = VL53L0X_write_multi(address, index, buffer, BYTES_PER_WORD);
000444  e3a03002          MOV      r3,#2
000448  e1a0200d          MOV      r2,sp
00044c  e1a01004          MOV      r1,r4
000450  e1a00006          MOV      r0,r6
000454  ebfffffe          BL       VL53L0X_write_multi
000458  e1a07000          MOV      r7,r0
                  |L1.1116|
;;;227        }
;;;228    
;;;229        return status;
00045c  e1a00007          MOV      r0,r7
;;;230    
;;;231    }
000460  e8bd80f8          POP      {r3-r7,pc}
;;;232    
                          ENDP

                  VL53L0X_write_dword PROC
;;;233    
;;;234    int32_t VL53L0X_write_dword(uint8_t address, uint8_t index, uint32_t data)
000464  e92d40f8          PUSH     {r3-r7,lr}
;;;235    {
000468  e1a05000          MOV      r5,r0
00046c  e1a06001          MOV      r6,r1
000470  e1a04002          MOV      r4,r2
;;;236        int32_t status = STATUS_OK;
000474  e3a07000          MOV      r7,#0
;;;237        uint8_t  buffer[BYTES_PER_uint32_t];
;;;238        
;;;239    #ifdef VL53L0X_LOG_ENABLE_1
;;;240        sysprintf(" - VL53L0X [Write dword] reg : 0x%02X, Val : 0x%08X\n", index, data);
;;;241    #endif
;;;242        // Split 32-bit word into MS ... LS bytes
;;;243        buffer[0] = (uint8_t) (data >> 24);
000478  e1a00c24          LSR      r0,r4,#24
00047c  e5cd0000          STRB     r0,[sp,#0]
;;;244        buffer[1] = (uint8_t)((data &  0x00FF0000) >> 16);
000480  e20408ff          AND      r0,r4,#0xff0000
000484  e1a00820          LSR      r0,r0,#16
000488  e5cd0001          STRB     r0,[sp,#1]
;;;245        buffer[2] = (uint8_t)((data &  0x0000FF00) >> 8);
00048c  e2040cff          AND      r0,r4,#0xff00
000490  e1a00420          LSR      r0,r0,#8
000494  e5cd0002          STRB     r0,[sp,#2]
;;;246        buffer[3] = (uint8_t) (data &  0x000000FF);
000498  e5cd4003          STRB     r4,[sp,#3]
;;;247    
;;;248        status = VL53L0X_write_multi(address, index, buffer, BYTES_PER_uint32_t);
00049c  e3a03004          MOV      r3,#4
0004a0  e1a0200d          MOV      r2,sp
0004a4  e1a01006          MOV      r1,r6
0004a8  e1a00005          MOV      r0,r5
0004ac  ebfffffe          BL       VL53L0X_write_multi
0004b0  e1a07000          MOV      r7,r0
;;;249    
;;;250        return status;
0004b4  e1a00007          MOV      r0,r7
;;;251    
;;;252    }
0004b8  e8bd80f8          POP      {r3-r7,pc}
;;;253    
                          ENDP

                  VL53L0X_read_byte PROC
;;;254    
;;;255    int32_t VL53L0X_read_byte(uint8_t address, uint8_t index, uint8_t *pdata)
0004bc  e92d41f0          PUSH     {r4-r8,lr}
;;;256    {
0004c0  e1a04000          MOV      r4,r0
0004c4  e1a05001          MOV      r5,r1
0004c8  e1a06002          MOV      r6,r2
;;;257        int32_t status = STATUS_OK;
0004cc  e3a07000          MOV      r7,#0
;;;258        int32_t cbyte_count = 1;
0004d0  e3a08001          MOV      r8,#1
;;;259        
;;;260    #ifdef VL53L0X_LOG_ENABLE_1
;;;261        sysprintf(" ~ VL53L0X <Read Byte> reg : 0x%02X start...\n", index);
;;;262    #endif
;;;263        
;;;264        status = VL53L0X_read_multi(address, index, pdata, cbyte_count);
0004d4  e1a03008          MOV      r3,r8
0004d8  e1a02006          MOV      r2,r6
0004dc  e1a01005          MOV      r1,r5
0004e0  e1a00004          MOV      r0,r4
0004e4  ebfffffe          BL       VL53L0X_read_multi
0004e8  e1a07000          MOV      r7,r0
;;;265    
;;;266    #ifdef VL53L0X_LOG_ENABLE_1
;;;267        if(STATUS_OK == status)
;;;268            sysprintf(" ~ VL53L0X <Read Byte> reg : 0x%02X, Val : 0x%02X\n", index, *pdata);
;;;269    #endif
;;;270    
;;;271        return status;
0004ec  e1a00007          MOV      r0,r7
;;;272    
;;;273    }
0004f0  e8bd81f0          POP      {r4-r8,pc}
;;;274    
                          ENDP

                  VL53L0X_read_word PROC
;;;275    
;;;276    int32_t VL53L0X_read_word(uint8_t address, uint8_t index, uint16_t *pdata)
0004f4  e92d40f8          PUSH     {r3-r7,lr}
;;;277    {
0004f8  e1a05000          MOV      r5,r0
0004fc  e1a06001          MOV      r6,r1
000500  e1a04002          MOV      r4,r2
;;;278        int32_t  status = STATUS_OK;
000504  e3a07000          MOV      r7,#0
;;;279    	uint8_t  buffer[BYTES_PER_WORD];
;;;280    #ifdef VL53L0X_LOG_ENABLE_1
;;;281        sysprintf(" ~ VL53L0X <Read word> reg : 0x%02X start...\n", index);
;;;282    #endif
;;;283        status = VL53L0X_read_multi(address, index, buffer, BYTES_PER_WORD);
000508  e3a03002          MOV      r3,#2
00050c  e1a0200d          MOV      r2,sp
000510  e1a01006          MOV      r1,r6
000514  e1a00005          MOV      r0,r5
000518  ebfffffe          BL       VL53L0X_read_multi
00051c  e1a07000          MOV      r7,r0
;;;284    	*pdata = ((uint16_t)buffer[0]<<8) + (uint16_t)buffer[1];
000520  e5dd0001          LDRB     r0,[sp,#1]
000524  e5dd1000          LDRB     r1,[sp,#0]
000528  e0800401          ADD      r0,r0,r1,LSL #8
00052c  e3c00801          BIC      r0,r0,#0x10000
000530  e1c400b0          STRH     r0,[r4,#0]
;;;285    #ifdef VL53L0X_LOG_ENABLE_1
;;;286        if(STATUS_OK == status)
;;;287            sysprintf(" ~ VL53L0X <Read word> reg : 0x%02X, Val : 0x%04X\n", index, *pdata);
;;;288    #endif
;;;289        return status;
000534  e1a00007          MOV      r0,r7
;;;290    
;;;291    }
000538  e8bd80f8          POP      {r3-r7,pc}
;;;292    
                          ENDP

                  VL53L0X_read_dword PROC
;;;293    int32_t VL53L0X_read_dword(uint8_t address, uint8_t index, uint32_t *pdata)
00053c  e92d40f8          PUSH     {r3-r7,lr}
;;;294    {
000540  e1a05000          MOV      r5,r0
000544  e1a06001          MOV      r6,r1
000548  e1a04002          MOV      r4,r2
;;;295        int32_t status = STATUS_OK;
00054c  e3a07000          MOV      r7,#0
;;;296    	uint8_t  buffer[BYTES_PER_uint32_t];
;;;297    #ifdef VL53L0X_LOG_ENABLE_1
;;;298        sysprintf(" ~ VL53L0X <Read dword> reg : 0x%02X start...\n", index);
;;;299    #endif
;;;300        status = VL53L0X_read_multi(address, index, buffer, BYTES_PER_uint32_t);
000550  e3a03004          MOV      r3,#4
000554  e1a0200d          MOV      r2,sp
000558  e1a01006          MOV      r1,r6
00055c  e1a00005          MOV      r0,r5
000560  ebfffffe          BL       VL53L0X_read_multi
000564  e1a07000          MOV      r7,r0
;;;301        *pdata = ((uint32_t)buffer[0]<<24) + ((uint32_t)buffer[1]<<16) + ((uint32_t)buffer[2]<<8) + (uint32_t)buffer[3];
000568  e5dd0000          LDRB     r0,[sp,#0]
00056c  e1a00c00          LSL      r0,r0,#24
000570  e5dd1001          LDRB     r1,[sp,#1]
000574  e0800801          ADD      r0,r0,r1,LSL #16
000578  e5dd1002          LDRB     r1,[sp,#2]
00057c  e0800401          ADD      r0,r0,r1,LSL #8
000580  e5dd1003          LDRB     r1,[sp,#3]
000584  e0800001          ADD      r0,r0,r1
000588  e5840000          STR      r0,[r4,#0]
;;;302    #ifdef VL53L0X_LOG_ENABLE_1
;;;303        if(STATUS_OK == status)
;;;304            sysprintf(" ~ VL53L0X <Read dword> reg : 0x%02X, Val : 0x%08X\n", index, *pdata);
;;;305    #endif
;;;306        return status;
00058c  e1a00007          MOV      r0,r7
;;;307    
;;;308    }
000590  e8bd80f8          POP      {r3-r7,pc}
;;;309    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  pI2cInterface
                          DCD      0x00000000
                  cached_page
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  rErrTimes
                          DCD      0x00000000
                  wErrTimes
                          DCD      0x00000000
