; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\octopusreader.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\octopusreader.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\octopusreader.crf src\syshal\octopus\octopusreader.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_u
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_d
                  readVN PROC
;;;84     
;;;85     static BOOL readVN(void)
000000  e92d40f0          PUSH     {r4-r7,lr}
;;;86     {  
000004  e24dd0ec          SUB      sp,sp,#0xec
;;;87         INT s32_ret;
;;;88         stDevVer DeviceV;
;;;89         char timeStr[32];
;;;90         char* timeStrStart;
;;;91         time_t u32_time = GetCurrentUTCTime() - GMT_TIME_ZONE_DIFF_SECONDS;
000008  ebfffffe          BL       GetCurrentUTCTime
00000c  e2407901          SUB      r7,r0,#0x4000
000010  e2477dc2          SUB      r7,r7,#0x3080
;;;92         UTCTimeToString(u32_time, timeStr);  //%04d%02d%02d%02d%02d%02d
000014  e28d107c          ADD      r1,sp,#0x7c
000018  e1a00007          MOV      r0,r7
00001c  ebfffffe          BL       UTCTimeToString
;;;93         sysprintf(" timeStr = [%s]\r\n", timeStr);
000020  e28d107c          ADD      r1,sp,#0x7c
000024  e28f0f5b          ADR      r0,|L1.408|
000028  ebfffffe          BL       sysprintf
;;;94         //timeStr = [20191018143648]
;;;95         //u32_time = [19/10/18 14:36:48]
;;;96     
;;;97         //CMD Header(5) >>>
;;;98         //00 00 FF 00 00
;;;99         //CMD (15) >>>
;;;100        //46 00 08 04 06 03 04 01 08 01 00 01 09 01 00
;;;101    
;;;102        UINT    u32_tempstr[30];
;;;103        CHAR	tmpstr[3];
;;;104        memset(u32_tempstr, 0, sizeof(u32_tempstr));
00002c  e3a01078          MOV      r1,#0x78
000030  e28d0004          ADD      r0,sp,#4
000034  ebfffffe          BL       __aeabi_memclr4
;;;105        
;;;106        timeStrStart = timeStr+2;
000038  e28d607e          ADD      r6,sp,#0x7e
;;;107        //memset(temp, 0, sizeof(temp));
;;;108        //fgets(temp, sizeof(temp), stdin);
;;;109        if (timeStrStart[0] != '\n')
00003c  e5d60000          LDRB     r0,[r6,#0]
000040  e350000a          CMP      r0,#0xa
000044  0a00000d          BEQ      |L1.128|
;;;110        {
;;;111            for (int i = 0; i < 6; i++)
000048  e3a04000          MOV      r4,#0
00004c  ea000009          B        |L1.120|
                  |L1.80|
;;;112            {
;;;113                strncpy((CHAR *)&tmpstr, (const CHAR *)&timeStrStart[i*2], 2);
000050  e0861084          ADD      r1,r6,r4,LSL #1
000054  e3a02002          MOV      r2,#2
000058  e1a0000d          MOV      r0,sp
00005c  ebfffffe          BL       strncpy
;;;114                u32_tempstr[5-i] = atoi(tmpstr);
000060  e1a0000d          MOV      r0,sp
000064  ebfffffe          BL       atoi
000068  e2641005          RSB      r1,r4,#5
00006c  e28d2004          ADD      r2,sp,#4
000070  e7820101          STR      r0,[r2,r1,LSL #2]
000074  e2844001          ADD      r4,r4,#1              ;111
                  |L1.120|
000078  e3540006          CMP      r4,#6                 ;111
00007c  bafffff3          BLT      |L1.80|
                  |L1.128|
;;;115            }
;;;116        }  
;;;117        //CmdTimeVer(&u32_tempstr[0]);
;;;118        /*
;;;119        RSP (80) <<<
;;;120        47 00 00 5A FF E2 01 02 03 04 00 00 00 04 03 20 00 00 00 00 00 00 00 02 00 00 00 02 00 9D
;;;121        00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 02 00 00 00 FB 00 00 00 02
;;;122        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
;;;123        TimeVer Success
;;;124        Device ID  : 5963746
;;;125        Oper ID    : 16909060
;;;126        Dev Time   : 4
;;;127        Comp ID    : 800
;;;128        Key Ver    : 0
;;;129        EOD Ver    : 2
;;;130        BL Ver     : 2
;;;131        FIRM Ver   : 10289154
;;;132        CCHS Ver   : 0
;;;133        Location ID: 0
;;;134        IntBL Ver  : 0
;;;135        FuncBL Ver : 2
;;;136        AlertMsgVer: 2
;;;137        RWKey Ver  : 251 (0x00FB)
;;;138        OTP Ver    : 2
;;;139        Reserved   :
;;;140         DBG (20)
;;;141        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
;;;142    
;;;143        */
;;;144        s32_ret = TimeVer((BYTE *) &DeviceV, &u32_tempstr[0]);
000080  e28d1004          ADD      r1,sp,#4
000084  e28d009c          ADD      r0,sp,#0x9c
000088  ebfffffe          BL       TimeVer
00008c  e1a05000          MOV      r5,r0
;;;145        if (s32_ret == ERR_NOERR) {
000090  e3550000          CMP      r5,#0
000094  1a000097          BNE      |L1.760|
;;;146            GetVerFlag = TRUE;
000098  e3a00001          MOV      r0,#1
00009c  e59f1108          LDR      r1,|L1.428|
0000a0  e5c10000          STRB     r0,[r1,#0]  ; GetVerFlag
;;;147            //terninalPrintf("TimeVer Success\n");
;;;148            sysprintf("Device ID  : %u\n", DeviceV.DevID);
0000a4  e28f0f41          ADR      r0,|L1.432|
0000a8  e59d109c          LDR      r1,[sp,#0x9c]
0000ac  ebfffffe          BL       sysprintf
;;;149            sysprintf("Oper ID    : %u\n", DeviceV.OperID);
0000b0  e28f0f43          ADR      r0,|L1.452|
0000b4  e59d10a0          LDR      r1,[sp,#0xa0]
0000b8  ebfffffe          BL       sysprintf
;;;150            sysprintf("Dev Time   : %u\n", DeviceV.DevTime);					//Reader time is base on 1/1/2000
0000bc  e28f0f45          ADR      r0,|L1.472|
0000c0  e59d10a4          LDR      r1,[sp,#0xa4]
0000c4  ebfffffe          BL       sysprintf
;;;151            sysprintf("Comp ID    : %u\n", DeviceV.CompID);
0000c8  e28f0f47          ADR      r0,|L1.492|
0000cc  e59d10a8          LDR      r1,[sp,#0xa8]
0000d0  ebfffffe          BL       sysprintf
;;;152            sysprintf("Key Ver    : %u\n", DeviceV.KeyVer);
0000d4  e28f0f49          ADR      r0,|L1.512|
0000d8  e59d10ac          LDR      r1,[sp,#0xac]
0000dc  ebfffffe          BL       sysprintf
;;;153            sysprintf("EOD Ver    : %u\n", DeviceV.EODVer);
0000e0  e28f0f4b          ADR      r0,|L1.532|
0000e4  e59d10b0          LDR      r1,[sp,#0xb0]
0000e8  ebfffffe          BL       sysprintf
;;;154            sysprintf("BL Ver	   : %u\n", DeviceV.BLVer);
0000ec  e28f0f4d          ADR      r0,|L1.552|
0000f0  e59d10b4          LDR      r1,[sp,#0xb4]
0000f4  ebfffffe          BL       sysprintf
;;;155            sysprintf("FIRM Ver   : %u\n", DeviceV.FIRMVer);
0000f8  e28f0f4e          ADR      r0,|L1.568|
0000fc  e59d10b8          LDR      r1,[sp,#0xb8]
000100  ebfffffe          BL       sysprintf
;;;156            memset(GetVerStrBuf, 0, sizeof(GetVerStrBuf));
000104  e3a01040          MOV      r1,#0x40
000108  e59f013c          LDR      r0,|L1.588|
00010c  ebfffffe          BL       __aeabi_memclr
;;;157            sprintf(GetVerStrBuf,"%u", DeviceV.FIRMVer);
000110  e28f1f4e          ADR      r1,|L1.592|
000114  e59f0130          LDR      r0,|L1.588|
000118  e59d20b8          LDR      r2,[sp,#0xb8]
00011c  ebfffffe          BL       __2sprintf
;;;158            //verStrLen = sizeof(DeviceV.FIRMVer);
;;;159            sysprintf("CCHS Ver   : %u\n", DeviceV.CCHSVer);
000120  e28f0f4b          ADR      r0,|L1.596|
000124  e59d10bc          LDR      r1,[sp,#0xbc]
000128  ebfffffe          BL       sysprintf
;;;160            sysprintf("Location ID: %u\n", DeviceV.CSSer);
00012c  e28f0f4d          ADR      r0,|L1.616|
000130  e59d10c0          LDR      r1,[sp,#0xc0]
000134  ebfffffe          BL       sysprintf
;;;161            sysprintf("IntBL Ver  : %u\n", DeviceV.IntBLVer);
000138  e28f0f4f          ADR      r0,|L1.636|
00013c  e59d10c4          LDR      r1,[sp,#0xc4]
000140  ebfffffe          BL       sysprintf
;;;162            sysprintf("FuncBL Ver : %u\n", DeviceV.FuncBLVer);
000144  e28f0f51          ADR      r0,|L1.656|
000148  e59d10c8          LDR      r1,[sp,#0xc8]
00014c  ebfffffe          BL       sysprintf
;;;163            sysprintf("AlertMsgVer: %u\n", DeviceV.AlertMsgVer);
000150  e28f0f53          ADR      r0,|L1.676|
000154  e59d10cc          LDR      r1,[sp,#0xcc]
000158  ebfffffe          BL       sysprintf
;;;164            sysprintf("RWKey Ver  : %u (0x%04X)\n", DeviceV.RWKeyVer, DeviceV.RWKeyVer);
00015c  e59d20d0          LDR      r2,[sp,#0xd0]
000160  e1a01002          MOV      r1,r2
000164  e28f0f53          ADR      r0,|L1.696|
000168  ebfffffe          BL       sysprintf
;;;165            sysprintf("OTP Ver    : %u\n", DeviceV.OTPVer);
00016c  e28f0f58          ADD      r0,pc,#0x58, 30 ; #0x160
000170  e59d10d4          LDR      r1,[sp,#0xd4]
000174  ebfffffe          BL       sysprintf
;;;166            sysprintf("Reserved   : \n");
000178  e28f0f5a          ADR      r0,|L1.744|
00017c  ebfffffe          BL       sysprintf
;;;167            DbgDump((BYTE *)DeviceV.Reserved, sizeof(DeviceV.Reserved));
000180  e3a01014          MOV      r1,#0x14
000184  e28d00d8          ADD      r0,sp,#0xd8
000188  ebfffffe          BL       DbgDump
;;;168            return TRUE;
00018c  e3a00001          MOV      r0,#1
                  |L1.400|
000190  e28dd0ec          ADD      sp,sp,#0xec
;;;169        } 
;;;170        else
;;;171        {
;;;172            //terninalPrintf("TimeVer fail!\n");
;;;173            return FALSE;
;;;174        }
;;;175    
;;;176    }
000194  e8bd80f0          POP      {r4-r7,pc}
                  |L1.408|
000198  2074696d          DCB      " timeStr = [%s]\r\n",0
00019c  65537472
0001a0  203d205b
0001a4  25735d0d
0001a8  0a00    
0001aa  00                DCB      0
0001ab  00                DCB      0
                  |L1.428|
                          DCD      GetVerFlag
                  |L1.432|
0001b0  44657669          DCB      "Device ID  : %u\n",0
0001b4  63652049
0001b8  4420203a
0001bc  2025750a
0001c0  00      
0001c1  00                DCB      0
0001c2  00                DCB      0
0001c3  00                DCB      0
                  |L1.452|
0001c4  4f706572          DCB      "Oper ID    : %u\n",0
0001c8  20494420
0001cc  2020203a
0001d0  2025750a
0001d4  00      
0001d5  00                DCB      0
0001d6  00                DCB      0
0001d7  00                DCB      0
                  |L1.472|
0001d8  44657620          DCB      "Dev Time   : %u\n",0
0001dc  54696d65
0001e0  2020203a
0001e4  2025750a
0001e8  00      
0001e9  00                DCB      0
0001ea  00                DCB      0
0001eb  00                DCB      0
                  |L1.492|
0001ec  436f6d70          DCB      "Comp ID    : %u\n",0
0001f0  20494420
0001f4  2020203a
0001f8  2025750a
0001fc  00      
0001fd  00                DCB      0
0001fe  00                DCB      0
0001ff  00                DCB      0
                  |L1.512|
000200  4b657920          DCB      "Key Ver    : %u\n",0
000204  56657220
000208  2020203a
00020c  2025750a
000210  00      
000211  00                DCB      0
000212  00                DCB      0
000213  00                DCB      0
                  |L1.532|
000214  454f4420          DCB      "EOD Ver    : %u\n",0
000218  56657220
00021c  2020203a
000220  2025750a
000224  00      
000225  00                DCB      0
000226  00                DCB      0
000227  00                DCB      0
                  |L1.552|
000228  424c2056          DCB      "BL Ver\t   : %u\n",0
00022c  65720920
000230  20203a20
000234  25750a00
                  |L1.568|
000238  4649524d          DCB      "FIRM Ver   : %u\n",0
00023c  20566572
000240  2020203a
000244  2025750a
000248  00      
000249  00                DCB      0
00024a  00                DCB      0
00024b  00                DCB      0
                  |L1.588|
                          DCD      GetVerStrBuf
                  |L1.592|
000250  257500            DCB      "%u",0
000253  00                DCB      0
                  |L1.596|
000254  43434853          DCB      "CCHS Ver   : %u\n",0
000258  20566572
00025c  2020203a
000260  2025750a
000264  00      
000265  00                DCB      0
000266  00                DCB      0
000267  00                DCB      0
                  |L1.616|
000268  4c6f6361          DCB      "Location ID: %u\n",0
00026c  74696f6e
000270  2049443a
000274  2025750a
000278  00      
000279  00                DCB      0
00027a  00                DCB      0
00027b  00                DCB      0
                  |L1.636|
00027c  496e7442          DCB      "IntBL Ver  : %u\n",0
000280  4c205665
000284  7220203a
000288  2025750a
00028c  00      
00028d  00                DCB      0
00028e  00                DCB      0
00028f  00                DCB      0
                  |L1.656|
000290  46756e63          DCB      "FuncBL Ver : %u\n",0
000294  424c2056
000298  6572203a
00029c  2025750a
0002a0  00      
0002a1  00                DCB      0
0002a2  00                DCB      0
0002a3  00                DCB      0
                  |L1.676|
0002a4  416c6572          DCB      "AlertMsgVer: %u\n",0
0002a8  744d7367
0002ac  5665723a
0002b0  2025750a
0002b4  00      
0002b5  00                DCB      0
0002b6  00                DCB      0
0002b7  00                DCB      0
                  |L1.696|
0002b8  52574b65          DCB      "RWKey Ver  : %u (0x%04X)\n",0
0002bc  79205665
0002c0  7220203a
0002c4  20257520
0002c8  28307825
0002cc  30345829
0002d0  0a00    
0002d2  00                DCB      0
0002d3  00                DCB      0
0002d4  4f545020          DCB      "OTP Ver    : %u\n",0
0002d8  56657220
0002dc  2020203a
0002e0  2025750a
0002e4  00      
0002e5  00                DCB      0
0002e6  00                DCB      0
0002e7  00                DCB      0
                  |L1.744|
0002e8  52657365          DCB      "Reserved   : \n",0
0002ec  72766564
0002f0  2020203a
0002f4  200a00  
0002f7  00                DCB      0
                  |L1.760|
0002f8  e3a00000          MOV      r0,#0                 ;173
0002fc  eaffffa3          B        |L1.400|
;;;177    
                          ENDP

                  OctopusReaderQueryTimeEx PROC
;;;178    
;;;179    void OctopusReaderQueryTimeEx(UINT* tempYear,UINT* tempMonth,UINT* tempDay,UINT* tempHour,UINT* tempMinute,UINT* tempSecond)
000300  e92d4ff0          PUSH     {r4-r11,lr}
;;;180    {
000304  e24dd0ac          SUB      sp,sp,#0xac
000308  e1a05000          MOV      r5,r0
00030c  e1a06001          MOV      r6,r1
000310  e1a07002          MOV      r7,r2
000314  e1a08003          MOV      r8,r3
000318  e1cdadd0          LDRD     r10,r11,[sp,#0xd0]
;;;181        //stDevVer DeviceV;
;;;182        char timeStr[32];
;;;183        char* timeStrStart;
;;;184        time_t u32_time = GetCurrentUTCTime() ;//- GMT_TIME_ZONE_DIFF_SECONDS;
00031c  ebfffffe          BL       GetCurrentUTCTime
000320  e58d0088          STR      r0,[sp,#0x88]
;;;185        UTCTimeToString(u32_time, timeStr);  //%04d%02d%02d%02d%02d%02d
000324  e28d108c          ADD      r1,sp,#0x8c
000328  e59d0088          LDR      r0,[sp,#0x88]
00032c  ebfffffe          BL       UTCTimeToString
;;;186        UINT    u32_tempstr[30];
;;;187        CHAR	tmpstr[3];
;;;188        memset(u32_tempstr, 0, sizeof(u32_tempstr));
000330  e3a01078          MOV      r1,#0x78
000334  e28d0010          ADD      r0,sp,#0x10
000338  ebfffffe          BL       __aeabi_memclr4
;;;189        
;;;190        timeStrStart = timeStr+2;
00033c  e28d908e          ADD      r9,sp,#0x8e
;;;191        
;;;192        if (timeStrStart[0] != '\n')
000340  e5d90000          LDRB     r0,[r9,#0]
000344  e350000a          CMP      r0,#0xa
000348  0a00000d          BEQ      |L1.900|
;;;193        {
;;;194            for (int i = 0; i < 6; i++)
00034c  e3a04000          MOV      r4,#0
000350  ea000009          B        |L1.892|
                  |L1.852|
;;;195            {
;;;196                strncpy((CHAR *)&tmpstr, (const CHAR *)&timeStrStart[i*2], 2);
000354  e0891084          ADD      r1,r9,r4,LSL #1
000358  e3a02002          MOV      r2,#2
00035c  e28d000c          ADD      r0,sp,#0xc
000360  ebfffffe          BL       strncpy
;;;197                u32_tempstr[5-i] = atoi(tmpstr);
000364  e28d000c          ADD      r0,sp,#0xc
000368  ebfffffe          BL       atoi
00036c  e2641005          RSB      r1,r4,#5
000370  e28d2010          ADD      r2,sp,#0x10
000374  e7820101          STR      r0,[r2,r1,LSL #2]
000378  e2844001          ADD      r4,r4,#1              ;194
                  |L1.892|
00037c  e3540006          CMP      r4,#6                 ;194
000380  bafffff3          BLT      |L1.852|
                  |L1.900|
;;;198            }
;;;199        }  
;;;200        
;;;201        //TimeVer((BYTE *) &DeviceV, &u32_tempstr[0]);
;;;202        
;;;203        //CmdTimeVer (&u32_tempstr[0]);
;;;204        
;;;205        *tempYear   = u32_tempstr[5];
000384  e59d0024          LDR      r0,[sp,#0x24]
000388  e5850000          STR      r0,[r5,#0]
;;;206        *tempMonth  = u32_tempstr[4];
00038c  e59d0020          LDR      r0,[sp,#0x20]
000390  e5860000          STR      r0,[r6,#0]
;;;207        *tempDay    = u32_tempstr[3];
000394  e59d001c          LDR      r0,[sp,#0x1c]
000398  e5870000          STR      r0,[r7,#0]
;;;208        *tempHour   = u32_tempstr[2];
00039c  e59d0018          LDR      r0,[sp,#0x18]
0003a0  e5880000          STR      r0,[r8,#0]
;;;209        *tempMinute = u32_tempstr[1];
0003a4  e59d0014          LDR      r0,[sp,#0x14]
0003a8  e58a0000          STR      r0,[r10,#0]
;;;210        *tempSecond = u32_tempstr[0];
0003ac  e59d0010          LDR      r0,[sp,#0x10]
0003b0  e58b0000          STR      r0,[r11,#0]
;;;211        
;;;212        terninalPrintf ("20%d/%d/%d  %d:%d:%d\r\n", u32_tempstr[5], u32_tempstr[4], u32_tempstr[3], u32_tempstr[2], u32_tempstr[1], u32_tempstr[0]);
0003b4  e59d0010          LDR      r0,[sp,#0x10]
0003b8  e59d2014          LDR      r2,[sp,#0x14]
0003bc  e59d1018          LDR      r1,[sp,#0x18]
0003c0  e58d0008          STR      r0,[sp,#8]
0003c4  e88d0006          STM      sp,{r1,r2}
0003c8  e28f0f93          ADR      r0,|L1.1564|
0003cc  e59d1024          LDR      r1,[sp,#0x24]
0003d0  e59d2020          LDR      r2,[sp,#0x20]
0003d4  e59d301c          LDR      r3,[sp,#0x1c]
0003d8  ebfffffe          BL       terninalPrintf
;;;213        
;;;214    }
0003dc  e28dd0ac          ADD      sp,sp,#0xac
0003e0  e8bd8ff0          POP      {r4-r11,pc}
;;;215    
                          ENDP

                  OctopusReaderQueryTime PROC
;;;216    
;;;217    void OctopusReaderQueryTime(void)
0003e4  e92d4070          PUSH     {r4-r6,lr}
;;;218    {
0003e8  e24dd0a8          SUB      sp,sp,#0xa8
;;;219        //stDevVer DeviceV;
;;;220        char timeStr[32];
;;;221        char* timeStrStart;
;;;222        time_t u32_time = GetCurrentUTCTime() ;//- GMT_TIME_ZONE_DIFF_SECONDS;
0003ec  ebfffffe          BL       GetCurrentUTCTime
0003f0  e1a06000          MOV      r6,r0
;;;223        UTCTimeToString(u32_time, timeStr);  //%04d%02d%02d%02d%02d%02d
0003f4  e28d1088          ADD      r1,sp,#0x88
0003f8  e1a00006          MOV      r0,r6
0003fc  ebfffffe          BL       UTCTimeToString
;;;224        UINT    u32_tempstr[30];
;;;225        CHAR	tmpstr[3];
;;;226        memset(u32_tempstr, 0, sizeof(u32_tempstr));
000400  e3a01078          MOV      r1,#0x78
000404  e28d0010          ADD      r0,sp,#0x10
000408  ebfffffe          BL       __aeabi_memclr4
;;;227        
;;;228        timeStrStart = timeStr+2;
00040c  e28d508a          ADD      r5,sp,#0x8a
;;;229        
;;;230        if (timeStrStart[0] != '\n')
000410  e5d50000          LDRB     r0,[r5,#0]
000414  e350000a          CMP      r0,#0xa
000418  0a00000d          BEQ      |L1.1108|
;;;231        {
;;;232            for (int i = 0; i < 6; i++)
00041c  e3a04000          MOV      r4,#0
000420  ea000009          B        |L1.1100|
                  |L1.1060|
;;;233            {
;;;234                strncpy((CHAR *)&tmpstr, (const CHAR *)&timeStrStart[i*2], 2);
000424  e0851084          ADD      r1,r5,r4,LSL #1
000428  e3a02002          MOV      r2,#2
00042c  e28d000c          ADD      r0,sp,#0xc
000430  ebfffffe          BL       strncpy
;;;235                u32_tempstr[5-i] = atoi(tmpstr);
000434  e28d000c          ADD      r0,sp,#0xc
000438  ebfffffe          BL       atoi
00043c  e2641005          RSB      r1,r4,#5
000440  e28d2010          ADD      r2,sp,#0x10
000444  e7820101          STR      r0,[r2,r1,LSL #2]
000448  e2844001          ADD      r4,r4,#1              ;232
                  |L1.1100|
00044c  e3540006          CMP      r4,#6                 ;232
000450  bafffff3          BLT      |L1.1060|
                  |L1.1108|
;;;236            }
;;;237        }  
;;;238        
;;;239        //TimeVer((BYTE *) &DeviceV, &u32_tempstr[0]);
;;;240        
;;;241        //CmdTimeVer (&u32_tempstr[0]);
;;;242        terninalPrintf ("20%d/%d/%d  %d:%d:%d\r\n", u32_tempstr[5], u32_tempstr[4], u32_tempstr[3], u32_tempstr[2], u32_tempstr[1], u32_tempstr[0]);
000454  e59d0010          LDR      r0,[sp,#0x10]
000458  e59d2014          LDR      r2,[sp,#0x14]
00045c  e59d1018          LDR      r1,[sp,#0x18]
000460  e58d0008          STR      r0,[sp,#8]
000464  e88d0006          STM      sp,{r1,r2}
000468  e28f0f6b          ADR      r0,|L1.1564|
00046c  e59d1024          LDR      r1,[sp,#0x24]
000470  e59d2020          LDR      r2,[sp,#0x20]
000474  e59d301c          LDR      r3,[sp,#0x1c]
000478  ebfffffe          BL       terninalPrintf
;;;243        
;;;244    }
00047c  e28dd0a8          ADD      sp,sp,#0xa8
000480  e8bd8070          POP      {r4-r6,pc}
;;;245    
                          ENDP

                  OctopusReaderGetInterface PROC
;;;250    /*-----------------------------------------*/
;;;251    TSReaderInterface* OctopusReaderGetInterface(void)
000484  e59f01a8          LDR      r0,|L1.1588|
;;;252    {
;;;253        return &mReaderInterface;
;;;254    }
000488  e12fff1e          BX       lr
;;;255    BOOL OctopusReaderSetAIValue(uint8_t AI1, uint8_t AI2)
                          ENDP

                  OctopusReaderSetAIValue PROC
00048c  e92d4070          PUSH     {r4-r6,lr}
;;;256    {   
000490  e1a04000          MOV      r4,r0
000494  e1a05001          MOV      r5,r1
;;;257        AI[0] = AI1;
000498  e59f0198          LDR      r0,|L1.1592|
00049c  e5c04000          STRB     r4,[r0,#0]  ; AI
;;;258        AI[1] = AI2;
0004a0  e5c05001          STRB     r5,[r0,#1]  ; AI
;;;259        terninalPrintf("OctopusReaderSetAIValue OK!! octopusReceiptNumber = [0x%02x, 0x%02x] !!\r\n", AI[0], AI[1]);
0004a4  e5d02001          LDRB     r2,[r0,#1]  ; AI
0004a8  e5d01000          LDRB     r1,[r0,#0]  ; AI
0004ac  e59f0188          LDR      r0,|L1.1596|
0004b0  ebfffffe          BL       terninalPrintf
;;;260        return TRUE;
0004b4  e3a00001          MOV      r0,#1
;;;261    }
0004b8  e8bd8070          POP      {r4-r6,pc}
;;;262    BOOL OctopusReaderInit(void)
                          ENDP

                  OctopusReaderSetPower PROC
;;;290    }
;;;291    BOOL OctopusReaderSetPower(uint8_t id, BOOL flag)
0004bc  e92d4070          PUSH     {r4-r6,lr}
;;;292    {    
0004c0  e1a06000          MOV      r6,r0
0004c4  e1a04001          MOV      r4,r1
;;;293        if(flag)
0004c8  e3540000          CMP      r4,#0
0004cc  0a000003          BEQ      |L1.1248|
;;;294        {
;;;295            powerUpTick = xTaskGetTickCount();
0004d0  ebfffffe          BL       xTaskGetTickCount
0004d4  e59f1164          LDR      r1,|L1.1600|
0004d8  e5810000          STR      r0,[r1,#0]  ; powerUpTick
0004dc  ea000012          B        |L1.1324|
                  |L1.1248|
;;;296        }
;;;297        else
;;;298        {
;;;299            if(needInitReaderFlag == FALSE)
0004e0  e59f015c          LDR      r0,|L1.1604|
0004e4  e5d00000          LDRB     r0,[r0,#0]  ; needInitReaderFlag
0004e8  e3500000          CMP      r0,#0
0004ec  1a00000b          BNE      |L1.1312|
;;;300            {
;;;301                INT s32_ret = EndSession();
0004f0  ebfffffe          BL       EndSession
0004f4  e1a05000          MOV      r5,r0
;;;302                if (s32_ret == ERR_NOERR)
0004f8  e3550000          CMP      r5,#0
0004fc  1a000002          BNE      |L1.1292|
;;;303                    sysprintf("End Session success\n");
000500  e28f0d05          ADR      r0,|L1.1608|
000504  ebfffffe          BL       sysprintf
000508  ea000001          B        |L1.1300|
                  |L1.1292|
;;;304                else
;;;305                    sysprintf("End Session fail!\n");
00050c  e28f0f53          ADR      r0,|L1.1632|
000510  ebfffffe          BL       sysprintf
                  |L1.1300|
;;;306                vTaskDelay(CARD_INIT_TIMEOUT_INTERVAL);
000514  e3a00064          MOV      r0,#0x64
000518  ebfffffe          BL       vTaskDelay
;;;307            }
00051c  e1a00000          MOV      r0,r0
                  |L1.1312|
;;;308            powerUpTick = 0; 
000520  e3a00000          MOV      r0,#0
000524  e59f1114          LDR      r1,|L1.1600|
000528  e5810000          STR      r0,[r1,#0]  ; powerUpTick
                  |L1.1324|
;;;309        }
;;;310        pUartInterface->setPowerFunc(flag);     
00052c  e59f0140          LDR      r0,|L1.1652|
000530  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000534  e5901010          LDR      r1,[r0,#0x10]
000538  e1a00004          MOV      r0,r4
00053c  e12fff31          BLX      r1
;;;311        pUartInterface->setRS232PowerFunc(flag);
000540  e59f012c          LDR      r0,|L1.1652|
000544  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000548  e5901014          LDR      r1,[r0,#0x14]
00054c  e1a00004          MOV      r0,r4
000550  e12fff31          BLX      r1
;;;312        
;;;313        if(flag == FALSE)
000554  e3540000          CMP      r4,#0
000558  1a000002          BNE      |L1.1384|
;;;314        {
;;;315            needInitReaderFlag = TRUE;
00055c  e3a00001          MOV      r0,#1
000560  e59f10dc          LDR      r1,|L1.1604|
000564  e5c10000          STRB     r0,[r1,#0]  ; needInitReaderFlag
                  |L1.1384|
;;;316        }
;;;317        return flag;
000568  e1a00004          MOV      r0,r4
;;;318    }
00056c  e8bd8070          POP      {r4-r6,pc}
;;;319    
                          ENDP

                  OctopusReaderInit PROC
;;;261    }
;;;262    BOOL OctopusReaderInit(void)
000570  e92d4010          PUSH     {r4,lr}
;;;263    {
;;;264        sysprintf("OctopusReaderInit!!\n");
000574  e28f00fc          ADR      r0,|L1.1656|
000578  ebfffffe          BL       sysprintf
;;;265       
;;;266        pUartInterface = UartGetInterface(OCTOPUS_READER_UART);
00057c  e3a00001          MOV      r0,#1
000580  ebfffffe          BL       UartGetInterface
000584  e59f10e8          LDR      r1,|L1.1652|
000588  e5810000          STR      r0,[r1,#0]  ; pUartInterface
;;;267        if(pUartInterface == NULL)
00058c  e2810000          ADD      r0,r1,#0
000590  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000594  e3500000          CMP      r0,#0
000598  1a000003          BNE      |L1.1452|
;;;268        {
;;;269            sysprintf("OctopusReaderInit ERROR (pUartInterface == NULL)!!\n");
00059c  e28f00ec          ADR      r0,|L1.1680|
0005a0  ebfffffe          BL       sysprintf
;;;270            return FALSE;
0005a4  e3a00000          MOV      r0,#0
                  |L1.1448|
;;;271        }
;;;272        
;;;273        //terninalPrintf("ioctlFunc(UART_IOC_SET_OCTOPUS_MODE, 0, 0)\r\n");
;;;274        pUartInterface->ioctlFunc(UART_IOC_SET_OCTOPUS_MODE, 0, 0);
;;;275        
;;;276        if(pUartInterface->initFunc(UART_BARDRATE) == FALSE)
;;;277        {
;;;278            sysprintf("OctopusReaderInit ERROR (initFunc false)!!\n");
;;;279            return FALSE;
;;;280        }
;;;281        OctopusReaderSetPower(0, FALSE);
;;;282        
;;;283        //AI[0] = 0;//GetMeterStorageData()->octopusReceiptNumber[0];
;;;284        //AI[1] = 0;//GetMeterStorageData()->octopusReceiptNumber[1];
;;;285        sysprintf("OctopusReaderInit OK!!!\r\n");
;;;286        
;;;287        GetVerFlag = FALSE;
;;;288        
;;;289        return TRUE;
;;;290    }
0005a8  e8bd8010          POP      {r4,pc}
                  |L1.1452|
0005ac  e59f00c0          LDR      r0,|L1.1652|
0005b0  e5900000          LDR      r0,[r0,#0]            ;274  ; pUartInterface
0005b4  e3a02000          MOV      r2,#0                 ;274
0005b8  e1a01002          MOV      r1,r2                 ;274
0005bc  e5903018          LDR      r3,[r0,#0x18]         ;274
0005c0  e3a00028          MOV      r0,#0x28              ;274
0005c4  e12fff33          BLX      r3                    ;274
0005c8  e59f00a4          LDR      r0,|L1.1652|
0005cc  e5900000          LDR      r0,[r0,#0]            ;276  ; pUartInterface
0005d0  e5901000          LDR      r1,[r0,#0]            ;276
0005d4  e3a00ae1          MOV      r0,#0xe1000           ;276
0005d8  e12fff31          BLX      r1                    ;276
0005dc  e3500000          CMP      r0,#0                 ;276
0005e0  1a000003          BNE      |L1.1524|
0005e4  e28f00d8          ADR      r0,|L1.1732|
0005e8  ebfffffe          BL       sysprintf
0005ec  e3a00000          MOV      r0,#0                 ;279
0005f0  eaffffec          B        |L1.1448|
                  |L1.1524|
0005f4  e3a01000          MOV      r1,#0                 ;281
0005f8  e1a00001          MOV      r0,r1                 ;281
0005fc  ebfffffe          BL       OctopusReaderSetPower
000600  e28f00e8          ADR      r0,|L1.1776|
000604  ebfffffe          BL       sysprintf
000608  e3a00000          MOV      r0,#0                 ;287
00060c  e51f1468          LDR      r1,|L1.428|
000610  e5c10000          STRB     r0,[r1,#0]            ;287  ; GetVerFlag
000614  e3a00001          MOV      r0,#1                 ;289
000618  eaffffe2          B        |L1.1448|
                  |L1.1564|
00061c  32302564          DCB      "20%d/%d/%d  %d:%d:%d\r\n",0
000620  2f25642f
000624  25642020
000628  25643a25
00062c  643a2564
000630  0d0a00  
000633  00                DCB      0
                  |L1.1588|
                          DCD      mReaderInterface
                  |L1.1592|
                          DCD      ||AI||
                  |L1.1596|
                          DCD      ||.constdata||
                  |L1.1600|
                          DCD      powerUpTick
                  |L1.1604|
                          DCD      needInitReaderFlag
                  |L1.1608|
000648  456e6420          DCB      "End Session success\n",0
00064c  53657373
000650  696f6e20
000654  73756363
000658  6573730a
00065c  00      
00065d  00                DCB      0
00065e  00                DCB      0
00065f  00                DCB      0
                  |L1.1632|
000660  456e6420          DCB      "End Session fail!\n",0
000664  53657373
000668  696f6e20
00066c  6661696c
000670  210a00  
000673  00                DCB      0
                  |L1.1652|
                          DCD      pUartInterface
                  |L1.1656|
000678  4f63746f          DCB      "OctopusReaderInit!!\n",0
00067c  70757352
000680  65616465
000684  72496e69
000688  7421210a
00068c  00      
00068d  00                DCB      0
00068e  00                DCB      0
00068f  00                DCB      0
                  |L1.1680|
000690  4f63746f          DCB      "OctopusReaderInit ERROR (pUartInterface == NULL)!!\n",0
000694  70757352
000698  65616465
00069c  72496e69
0006a0  74204552
0006a4  524f5220
0006a8  28705561
0006ac  7274496e
0006b0  74657266
0006b4  61636520
0006b8  3d3d204e
0006bc  554c4c29
0006c0  21210a00
                  |L1.1732|
0006c4  4f63746f          DCB      "OctopusReaderInit ERROR (initFunc false)!!\n",0
0006c8  70757352
0006cc  65616465
0006d0  72496e69
0006d4  74204552
0006d8  524f5220
0006dc  28696e69
0006e0  7446756e
0006e4  63206661
0006e8  6c736529
0006ec  21210a00
                  |L1.1776|
0006f0  4f63746f          DCB      "OctopusReaderInit OK!!!\r\n",0
0006f4  70757352
0006f8  65616465
0006fc  72496e69
000700  74204f4b
000704  2121210d
000708  0a00    
00070a  00                DCB      0
00070b  00                DCB      0
                          ENDP

                  OctopusReaderCheckReader PROC
;;;319    
;;;320    uint8_t OctopusReaderCheckReader(void)
00070c  e92d4030          PUSH     {r4,r5,lr}
;;;321    {
000710  e24ddf81          SUB      sp,sp,#0x204
;;;322        uint8_t reVal = TSREADER_CHECK_READER_OK;
000714  e3a04002          MOV      r4,#2
;;;323        sysprintf(" !!! OctopusReaderCheckReader enter  !!!...\r\n");
000718  e28f0ff3          ADR      r0,|L1.2796|
00071c  ebfffffe          BL       sysprintf
;;;324        
;;;325        while(readVN() != TRUE)
000720  ea000019          B        |L1.1932|
                  |L1.1828|
;;;326        {
;;;327            //terninalPrintf("readVN retry(%d:%d)...\r\n", xTaskGetTickCount() - powerUpTick, CARD_INIT_TIMEOUT_TIME); 
;;;328            //terninalPrintf(":");
;;;329            vTaskDelay(CARD_INIT_TIMEOUT_INTERVAL);
000724  e3a00064          MOV      r0,#0x64
000728  ebfffffe          BL       vTaskDelay
;;;330            if((powerUpTick != 0) && ((xTaskGetTickCount() - powerUpTick) > CARD_INIT_TIMEOUT_TIME) )
00072c  e51f00f4          LDR      r0,|L1.1600|
000730  e5900000          LDR      r0,[r0,#0]  ; powerUpTick
000734  e3500000          CMP      r0,#0
000738  0a000013          BEQ      |L1.1932|
00073c  ebfffffe          BL       xTaskGetTickCount
000740  e51f1108          LDR      r1,|L1.1600|
000744  e5911000          LDR      r1,[r1,#0]  ; powerUpTick
000748  e0400001          SUB      r0,r0,r1
00074c  e3500ffa          CMP      r0,#0x3e8
000750  9a00000d          BLS      |L1.1932|
;;;331            {
;;;332                //sysprintf("readVN break (time:%d)...\r\n", (int)(xTaskGetTickCount() - powerUpTick));
;;;333                reVal = TSREADER_CHECK_READER_ERROR;                
000754  e3a04003          MOV      r4,#3
;;;334                {
;;;335                    char str[512];
;;;336                    sprintf(str, "   Card Reader --> readVN break (time:%d)...\r\n", (int)(xTaskGetTickCount() - powerUpTick));
000758  ebfffffe          BL       xTaskGetTickCount
00075c  e51f1124          LDR      r1,|L1.1600|
000760  e5911000          LDR      r1,[r1,#0]  ; powerUpTick
000764  e0405001          SUB      r5,r0,r1
000768  e1a02005          MOV      r2,r5
00076c  e28f1fea          ADR      r1,|L1.2844|
000770  e28d0004          ADD      r0,sp,#4
000774  ebfffffe          BL       __2sprintf
;;;337                    sysprintf(str);
000778  e28d0004          ADD      r0,sp,#4
00077c  ebfffffe          BL       sysprintf
;;;338                }
;;;339                return reVal;  
000780  e1a00004          MOV      r0,r4
                  |L1.1924|
000784  e28ddf81          ADD      sp,sp,#0x204
;;;340            }            
;;;341        }    
;;;342        if(needInitReaderFlag)
;;;343        {
;;;344            INT s32_ret = Authenticate();
;;;345            if	(s32_ret == ERR_NOERR)
;;;346            {
;;;347                //terninalPrintf("Authenticate success\n");
;;;348                needInitReaderFlag = FALSE;
;;;349            }
;;;350            else
;;;351            {
;;;352                //terninalPrintf("Authenticate fail!\n"); 
;;;353                reVal = TSREADER_CHECK_READER_ERROR; 
;;;354            }
;;;355        }                        
;;;356        return reVal;
;;;357    }
000788  e8bd8030          POP      {r4,r5,pc}
                  |L1.1932|
00078c  ebfffffe          BL       readVN
000790  e3500001          CMP      r0,#1                 ;325
000794  1affffe2          BNE      |L1.1828|
000798  e51f015c          LDR      r0,|L1.1604|
00079c  e5d00000          LDRB     r0,[r0,#0]            ;342  ; needInitReaderFlag
0007a0  e3500000          CMP      r0,#0                 ;342
0007a4  0a000009          BEQ      |L1.2000|
0007a8  ebfffffe          BL       Authenticate
0007ac  e1a05000          MOV      r5,r0                 ;344
0007b0  e3550000          CMP      r5,#0                 ;345
0007b4  1a000003          BNE      |L1.1992|
0007b8  e3a00000          MOV      r0,#0                 ;348
0007bc  e51f1180          LDR      r1,|L1.1604|
0007c0  e5c10000          STRB     r0,[r1,#0]            ;348  ; needInitReaderFlag
0007c4  ea000000          B        |L1.1996|
                  |L1.1992|
0007c8  e3a04003          MOV      r4,#3                 ;353
                  |L1.1996|
0007cc  e1a00000          MOV      r0,r0                 ;355
                  |L1.2000|
0007d0  e1a00004          MOV      r0,r4                 ;356
0007d4  eaffffea          B        |L1.1924|
;;;358    
                          ENDP

                  OctopusReaderBreakCheckReader PROC
;;;359    BOOL OctopusReaderBreakCheckReader(void)
0007d8  e3a00001          MOV      r0,#1
;;;360    {
;;;361        BOOL reVal = TRUE;
;;;362        //checkReaderFlag = FALSE;
;;;363        return reVal;
;;;364    }
0007dc  e12fff1e          BX       lr
;;;365    
                          ENDP

                  OctopusReaderCheckHangUpEnable PROC
;;;366    
;;;367    BOOL OctopusReaderCheckHangUpEnable(void)
0007e0  e92d4010          PUSH     {r4,lr}
;;;368    {
;;;369        return CardReaderCheckHangUpEnable();
0007e4  ebfffffe          BL       CardReaderCheckHangUpEnable
;;;370    }
0007e8  e8bd8010          POP      {r4,pc}
;;;371    
                          ENDP

                  InitOctopusReaderHangUpStatus PROC
;;;372    
;;;373    void InitOctopusReaderHangUpStatus(void)
0007ec  e3a00000          MOV      r0,#0
;;;374    {
;;;375        HangUpStatus = FALSE;
0007f0  e59f1354          LDR      r1,|L1.2892|
0007f4  e5c10000          STRB     r0,[r1,#0]  ; HangUpStatus
;;;376    }
0007f8  e12fff1e          BX       lr
;;;377    
                          ENDP

                  OctopusReaderCheckHangUp PROC
;;;378    void OctopusReaderCheckHangUp(BOOL HUstatus)
0007fc  e59f1348          LDR      r1,|L1.2892|
;;;379    {
;;;380        //return TSREADER_CHECK_READER_ERROR;
;;;381        HangUpStatus = HUstatus;
000800  e5c10000          STRB     r0,[r1,#0]  ; HangUpStatus
;;;382    }
000804  e12fff1e          BX       lr
;;;383    
                          ENDP

                  OctopusReaderHangUpStatus PROC
;;;384    BOOL OctopusReaderHangUpStatus(void)
000808  e59f033c          LDR      r0,|L1.2892|
;;;385    {
;;;386        return HangUpStatus;
00080c  e5d00000          LDRB     r0,[r0,#0]  ; HangUpStatus
;;;387    }
000810  e12fff1e          BX       lr
;;;388    
                          ENDP

                  OctopusReaderProcess PROC
;;;391    #define MONEY_BASE_VALUE_IN_CENTS   10
;;;392    BOOL OctopusReaderProcess(uint16_t targetDeduct, tsreaderDepositResultCallback callback)
000814  e92d4ff0          PUSH     {r4-r11,lr}
;;;393    {   
000818  e24ddf63          SUB      sp,sp,#0x18c
00081c  e1a05000          MOV      r5,r0
000820  e1a06001          MOV      r6,r1
;;;394        //terninalPrintf("---- OctopusReaderProcess (targetDeduct:%d cents, total time:%d, AI:[0x%02x, 0x%02x])...\r\n", 
;;;395        //                    targetDeduct, (xTaskGetTickCount() - powerUpTick)/portTICK_RATE_MS,  AI[0],  AI[1]);   
;;;396        BOOL retval = FALSE;  
000824  e3a00000          MOV      r0,#0
000828  e58d0188          STR      r0,[sp,#0x188]
;;;397        INT s32_ret;    
;;;398          
;;;399        TickType_t tickLocalStart;  
;;;400        ptsreaderDepositResultCallback =  callback;  
00082c  e59f031c          LDR      r0,|L1.2896|
000830  e5806000          STR      r6,[r0,#0]  ; ptsreaderDepositResultCallback
;;;401        tickLocalStart = xTaskGetTickCount();
000834  ebfffffe          BL       xTaskGetTickCount
000838  e58d0180          STR      r0,[sp,#0x180]
;;;402        currentTargetDeduct = targetDeduct;     
00083c  e59f0310          LDR      r0,|L1.2900|
000840  e1c050b0          STRH     r5,[r0,#0]  ; currentTargetDeduct
;;;403        
;;;404        UINT 	in1, in2, in3, in4;
;;;405        CHAR	temp[20];
;;;406        CHAR	tmpstr[3];
;;;407        Rsp_PollDeductStl pollDeductInfo;
;;;408        
;;;409        in1 = 30;   //timeout (default = 30 (3000ms)
000844  e3a0401e          MOV      r4,#0x1e
;;;410        in2 = currentTargetDeduct/MONEY_BASE_VALUE_IN_CENTS;    //deduct amount in cents (default = 1 = 10 cents)
000848  e3a0100a          MOV      r1,#0xa
00084c  e1d000b0          LDRH     r0,[r0,#0]  ; currentTargetDeduct
000850  ebfffffe          BL       __aeabi_idivmod
000854  e1a07000          MOV      r7,r0
;;;411        in3 = 0;    //Alert Msg format (default = 0
000858  e3a08000          MOV      r8,#0
;;;412    
;;;413        //INT PollDeduct (BYTE bTimeout, INT TxnAmt, const BYTE *AddInfo, BYTE bAlertMsgFmt, Rsp_PollDeductStl *cardInfo)
;;;414        memset((CHAR*)&pollDeductInfo, 0, sizeof(pollDeductInfo));
00085c  e3a01f56          MOV      r1,#0x158
000860  e28d0014          ADD      r0,sp,#0x14
000864  ebfffffe          BL       __aeabi_memclr4
;;;415        sysprintf("Calling Deduct(%d, 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X, %d)...\n", in1, AI[0], AI[1], AI[2], AI[3], AI[4], in2);
000868  e51f0238          LDR      r0,|L1.1592|
00086c  e5d00004          LDRB     r0,[r0,#4]  ; AI
000870  e51f1240          LDR      r1,|L1.1592|
000874  e5d11003          LDRB     r1,[r1,#3]  ; AI
000878  e51f2248          LDR      r2,|L1.1592|
00087c  e5d22002          LDRB     r2,[r2,#2]  ; AI
000880  e58d0008          STR      r0,[sp,#8]
000884  e58d700c          STR      r7,[sp,#0xc]
000888  e51f0258          LDR      r0,|L1.1592|
00088c  e58d1004          STR      r1,[sp,#4]
000890  e58d2000          STR      r2,[sp,#0]
000894  e5d03001          LDRB     r3,[r0,#1]  ; AI
000898  e5d02000          LDRB     r2,[r0,#0]  ; AI
00089c  e1a01004          MOV      r1,r4
0008a0  e28f0e2b          ADR      r0,|L1.2904|
0008a4  ebfffffe          BL       sysprintf
;;;416        s32_ret = PollDeduct(in1, in2, AI, in3, &pollDeductInfo);
0008a8  e28d0014          ADD      r0,sp,#0x14
0008ac  e1a03008          MOV      r3,r8
0008b0  e58d0000          STR      r0,[sp,#0]
0008b4  e1a00004          MOV      r0,r4
0008b8  e51f2288          LDR      r2,|L1.1592|
0008bc  e1a01007          MOV      r1,r7
0008c0  ebfffffe          BL       PollDeduct
0008c4  e58d0184          STR      r0,[sp,#0x184]
;;;417        if (s32_ret == ERR_NOERR) 
0008c8  e59d0184          LDR      r0,[sp,#0x184]
0008cc  e3500000          CMP      r0,#0
0008d0  1a0000f2          BNE      |L1.3232|
;;;418        {
;;;419            terninalPrintf("Deduction success \n");        
0008d4  e28f0faf          ADR      r0,|L1.2968|
0008d8  ebfffffe          BL       terninalPrintf
;;;420            terninalPrintf("Poll Status = %d\n",pollDeductInfo.pollStat);
0008dc  e5dd1016          LDRB     r1,[sp,#0x16]
0008e0  e28f0fb1          ADR      r0,|L1.2988|
0008e4  ebfffffe          BL       terninalPrintf
;;;421            strncpy(temp, (CHAR *)pollDeductInfo.CardNo, sizeof(pollDeductInfo.CardNo));
0008e8  e3a0200a          MOV      r2,#0xa
0008ec  e28d1017          ADD      r1,sp,#0x17
0008f0  e28d0f5b          ADD      r0,sp,#0x16c
0008f4  ebfffffe          BL       strncpy
;;;422            //by sam
;;;423            //temp[sizeof(temp)]='\0';
;;;424            temp[sizeof(pollDeductInfo.CardNo)]='\0';
0008f8  e3a00000          MOV      r0,#0
0008fc  e5cd0176          STRB     r0,[sp,#0x176]
;;;425                
;;;426            terninalPrintf("Card ID = %s\n",temp);
000900  e28d1f5b          ADD      r1,sp,#0x16c
000904  e28f0fad          ADR      r0,|L1.3008|
000908  ebfffffe          BL       terninalPrintf
;;;427            sysprintf("Language = %d\n", pollDeductInfo.language);
00090c  e5dd1021          LDRB     r1,[sp,#0x21]
000910  e28f0fae          ADR      r0,|L1.3024|
000914  ebfffffe          BL       sysprintf
;;;428            terninalPrintf("Remaining Value before = %d (%d.%d)\n", End4(pollDeductInfo.beforeRV), End4(pollDeductInfo.beforeRV)*MONEY_BASE_VALUE_IN_CENTS/100, End4(pollDeductInfo.beforeRV)*MONEY_BASE_VALUE_IN_CENTS%100);
000918  e28d0022          ADD      r0,sp,#0x22
00091c  ebfffffe          BL       __aeabi_uread4
000920  e58d000c          STR      r0,[sp,#0xc]
000924  ebfffffe          BL       End4
000928  e0800100          ADD      r0,r0,r0,LSL #2
00092c  e1a0b080          LSL      r11,r0,#1
000930  e3a01064          MOV      r1,#0x64
000934  e1a0000b          MOV      r0,r11
000938  ebfffffe          BL       __aeabi_uidivmod
00093c  e1a09001          MOV      r9,r1
000940  e28d0022          ADD      r0,sp,#0x22
000944  ebfffffe          BL       __aeabi_uread4
000948  e58d000c          STR      r0,[sp,#0xc]
00094c  ebfffffe          BL       End4
000950  e0800100          ADD      r0,r0,r0,LSL #2
000954  e1a0b080          LSL      r11,r0,#1
000958  e3a01064          MOV      r1,#0x64
00095c  e1a0000b          MOV      r0,r11
000960  ebfffffe          BL       __aeabi_uidivmod
000964  e1a0a000          MOV      r10,r0
000968  e28d0022          ADD      r0,sp,#0x22
00096c  ebfffffe          BL       __aeabi_uread4
000970  e1a0b000          MOV      r11,r0
000974  ebfffffe          BL       End4
000978  e1a03009          MOV      r3,r9
00097c  e1a0200a          MOV      r2,r10
000980  e58d0010          STR      r0,[sp,#0x10]
000984  e1a01000          MOV      r1,r0
000988  e28f0e25          ADR      r0,|L1.3040|
00098c  ebfffffe          BL       terninalPrintf
;;;429            terninalPrintf("Remaining Value after = %d (%d.%d)\n", End4(pollDeductInfo.afterRV), End4(pollDeductInfo.afterRV)*MONEY_BASE_VALUE_IN_CENTS/100, End4(pollDeductInfo.afterRV)*MONEY_BASE_VALUE_IN_CENTS%100);
000990  e28d0026          ADD      r0,sp,#0x26
000994  ebfffffe          BL       __aeabi_uread4
000998  e58d000c          STR      r0,[sp,#0xc]
00099c  ebfffffe          BL       End4
0009a0  e0800100          ADD      r0,r0,r0,LSL #2
0009a4  e1a0b080          LSL      r11,r0,#1
0009a8  e3a01064          MOV      r1,#0x64
0009ac  e1a0000b          MOV      r0,r11
0009b0  ebfffffe          BL       __aeabi_uidivmod
0009b4  e1a09001          MOV      r9,r1
0009b8  e28d0026          ADD      r0,sp,#0x26
0009bc  ebfffffe          BL       __aeabi_uread4
0009c0  e58d000c          STR      r0,[sp,#0xc]
0009c4  ebfffffe          BL       End4
0009c8  e0800100          ADD      r0,r0,r0,LSL #2
0009cc  e1a0b080          LSL      r11,r0,#1
0009d0  e3a01064          MOV      r1,#0x64
0009d4  e1a0000b          MOV      r0,r11
0009d8  ebfffffe          BL       __aeabi_uidivmod
0009dc  e1a0a000          MOV      r10,r0
0009e0  e28d0026          ADD      r0,sp,#0x26
0009e4  ebfffffe          BL       __aeabi_uread4
0009e8  e1a0b000          MOV      r11,r0
0009ec  ebfffffe          BL       End4
0009f0  e1a03009          MOV      r3,r9
0009f4  e1a0200a          MOV      r2,r10
0009f8  e58d0010          STR      r0,[sp,#0x10]
0009fc  e1a01000          MOV      r1,r0
000a00  e28f0f80          ADD      r0,pc,#0x80, 30 ; #0x200
000a04  ebfffffe          BL       terninalPrintf
;;;430            sysprintf("Alert Tone = %d\n", pollDeductInfo.alertTone);
000a08  e5dd102a          LDRB     r1,[sp,#0x2a]
000a0c  e28f0f86          ADR      r0,|L1.3116|
000a10  ebfffffe          BL       sysprintf
;;;431            sysprintf("Alert Msg = %d\n", pollDeductInfo.alertMsg);
000a14  e5dd102b          LDRB     r1,[sp,#0x2b]
000a18  e28f0f88          ADD      r0,pc,#0x88, 30 ; #0x220
000a1c  ebfffffe          BL       sysprintf
;;;432            sysprintf("Eng Alert Msg =\n");
000a20  e28f0f8a          ADR      r0,|L1.3152|
000a24  ebfffffe          BL       sysprintf
;;;433            DbgDump((BYTE *)pollDeductInfo.engAlertMsg, sizeof(pollDeductInfo.engAlertMsg));
000a28  e3a01064          MOV      r1,#0x64
000a2c  e28d002c          ADD      r0,sp,#0x2c
000a30  ebfffffe          BL       DbgDump
;;;434            sysprintf("Chi Alert Msg =\n");
000a34  e28f0f8a          ADR      r0,|L1.3172|
000a38  ebfffffe          BL       sysprintf
;;;435            DbgDump((BYTE *)pollDeductInfo.chiAlertMsg, sizeof(pollDeductInfo.chiAlertMsg));
000a3c  e3a010c8          MOV      r1,#0xc8
000a40  e28d0090          ADD      r0,sp,#0x90
000a44  ebfffffe          BL       DbgDump
;;;436            terninalPrintf("Octopus Type = %d\n", pollDeductInfo.octopusType);
000a48  e5dd1158          LDRB     r1,[sp,#0x158]
000a4c  e28f0f89          ADR      r0,|L1.3192|
000a50  ebfffffe          BL       terninalPrintf
;;;437            sysprintf("Reserved = \n");
000a54  e28f0e23          ADR      r0,|L1.3212|
000a58  ebfffffe          BL       sysprintf
;;;438            DbgDump((BYTE *)pollDeductInfo.Reserved, sizeof(pollDeductInfo.Reserved));
000a5c  e3a01013          MOV      r1,#0x13
000a60  e28d0014          ADD      r0,sp,#0x14
000a64  e3e02f51          MVN      r2,#0x144
000a68  e0400002          SUB      r0,r0,r2
000a6c  ebfffffe          BL       DbgDump
;;;439            
;;;440            if(ptsreaderDepositResultCallback != NULL)
000a70  e59f00d8          LDR      r0,|L1.2896|
000a74  e5900000          LDR      r0,[r0,#0]  ; ptsreaderDepositResultCallback
000a78  e3500000          CMP      r0,#0
000a7c  0a00000c          BEQ      |L1.2740|
;;;441            {
;;;442                ptsreaderDepositResultCallback(TRUE, pollDeductInfo.octopusType, End4(pollDeductInfo.afterRV)*MONEY_BASE_VALUE_IN_CENTS);
000a80  e28d0026          ADD      r0,sp,#0x26
000a84  ebfffffe          BL       __aeabi_uread4
000a88  e1a0a000          MOV      r10,r0
000a8c  ebfffffe          BL       End4
000a90  e0800100          ADD      r0,r0,r0,LSL #2
000a94  e59f1200          LDR      r1,|L1.3228|
000a98  e0019080          AND      r9,r1,r0,LSL #1
000a9c  e5dd1158          LDRB     r1,[sp,#0x158]
000aa0  e1a02009          MOV      r2,r9
000aa4  e3a00001          MOV      r0,#1
000aa8  e59f30a0          LDR      r3,|L1.2896|
000aac  e5933000          LDR      r3,[r3,#0]  ; ptsreaderDepositResultCallback
000ab0  e12fff33          BLX      r3
                  |L1.2740|
;;;443            }
;;;444            AI[1]++;		//increment receipt no.
000ab4  e51f0484          LDR      r0,|L1.1592|
000ab8  e5d00001          LDRB     r0,[r0,#1]  ; AI
000abc  e2800001          ADD      r0,r0,#1
000ac0  e51f1490          LDR      r1,|L1.1592|
000ac4  e5c10001          STRB     r0,[r1,#1]  ; AI
;;;445        
;;;446            if(AI[1] == 0)
000ac8  e2810000          ADD      r0,r1,#0
000acc  e5d00001          LDRB     r0,[r0,#1]  ; AI
000ad0  e3500000          CMP      r0,#0
000ad4  1a0000b0          BNE      |L1.3484|
;;;447                AI[0]++;
000ad8  e2810000          ADD      r0,r1,#0
000adc  e5d00000          LDRB     r0,[r0,#0]  ; AI
000ae0  e2800001          ADD      r0,r0,#1
000ae4  e5c10000          STRB     r0,[r1,#0]  ; AI
000ae8  ea0000ab          B        |L1.3484|
                  |L1.2796|
000aec  20212121          DCB      " !!! OctopusReaderCheckReader enter  !!!...\r\n",0
000af0  204f6374
000af4  6f707573
000af8  52656164
000afc  65724368
000b00  65636b52
000b04  65616465
000b08  7220656e
000b0c  74657220
000b10  20212121
000b14  2e2e2e0d
000b18  0a00    
000b1a  00                DCB      0
000b1b  00                DCB      0
                  |L1.2844|
000b1c  20202043          DCB      "   Card Reader --> readVN break (time:%d)...\r\n",0
000b20  61726420
000b24  52656164
000b28  6572202d
000b2c  2d3e2072
000b30  65616456
000b34  4e206272
000b38  65616b20
000b3c  2874696d
000b40  653a2564
000b44  292e2e2e
000b48  0d0a00  
000b4b  00                DCB      0
                  |L1.2892|
                          DCD      HangUpStatus
                  |L1.2896|
                          DCD      ptsreaderDepositResultCallback
                  |L1.2900|
                          DCD      currentTargetDeduct
                  |L1.2904|
000b58  43616c6c          DCB      "Calling Deduct(%d, 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X, "
000b5c  696e6720
000b60  44656475
000b64  63742825
000b68  642c2030
000b6c  78253032
000b70  58203078
000b74  25303258
000b78  20307825
000b7c  30325820
000b80  30782530
000b84  32582030
000b88  78253032
000b8c  582c20  
000b8f  2564292e          DCB      "%d)...\n",0
000b93  2e2e0a00
000b97  00                DCB      0
                  |L1.2968|
000b98  44656475          DCB      "Deduction success \n",0
000b9c  6374696f
000ba0  6e207375
000ba4  63636573
000ba8  73200a00
                  |L1.2988|
000bac  506f6c6c          DCB      "Poll Status = %d\n",0
000bb0  20537461
000bb4  74757320
000bb8  3d202564
000bbc  0a00    
000bbe  00                DCB      0
000bbf  00                DCB      0
                  |L1.3008|
000bc0  43617264          DCB      "Card ID = %s\n",0
000bc4  20494420
000bc8  3d202573
000bcc  0a00    
000bce  00                DCB      0
000bcf  00                DCB      0
                  |L1.3024|
000bd0  4c616e67          DCB      "Language = %d\n",0
000bd4  75616765
000bd8  203d2025
000bdc  640a00  
000bdf  00                DCB      0
                  |L1.3040|
000be0  52656d61          DCB      "Remaining Value before = %d (%d.%d)\n",0
000be4  696e696e
000be8  67205661
000bec  6c756520
000bf0  6265666f
000bf4  7265203d
000bf8  20256420
000bfc  2825642e
000c00  2564290a
000c04  00      
000c05  00                DCB      0
000c06  00                DCB      0
000c07  00                DCB      0
000c08  52656d61          DCB      "Remaining Value after = %d (%d.%d)\n",0
000c0c  696e696e
000c10  67205661
000c14  6c756520
000c18  61667465
000c1c  72203d20
000c20  25642028
000c24  25642e25
000c28  64290a00
                  |L1.3116|
000c2c  416c6572          DCB      "Alert Tone = %d\n",0
000c30  7420546f
000c34  6e65203d
000c38  2025640a
000c3c  00      
000c3d  00                DCB      0
000c3e  00                DCB      0
000c3f  00                DCB      0
000c40  416c6572          DCB      "Alert Msg = %d\n",0
000c44  74204d73
000c48  67203d20
000c4c  25640a00
                  |L1.3152|
000c50  456e6720          DCB      "Eng Alert Msg =\n",0
000c54  416c6572
000c58  74204d73
000c5c  67203d0a
000c60  00      
000c61  00                DCB      0
000c62  00                DCB      0
000c63  00                DCB      0
                  |L1.3172|
000c64  43686920          DCB      "Chi Alert Msg =\n",0
000c68  416c6572
000c6c  74204d73
000c70  67203d0a
000c74  00      
000c75  00                DCB      0
000c76  00                DCB      0
000c77  00                DCB      0
                  |L1.3192|
000c78  4f63746f          DCB      "Octopus Type = %d\n",0
000c7c  70757320
000c80  54797065
000c84  203d2025
000c88  640a00  
000c8b  00                DCB      0
                  |L1.3212|
000c8c  52657365          DCB      "Reserved = \n",0
000c90  72766564
000c94  203d200a
000c98  00      
000c99  00                DCB      0
000c9a  00                DCB      0
000c9b  00                DCB      0
                  |L1.3228|
                          DCD      0x0000ffff
                  |L1.3232|
;;;448            
;;;449            //GetMeterStorageData()->octopusReceiptNumber[0] = AI[0]; 
;;;450           // GetMeterStorageData()->octopusReceiptNumber[1] = AI[1];     
;;;451        } 
;;;452        else //if (s32_ret == ERR_NOERR) 
;;;453        {            
;;;454            if ((pollDeductInfo.pollStat) || (pollDeductInfo.f_err == 0x20) || (pollDeductInfo.f_err == 0x03))
000ca0  e5dd0016          LDRB     r0,[sp,#0x16]
000ca4  e3500000          CMP      r0,#0
000ca8  1a000005          BNE      |L1.3268|
000cac  e5dd0015          LDRB     r0,[sp,#0x15]
000cb0  e3500020          CMP      r0,#0x20
000cb4  0a000002          BEQ      |L1.3268|
000cb8  e5dd0015          LDRB     r0,[sp,#0x15]
000cbc  e3500003          CMP      r0,#3
000cc0  1a00000d          BNE      |L1.3324|
                  |L1.3268|
;;;455            {
;;;456               // terninalPrintf("Deduction fail (pollStat = %d, f_err - 0x%02x)!\n", pollDeductInfo.pollStat, pollDeductInfo.f_err);
;;;457                if(pollDeductInfo.f_err == 0x20)
000cc4  e5dd0015          LDRB     r0,[sp,#0x15]
000cc8  e3500020          CMP      r0,#0x20
000ccc  0a000032          BEQ      |L1.3484|
;;;458                {
;;;459                }
;;;460                else
;;;461                {
;;;462                    if(ptsreaderDepositResultCallback != NULL)
000cd0  e51f0188          LDR      r0,|L1.2896|
000cd4  e5900000          LDR      r0,[r0,#0]  ; ptsreaderDepositResultCallback
000cd8  e3500000          CMP      r0,#0
000cdc  0a00002e          BEQ      |L1.3484|
;;;463                    {
;;;464                        ptsreaderDepositResultCallback(FALSE, 0, pollDeductInfo.f_err);
000ce0  e5dd2015          LDRB     r2,[sp,#0x15]
000ce4  e3a01000          MOV      r1,#0
000ce8  e1a00001          MOV      r0,r1
000cec  e51f31a4          LDR      r3,|L1.2896|
000cf0  e5933000          LDR      r3,[r3,#0]  ; ptsreaderDepositResultCallback
000cf4  e12fff33          BLX      r3
000cf8  ea000027          B        |L1.3484|
                  |L1.3324|
;;;465                    }
;;;466                }
;;;467            }
;;;468            else 
;;;469            {
;;;470                terninalPrintf("Poll success but deduct fail (pollStat = %d, f_err - 0x%02x)!\n", pollDeductInfo.pollStat, pollDeductInfo.f_err);
000cfc  e5dd2015          LDRB     r2,[sp,#0x15]
000d00  e5dd1016          LDRB     r1,[sp,#0x16]
000d04  e28f0f73          ADR      r0,|L1.3800|
000d08  ebfffffe          BL       terninalPrintf
;;;471                strncpy(temp, (CHAR *)pollDeductInfo.CardNo, sizeof(pollDeductInfo.CardNo));
000d0c  e3a0200a          MOV      r2,#0xa
000d10  e28d1017          ADD      r1,sp,#0x17
000d14  e28d0f5b          ADD      r0,sp,#0x16c
000d18  ebfffffe          BL       strncpy
;;;472                //by sam
;;;473                //temp[sizeof(temp)]='\0';
;;;474                temp[sizeof(pollDeductInfo.CardNo)]='\0';
000d1c  e3a00000          MOV      r0,#0
000d20  e5cd0176          STRB     r0,[sp,#0x176]
;;;475                    
;;;476                terninalPrintf("Card ID = %s\n",temp);
000d24  e28d1f5b          ADD      r1,sp,#0x16c
000d28  e24f0e17          ADR      r0,|L1.3008|
000d2c  ebfffffe          BL       terninalPrintf
;;;477                sysprintf("Language = %d\n", pollDeductInfo.language);
000d30  e5dd1021          LDRB     r1,[sp,#0x21]
000d34  e24f0f5b          ADR      r0,|L1.3024|
000d38  ebfffffe          BL       sysprintf
;;;478                terninalPrintf("Remaining Value before = %d\n",End4(pollDeductInfo.beforeRV));
000d3c  e28d0022          ADD      r0,sp,#0x22
000d40  ebfffffe          BL       __aeabi_uread4
000d44  e1a0a000          MOV      r10,r0
000d48  ebfffffe          BL       End4
000d4c  e1a09000          MOV      r9,r0
000d50  e1a01009          MOV      r1,r9
000d54  e28f0f6f          ADR      r0,|L1.3864|
000d58  ebfffffe          BL       terninalPrintf
;;;479                
;;;480                if(ptsreaderDepositResultCallback != NULL)
000d5c  e51f0214          LDR      r0,|L1.2896|
000d60  e5900000          LDR      r0,[r0,#0]  ; ptsreaderDepositResultCallback
000d64  e3500000          CMP      r0,#0
000d68  0a00000b          BEQ      |L1.3484|
;;;481                {
;;;482                    ptsreaderDepositResultCallback(FALSE, End4(pollDeductInfo.beforeRV), pollDeductInfo.f_err);
000d6c  e28d0022          ADD      r0,sp,#0x22
000d70  ebfffffe          BL       __aeabi_uread4
000d74  e1a0a000          MOV      r10,r0
000d78  ebfffffe          BL       End4
000d7c  e1a09800          LSL      r9,r0,#16
000d80  e1a09829          LSR      r9,r9,#16
000d84  e5dd2015          LDRB     r2,[sp,#0x15]
000d88  e1a01009          MOV      r1,r9
000d8c  e3a00000          MOV      r0,#0
000d90  e51f3248          LDR      r3,|L1.2896|
000d94  e5933000          LDR      r3,[r3,#0]  ; ptsreaderDepositResultCallback
000d98  e12fff33          BLX      r3
                  |L1.3484|
;;;483                }
;;;484            }       
;;;485        } //if (s32_ret == ERR_NOERR) 
;;;486        return retval;
000d9c  e59d0188          LDR      r0,[sp,#0x188]
000da0  e28ddf63          ADD      sp,sp,#0x18c
;;;487    }
000da4  e8bd8ff0          POP      {r4-r11,pc}
;;;488    BOOL OctopusReaderSignOnProcess(void)
                          ENDP

                  OctopusReaderSignOnProcess PROC
000da8  e3a00000          MOV      r0,#0
;;;489    {   
;;;490        return FALSE;
;;;491    }
000dac  e12fff1e          BX       lr
;;;492    
                          ENDP

                  OctopusReaderGetBootedStatus PROC
;;;493    BOOL OctopusReaderGetBootedStatus(void)
000db0  e3a00000          MOV      r0,#0
;;;494    {
;;;495        return FALSE;
;;;496    }
000db4  e12fff1e          BX       lr
;;;497    
                          ENDP

                  OctopusReaderSaveFile PROC
;;;498    void OctopusReaderSaveFile(RTC_TIME_DATA_T pt, uint16_t paraValue)
000db8  e59dc020          LDR      r12,[sp,#0x20]
;;;499    {      
;;;500    	//terninalPrintf("OctopusReaderSaveFile octopusReceiptNumber = [0x%02x, 0x%02x]\r\n",GetMeterStorageData()->octopusReceiptNumber[0], GetMeterStorageData()->octopusReceiptNumber[1]);
;;;501        //MeterStorageFlush(FALSE);
;;;502    }
000dbc  e12fff1e          BX       lr
;;;503    
                          ENDP

                  OctopusReaderSaveFilePure PROC
;;;504    void OctopusReaderSaveFilePure(void)
000dc0  e12fff1e          BX       lr
;;;505    {       
;;;506    	
;;;507    }
;;;508    
                          ENDP

                  OctopusReaderWrite PROC
;;;509    //============
;;;510    INT32 OctopusReaderWrite(PUINT8 pucBuf, UINT32 uLen)
000dc4  e92d4070          PUSH     {r4-r6,lr}
;;;511    {
000dc8  e1a04000          MOV      r4,r0
000dcc  e1a05001          MOV      r5,r1
;;;512        if(pUartInterface != NULL)
000dd0  e51f0764          LDR      r0,|L1.1652|
000dd4  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000dd8  e3500000          CMP      r0,#0
000ddc  0a000006          BEQ      |L1.3580|
;;;513        {
;;;514            return  pUartInterface->writeFunc(pucBuf, uLen);
000de0  e51f0774          LDR      r0,|L1.1652|
000de4  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000de8  e1a01005          MOV      r1,r5
000dec  e5902004          LDR      r2,[r0,#4]
000df0  e1a00004          MOV      r0,r4
000df4  e12fff32          BLX      r2
                  |L1.3576|
;;;515        }
;;;516        return 0;
;;;517    }
000df8  e8bd8070          POP      {r4-r6,pc}
                  |L1.3580|
000dfc  e3a00000          MOV      r0,#0                 ;516
000e00  eafffffc          B        |L1.3576|
;;;518    INT32 OctopusReaderRead(PUINT8 pucBuf, UINT32 uLen)
                          ENDP

                  OctopusReaderRead PROC
000e04  e92d4070          PUSH     {r4-r6,lr}
;;;519    {
000e08  e1a04000          MOV      r4,r0
000e0c  e1a05001          MOV      r5,r1
;;;520        if(pUartInterface != NULL)
000e10  e51f07a4          LDR      r0,|L1.1652|
000e14  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000e18  e3500000          CMP      r0,#0
000e1c  0a000006          BEQ      |L1.3644|
;;;521        {
;;;522            return  pUartInterface->readFunc(pucBuf, uLen);
000e20  e51f07b4          LDR      r0,|L1.1652|
000e24  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000e28  e1a01005          MOV      r1,r5
000e2c  e5902008          LDR      r2,[r0,#8]
000e30  e1a00004          MOV      r0,r4
000e34  e12fff32          BLX      r2
                  |L1.3640|
;;;523        }
;;;524        return 0;
;;;525    }
000e38  e8bd8070          POP      {r4-r6,pc}
                  |L1.3644|
000e3c  e3a00000          MOV      r0,#0                 ;524
000e40  eafffffc          B        |L1.3640|
;;;526    
                          ENDP

                  OctopusReaderFlushBuffer PROC
;;;527    void OctopusReaderFlushBuffer(void)
000e44  e92d4010          PUSH     {r4,lr}
;;;528    {
;;;529        //sysprintf(" --> OctopusReaderFlushBuffer\n");
;;;530        //if (pUartInterface->ioctlFunc(UART_IOC_FLUSH_TX_BUFFER, 0, 0) != 0) {
;;;531       //     sysprintf("Set TX Flush fail!\n");
;;;532        //    return;
;;;533        //}
;;;534        if (pUartInterface->ioctlFunc(UART_IOC_FLUSH_RX_BUFFER, 0, 0) != 0) {
000e48  e51f07dc          LDR      r0,|L1.1652|
000e4c  e5900000          LDR      r0,[r0,#0]  ; pUartInterface
000e50  e3a02000          MOV      r2,#0
000e54  e1a01002          MOV      r1,r2
000e58  e5903018          LDR      r3,[r0,#0x18]
000e5c  e3a00019          MOV      r0,#0x19
000e60  e12fff33          BLX      r3
000e64  e3500000          CMP      r0,#0
000e68  0a000002          BEQ      |L1.3704|
;;;535            sysprintf("Set RX Flush fail!\n");
000e6c  e28f00c4          ADR      r0,|L1.3896|
000e70  ebfffffe          BL       sysprintf
                  |L1.3700|
;;;536            return;
;;;537        }
;;;538    }
000e74  e8bd8010          POP      {r4,pc}
                  |L1.3704|
000e78  e1a00000          MOV      r0,r0
000e7c  eafffffc          B        |L1.3700|
;;;539    
                          ENDP

                  OctopusReaderGetVersion PROC
;;;540    
;;;541    void OctopusReaderGetVersion(char* ReaderVerBuf)
000e80  e1a01000          MOV      r1,r0
;;;542    {      
;;;543        for(int i = 0; i<64; i++)
000e84  e3a00000          MOV      r0,#0
000e88  ea000003          B        |L1.3740|
                  |L1.3724|
;;;544        {     
;;;545            ReaderVerBuf[i] = GetVerStrBuf[i];
000e8c  e51f2c48          LDR      r2,|L1.588|
000e90  e7d22000          LDRB     r2,[r2,r0]
000e94  e7c12000          STRB     r2,[r1,r0]
000e98  e2800001          ADD      r0,r0,#1              ;543
                  |L1.3740|
000e9c  e3500040          CMP      r0,#0x40              ;543
000ea0  bafffff9          BLT      |L1.3724|
;;;546            
;;;547        }
;;;548     
;;;549    }
000ea4  e12fff1e          BX       lr
;;;550    
                          ENDP

                  ChangeOctopusKey PROC
;;;551    void ChangeOctopusKey(BOOL OctopusKey)
000ea8  e92d4010          PUSH     {r4,lr}
;;;552    {
000eac  e1a04000          MOV      r4,r0
;;;553        if(OctopusKey == OCTOPUS_USE_PRODUCTION_KEY)
000eb0  e3540001          CMP      r4,#1
000eb4  1a000002          BNE      |L1.3780|
;;;554            ChangeKey(OCTOPUS_USE_PRODUCTION_KEY);
000eb8  e3a00001          MOV      r0,#1
000ebc  ebfffffe          BL       ChangeKey
000ec0  ea000003          B        |L1.3796|
                  |L1.3780|
;;;555        else if(OctopusKey == OCTOPUS_USE_TEST_KEY)
000ec4  e3540000          CMP      r4,#0
000ec8  1a000001          BNE      |L1.3796|
;;;556            ChangeKey(OCTOPUS_USE_TEST_KEY);
000ecc  e3a00000          MOV      r0,#0
000ed0  ebfffffe          BL       ChangeKey
                  |L1.3796|
;;;557    }
000ed4  e8bd8010          POP      {r4,pc}
;;;558    
                          ENDP

                  |L1.3800|
000ed8  506f6c6c          DCB      "Poll success but deduct fail (pollStat = %d, f_err - 0x"
000edc  20737563
000ee0  63657373
000ee4  20627574
000ee8  20646564
000eec  75637420
000ef0  6661696c
000ef4  2028706f
000ef8  6c6c5374
000efc  6174203d
000f00  2025642c
000f04  20665f65
000f08  7272202d
000f0c  203078  
000f0f  25303278          DCB      "%02x)!\n",0
000f13  29210a00
000f17  00                DCB      0
                  |L1.3864|
000f18  52656d61          DCB      "Remaining Value before = %d\n",0
000f1c  696e696e
000f20  67205661
000f24  6c756520
000f28  6265666f
000f2c  7265203d
000f30  2025640a
000f34  00      
000f35  00                DCB      0
000f36  00                DCB      0
000f37  00                DCB      0
                  |L1.3896|
000f38  53657420          DCB      "Set RX Flush fail!\n",0
000f3c  52582046
000f40  6c757368
000f44  20666169
000f48  6c210a00

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  GetVerStrBuf
                          %        64

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  4f63746f          DCB      0x4f,0x63,0x74,0x6f
000004  70757352          DCB      0x70,0x75,0x73,0x52
000008  65616465          DCB      0x65,0x61,0x64,0x65
00000c  72536574          DCB      0x72,0x53,0x65,0x74
000010  41495661          DCB      0x41,0x49,0x56,0x61
000014  6c756520          DCB      0x6c,0x75,0x65,0x20
000018  4f4b2121          DCB      0x4f,0x4b,0x21,0x21
00001c  206f6374          DCB      0x20,0x6f,0x63,0x74
000020  6f707573          DCB      0x6f,0x70,0x75,0x73
000024  52656365          DCB      0x52,0x65,0x63,0x65
000028  6970744e          DCB      0x69,0x70,0x74,0x4e
00002c  756d6265          DCB      0x75,0x6d,0x62,0x65
000030  72203d20          DCB      0x72,0x20,0x3d,0x20
000034  5b307825          DCB      0x5b,0x30,0x78,0x25
000038  3032782c          DCB      0x30,0x32,0x78,0x2c
00003c  20307825          DCB      0x20,0x30,0x78,0x25
000040  3032785d          DCB      0x30,0x32,0x78,0x5d
000044  2021210d          DCB      0x20,0x21,0x21,0x0d
000048  0a00              DCB      0x0a,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  pUartInterface
                          DCD      0x00000000
                  mReaderInterface
                          DCD      OctopusReaderInit
                          DCD      OctopusReaderSetPower
                          DCD      OctopusReaderBreakCheckReader
                          DCD      OctopusReaderCheckReader
                          DCD      OctopusReaderProcess
                          DCD      0x00000000
                          DCD      OctopusReaderGetBootedStatus
                          DCD      OctopusReaderSignOnProcess
                          DCD      OctopusReaderSaveFile
                          DCD      OctopusReaderSaveFilePure
                  powerUpTick
                          DCD      0x00000000
                  ptsreaderDepositResultCallback
                          DCD      0x00000000
                  needInitReaderFlag
000034  01                DCB      0x01
                  ||AI||
000035  000001            DCB      0x00,0x00,0x01
000038  00a30000          DCB      0x00,0xa3,0x00,0x00
                  GetVerFlag
00003c  00                DCB      0x00
                  HangUpStatus
00003d  000000            DCB      0x00,0x00,0x00
                  verStrLen
                          DCD      0x00000000
                  currentTargetDeduct
000044  0000              DCB      0x00,0x00
