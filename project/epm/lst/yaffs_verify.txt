; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\yaffs_verify.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\yaffs_verify.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\yaffs_verify.crf ..\..\common\src\BSP\ThirdParty\yaffs2\yaffs_verify.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  yaffs_skip_verification PROC
;;;19     
;;;20     int yaffs_skip_verification(struct yaffs_dev *dev)
000000  e1a01000          MOV      r1,r0
;;;21     {
;;;22     	dev = dev;
000004  e1a00000          MOV      r0,r0
;;;23     	return !(yaffs_trace_mask &
000008  e59f0284          LDR      r0,|L1.660|
00000c  e5900000          LDR      r0,[r0,#0]  ; yaffs_trace_mask
000010  e3100805          TST      r0,#0x50000
000014  1a000001          BNE      |L1.32|
000018  e3a00001          MOV      r0,#1
                  |L1.28|
;;;24     		 (YAFFS_TRACE_VERIFY | YAFFS_TRACE_VERIFY_FULL));
;;;25     }
00001c  e12fff1e          BX       lr
                  |L1.32|
000020  e3a00000          MOV      r0,#0                 ;23
000024  eafffffc          B        |L1.28|
;;;26     
                          ENDP

                  yaffs_skip_full_verification PROC
;;;27     static int yaffs_skip_full_verification(struct yaffs_dev *dev)
000028  e1a01000          MOV      r1,r0
;;;28     {
;;;29     	dev = dev;
00002c  e1a00000          MOV      r0,r0
;;;30     	return !(yaffs_trace_mask & (YAFFS_TRACE_VERIFY_FULL));
000030  e59f025c          LDR      r0,|L1.660|
000034  e5900000          LDR      r0,[r0,#0]  ; yaffs_trace_mask
000038  e3a02001          MOV      r2,#1
00003c  e1c20920          BIC      r0,r2,r0,LSR #18
;;;31     }
000040  e12fff1e          BX       lr
;;;32     
                          ENDP

                  yaffs_skip_nand_verification PROC
;;;33     static int yaffs_skip_nand_verification(struct yaffs_dev *dev)
000044  e1a01000          MOV      r1,r0
;;;34     {
;;;35     	dev = dev;
000048  e1a00000          MOV      r0,r0
;;;36     	return !(yaffs_trace_mask & (YAFFS_TRACE_VERIFY_NAND));
00004c  e59f0240          LDR      r0,|L1.660|
000050  e5900000          LDR      r0,[r0,#0]  ; yaffs_trace_mask
000054  e3a02001          MOV      r2,#1
000058  e1c208a0          BIC      r0,r2,r0,LSR #17
;;;37     }
00005c  e12fff1e          BX       lr
;;;38     
                          ENDP

                  yaffs_verify_blk PROC
;;;51     
;;;52     void yaffs_verify_blk(struct yaffs_dev *dev, struct yaffs_block_info *bi, int n)
000060  e92d41f0          PUSH     {r4-r8,lr}
;;;53     {
000064  e1a05000          MOV      r5,r0
000068  e1a04001          MOV      r4,r1
00006c  e1a08002          MOV      r8,r2
;;;54     	int actually_used;
;;;55     	int in_use;
;;;56     
;;;57     	if (yaffs_skip_verification(dev))
000070  e1a00005          MOV      r0,r5
000074  ebfffffe          BL       yaffs_skip_verification
000078  e3500000          CMP      r0,#0
00007c  0a000000          BEQ      |L1.132|
                  |L1.128|
;;;58     		return;
;;;59     
;;;60     	/* Report illegal runtime states */
;;;61     	if (bi->block_state >= YAFFS_NUMBER_OF_BLOCK_STATES)
;;;62     		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;63     			"Block %d has undefined state %d",
;;;64     			n, bi->block_state);
;;;65     
;;;66     	switch (bi->block_state) {
;;;67     	case YAFFS_BLOCK_STATE_UNKNOWN:
;;;68     	case YAFFS_BLOCK_STATE_SCANNING:
;;;69     	case YAFFS_BLOCK_STATE_NEEDS_SCAN:
;;;70     		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;71     			"Block %d has bad run-state %s",
;;;72     			n, block_state_name[bi->block_state]);
;;;73     	}
;;;74     
;;;75     	/* Check pages in use and soft deletions are legal */
;;;76     
;;;77     	actually_used = bi->pages_in_use - bi->soft_del_pages;
;;;78     
;;;79     	if (bi->pages_in_use < 0 ||
;;;80     	    bi->pages_in_use > dev->param.chunks_per_block ||
;;;81     	    bi->soft_del_pages < 0 ||
;;;82     	    bi->soft_del_pages > dev->param.chunks_per_block ||
;;;83     	    actually_used < 0 || actually_used > dev->param.chunks_per_block)
;;;84     		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;85     			"Block %d has illegal values pages_in_used %d soft_del_pages %d",
;;;86     			n, bi->pages_in_use, bi->soft_del_pages);
;;;87     
;;;88     	/* Check chunk bitmap legal */
;;;89     	in_use = yaffs_count_chunk_bits(dev, n);
;;;90     	if (in_use != bi->pages_in_use)
;;;91     		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;92     			"Block %d has inconsistent values pages_in_use %d counted chunk bits %d",
;;;93     			n, bi->pages_in_use, in_use);
;;;94     }
000080  e8bd81f0          POP      {r4-r8,pc}
                  |L1.132|
000084  e5940000          LDR      r0,[r4,#0]            ;61
000088  e1a00400          LSL      r0,r0,#8              ;61
00008c  e3a0100a          MOV      r1,#0xa               ;61
000090  e1510e20          CMP      r1,r0,LSR #28         ;61
000094  ca000009          BGT      |L1.192|
000098  e59f01f4          LDR      r0,|L1.660|
00009c  e5900000          LDR      r0,[r0,#0]            ;62  ; yaffs_trace_mask
0000a0  e3100801          TST      r0,#0x10000           ;62
0000a4  0a000005          BEQ      |L1.192|
0000a8  e5940000          LDR      r0,[r4,#0]            ;62
0000ac  e1a00400          LSL      r0,r0,#8              ;62
0000b0  e1a02e20          LSR      r2,r0,#28             ;62
0000b4  e1a01008          MOV      r1,r8                 ;62
0000b8  e28f0f76          ADR      r0,|L1.664|
0000bc  ebfffffe          BL       sysprintf
                  |L1.192|
0000c0  e5940000          LDR      r0,[r4,#0]            ;66
0000c4  e1a00400          LSL      r0,r0,#8              ;66
0000c8  e1b00e20          LSRS     r0,r0,#28             ;66
0000cc  0a000004          BEQ      |L1.228|
0000d0  e3500001          CMP      r0,#1                 ;66
0000d4  0a000004          BEQ      |L1.236|
0000d8  e3500002          CMP      r0,#2                 ;66
0000dc  1a000010          BNE      |L1.292|
0000e0  ea000002          B        |L1.240|
                  |L1.228|
0000e4  e1a00000          MOV      r0,r0                 ;67
0000e8  e1a00000          MOV      r0,r0                 ;68
                  |L1.236|
0000ec  e1a00000          MOV      r0,r0                 ;69
                  |L1.240|
0000f0  e59f019c          LDR      r0,|L1.660|
0000f4  e5900000          LDR      r0,[r0,#0]            ;70  ; yaffs_trace_mask
0000f8  e3100801          TST      r0,#0x10000           ;70
0000fc  0a000007          BEQ      |L1.288|
000100  e5940000          LDR      r0,[r4,#0]            ;70
000104  e1a00400          LSL      r0,r0,#8              ;70
000108  e1a00e20          LSR      r0,r0,#28             ;70
00010c  e59f11ac          LDR      r1,|L1.704|
000110  e7912100          LDR      r2,[r1,r0,LSL #2]     ;70
000114  e1a01008          MOV      r1,r8                 ;70
000118  e28f0f69          ADR      r0,|L1.708|
00011c  ebfffffe          BL       sysprintf
                  |L1.288|
000120  e1a00000          MOV      r0,r0                 ;66
                  |L1.292|
000124  e1a00000          MOV      r0,r0                 ;66
000128  e1d400b0          LDRH     r0,[r4,#0]            ;77
00012c  e1a00b00          LSL      r0,r0,#22             ;77
000130  e1a00b20          LSR      r0,r0,#22             ;77
000134  e5941000          LDR      r1,[r4,#0]            ;77
000138  e1a01601          LSL      r1,r1,#12             ;77
00013c  e0607b21          RSB      r7,r0,r1,LSR #22      ;77
000140  e5940000          LDR      r0,[r4,#0]            ;79
000144  e1a00600          LSL      r0,r0,#12             ;79
000148  e1b00b20          LSRS     r0,r0,#22             ;79
00014c  4a000013          BMI      |L1.416|
000150  e595000c          LDR      r0,[r5,#0xc]          ;80
000154  e5941000          LDR      r1,[r4,#0]            ;80
000158  e1a01601          LSL      r1,r1,#12             ;80
00015c  e1500b21          CMP      r0,r1,LSR #22         ;80
000160  ba00000e          BLT      |L1.416|
000164  e1d400b0          LDRH     r0,[r4,#0]            ;81
000168  e1a00b00          LSL      r0,r0,#22             ;81
00016c  e1b00b20          LSRS     r0,r0,#22             ;81
000170  4a00000a          BMI      |L1.416|
000174  e1d400b0          LDRH     r0,[r4,#0]            ;82
000178  e1a00b00          LSL      r0,r0,#22             ;82
00017c  e1a00b20          LSR      r0,r0,#22             ;82
000180  e595100c          LDR      r1,[r5,#0xc]          ;82
000184  e1500001          CMP      r0,r1                 ;82
000188  ca000004          BGT      |L1.416|
00018c  e3570000          CMP      r7,#0                 ;83
000190  ba000002          BLT      |L1.416|
000194  e595000c          LDR      r0,[r5,#0xc]          ;83
000198  e1500007          CMP      r0,r7                 ;83
00019c  aa00000c          BGE      |L1.468|
                  |L1.416|
0001a0  e59f00ec          LDR      r0,|L1.660|
0001a4  e5900000          LDR      r0,[r0,#0]            ;84  ; yaffs_trace_mask
0001a8  e3100801          TST      r0,#0x10000           ;84
0001ac  0a000008          BEQ      |L1.468|
0001b0  e1d400b0          LDRH     r0,[r4,#0]            ;84
0001b4  e1a03b00          LSL      r3,r0,#22             ;84
0001b8  e1a03b23          LSR      r3,r3,#22             ;84
0001bc  e5940000          LDR      r0,[r4,#0]            ;84
0001c0  e1a00600          LSL      r0,r0,#12             ;84
0001c4  e1a02b20          LSR      r2,r0,#22             ;84
0001c8  e1a01008          MOV      r1,r8                 ;84
0001cc  e59f0118          LDR      r0,|L1.748|
0001d0  ebfffffe          BL       sysprintf
                  |L1.468|
0001d4  e1a01008          MOV      r1,r8                 ;89
0001d8  e1a00005          MOV      r0,r5                 ;89
0001dc  ebfffffe          BL       yaffs_count_chunk_bits
0001e0  e1a06000          MOV      r6,r0                 ;89
0001e4  e5940000          LDR      r0,[r4,#0]            ;90
0001e8  e1a01600          LSL      r1,r0,#12             ;90
0001ec  e1560b21          CMP      r6,r1,LSR #22         ;90
0001f0  0a00000a          BEQ      |L1.544|
0001f4  e59f0098          LDR      r0,|L1.660|
0001f8  e5900000          LDR      r0,[r0,#0]            ;91  ; yaffs_trace_mask
0001fc  e3100801          TST      r0,#0x10000           ;91
000200  0a000006          BEQ      |L1.544|
000204  e5940000          LDR      r0,[r4,#0]            ;91
000208  e1a00600          LSL      r0,r0,#12             ;91
00020c  e1a02b20          LSR      r2,r0,#22             ;91
000210  e1a03006          MOV      r3,r6                 ;91
000214  e1a01008          MOV      r1,r8                 ;91
000218  e59f00d0          LDR      r0,|L1.752|
00021c  ebfffffe          BL       sysprintf
                  |L1.544|
000220  e1a00000          MOV      r0,r0
000224  eaffff95          B        |L1.128|
;;;95     
                          ENDP

                  yaffs_verify_collected_blk PROC
;;;96     void yaffs_verify_collected_blk(struct yaffs_dev *dev,
000228  e92d4070          PUSH     {r4-r6,lr}
;;;97     				struct yaffs_block_info *bi, int n)
;;;98     {
00022c  e1a06000          MOV      r6,r0
000230  e1a04001          MOV      r4,r1
000234  e1a05002          MOV      r5,r2
;;;99     	yaffs_verify_blk(dev, bi, n);
000238  e1a02005          MOV      r2,r5
00023c  e1a01004          MOV      r1,r4
000240  e1a00006          MOV      r0,r6
000244  ebfffffe          BL       yaffs_verify_blk
;;;100    
;;;101    	/* After collection the block should be in the erased state */
;;;102    
;;;103    	if (bi->block_state != YAFFS_BLOCK_STATE_COLLECTING &&
000248  e5940000          LDR      r0,[r4,#0]
00024c  e200060f          AND      r0,r0,#0xf00000
000250  e3500502          CMP      r0,#0x800000
000254  0a00000d          BEQ      |L1.656|
;;;104    	    bi->block_state != YAFFS_BLOCK_STATE_EMPTY) {
000258  e5940000          LDR      r0,[r4,#0]
00025c  e200060f          AND      r0,r0,#0xf00000
000260  e3500603          CMP      r0,#0x300000
000264  0a000009          BEQ      |L1.656|
;;;105    		yaffs_trace(YAFFS_TRACE_ERROR,
000268  e59f0024          LDR      r0,|L1.660|
00026c  e5900000          LDR      r0,[r0,#0]  ; yaffs_trace_mask
000270  e3100101          TST      r0,#0x40000000
000274  0a000005          BEQ      |L1.656|
000278  e5940000          LDR      r0,[r4,#0]
00027c  e1a00400          LSL      r0,r0,#8
000280  e1a02e20          LSR      r2,r0,#28
000284  e1a01005          MOV      r1,r5
000288  e28f0064          ADR      r0,|L1.756|
00028c  ebfffffe          BL       sysprintf
                  |L1.656|
;;;106    			"Block %d is in state %d after gc, should be erased",
;;;107    			n, bi->block_state);
;;;108    	}
;;;109    }
000290  e8bd8070          POP      {r4-r6,pc}
                  |L1.660|
                          DCD      yaffs_trace_mask
                  |L1.664|
000298  79616666          DCB      "yaffs: Block %d has undefined state %d\n",0
00029c  733a2042
0002a0  6c6f636b
0002a4  20256420
0002a8  68617320
0002ac  756e6465
0002b0  66696e65
0002b4  64207374
0002b8  61746520
0002bc  25640a00
                  |L1.704|
                          DCD      block_state_name
                  |L1.708|
0002c4  79616666          DCB      "yaffs: Block %d has bad run-state %s\n",0
0002c8  733a2042
0002cc  6c6f636b
0002d0  20256420
0002d4  68617320
0002d8  62616420
0002dc  72756e2d
0002e0  73746174
0002e4  65202573
0002e8  0a00    
0002ea  00                DCB      0
0002eb  00                DCB      0
                  |L1.748|
                          DCD      ||.constdata||+0x28
                  |L1.752|
                          DCD      ||.constdata||+0x70
                  |L1.756|
0002f4  79616666          DCB      "yaffs: Block %d is in state %d after gc, should be eras"
0002f8  733a2042
0002fc  6c6f636b
000300  20256420
000304  69732069
000308  6e207374
00030c  61746520
000310  25642061
000314  66746572
000318  2067632c
00031c  2073686f
000320  756c6420
000324  62652065
000328  726173  
00032b  65640a00          DCB      "ed\n",0
00032f  00                DCB      0
                          ENDP

                  yaffs_verify_blocks PROC
;;;110    
;;;111    void yaffs_verify_blocks(struct yaffs_dev *dev)
000330  e92d41f0          PUSH     {r4-r8,lr}
;;;112    {
000334  e24dd028          SUB      sp,sp,#0x28
000338  e1a04000          MOV      r4,r0
;;;113    	int i;
;;;114    	int state_count[YAFFS_NUMBER_OF_BLOCK_STATES];
;;;115    	int illegal_states = 0;
00033c  e3a08000          MOV      r8,#0
;;;116    
;;;117    	if (yaffs_skip_verification(dev))
000340  e1a00004          MOV      r0,r4
000344  ebfffffe          BL       yaffs_skip_verification
000348  e3500000          CMP      r0,#0
00034c  0a000001          BEQ      |L1.856|
                  |L1.848|
;;;118    		return;
;;;119    
;;;120    	memset(state_count, 0, sizeof(state_count));
;;;121    
;;;122    	for (i = dev->internal_start_block; i <= dev->internal_end_block; i++) {
;;;123    		struct yaffs_block_info *bi = yaffs_get_block_info(dev, i);
;;;124    		yaffs_verify_blk(dev, bi, i);
;;;125    
;;;126    		if (bi->block_state < YAFFS_NUMBER_OF_BLOCK_STATES)
;;;127    			state_count[bi->block_state]++;
;;;128    		else
;;;129    			illegal_states++;
;;;130    	}
;;;131    
;;;132    	yaffs_trace(YAFFS_TRACE_VERIFY,	"Block summary");
;;;133    
;;;134    	yaffs_trace(YAFFS_TRACE_VERIFY,
;;;135    		"%d blocks have illegal states",
;;;136    		illegal_states);
;;;137    	if (state_count[YAFFS_BLOCK_STATE_ALLOCATING] > 1)
;;;138    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;139    			"Too many allocating blocks");
;;;140    
;;;141    	for (i = 0; i < YAFFS_NUMBER_OF_BLOCK_STATES; i++)
;;;142    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;143    			"%s %d blocks",
;;;144    			block_state_name[i], state_count[i]);
;;;145    
;;;146    	if (dev->blocks_in_checkpt != state_count[YAFFS_BLOCK_STATE_CHECKPOINT])
;;;147    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;148    			"Checkpoint block count wrong dev %d count %d",
;;;149    			dev->blocks_in_checkpt,
;;;150    			state_count[YAFFS_BLOCK_STATE_CHECKPOINT]);
;;;151    
;;;152    	if (dev->n_erased_blocks != state_count[YAFFS_BLOCK_STATE_EMPTY])
;;;153    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;154    			"Erased block count wrong dev %d count %d",
;;;155    			dev->n_erased_blocks,
;;;156    			state_count[YAFFS_BLOCK_STATE_EMPTY]);
;;;157    
;;;158    	if (state_count[YAFFS_BLOCK_STATE_COLLECTING] > 1)
;;;159    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;160    			"Too many collecting blocks %d (max is 1)",
;;;161    			state_count[YAFFS_BLOCK_STATE_COLLECTING]);
;;;162    }
000350  e28dd028          ADD      sp,sp,#0x28
000354  e8bd81f0          POP      {r4-r8,pc}
                  |L1.856|
000358  e3a01028          MOV      r1,#0x28              ;120
00035c  e1a0000d          MOV      r0,sp                 ;120
000360  ebfffffe          BL       __aeabi_memclr4
000364  e59450d0          LDR      r5,[r4,#0xd0]         ;122
000368  ea00002d          B        |L1.1060|
                  |L1.876|
00036c  e1a07005          MOV      r7,r5                 ;123
000370  e59400d0          LDR      r0,[r4,#0xd0]         ;123
000374  e1500007          CMP      r0,r7                 ;123
000378  ca000002          BGT      |L1.904|
00037c  e59400d4          LDR      r0,[r4,#0xd4]         ;123
000380  e1500007          CMP      r0,r7                 ;123
000384  aa00000c          BGE      |L1.956|
                  |L1.904|
000388  e51f00fc          LDR      r0,|L1.660|
00038c  e5900000          LDR      r0,[r0,#0]            ;123  ; yaffs_trace_mask
000390  e3100101          TST      r0,#0x40000000        ;123
000394  0a000002          BEQ      |L1.932|
000398  e1a01007          MOV      r1,r7                 ;123
00039c  e28f0f6b          ADR      r0,|L1.1360|
0003a0  ebfffffe          BL       sysprintf
                  |L1.932|
0003a4  e1a00000          MOV      r0,r0                 ;123
0003a8  e3a0201f          MOV      r2,#0x1f              ;123
0003ac  e28f1f76          ADR      r1,|L1.1420|
0003b0  e28f0e21          ADR      r0,|L1.1480|
0003b4  ebfffffe          BL       sysprintf
0003b8  e1a00000          MOV      r0,r0                 ;123
                  |L1.956|
0003bc  e1a00000          MOV      r0,r0                 ;123
0003c0  e59410d0          LDR      r1,[r4,#0xd0]         ;123
0003c4  e0471001          SUB      r1,r7,r1              ;123
0003c8  e5940118          LDR      r0,[r4,#0x118]        ;123
0003cc  e0806181          ADD      r6,r0,r1,LSL #3       ;123
0003d0  e1a02005          MOV      r2,r5                 ;124
0003d4  e1a01006          MOV      r1,r6                 ;124
0003d8  e1a00004          MOV      r0,r4                 ;124
0003dc  ebfffffe          BL       yaffs_verify_blk
0003e0  e5960000          LDR      r0,[r6,#0]            ;126
0003e4  e1a00400          LSL      r0,r0,#8              ;126
0003e8  e3a0100a          MOV      r1,#0xa               ;126
0003ec  e1510e20          CMP      r1,r0,LSR #28         ;126
0003f0  da000009          BLE      |L1.1052|
0003f4  e5960000          LDR      r0,[r6,#0]            ;127
0003f8  e1a00400          LSL      r0,r0,#8              ;127
0003fc  e1a00e20          LSR      r0,r0,#28             ;127
000400  e79d0100          LDR      r0,[sp,r0,LSL #2]     ;127
000404  e2800001          ADD      r0,r0,#1              ;127
000408  e5961000          LDR      r1,[r6,#0]            ;127
00040c  e1a01401          LSL      r1,r1,#8              ;127
000410  e1a01e21          LSR      r1,r1,#28             ;127
000414  e78d0101          STR      r0,[sp,r1,LSL #2]     ;127
000418  ea000000          B        |L1.1056|
                  |L1.1052|
00041c  e2888001          ADD      r8,r8,#1              ;129
                  |L1.1056|
000420  e2855001          ADD      r5,r5,#1              ;122
                  |L1.1060|
000424  e59400d4          LDR      r0,[r4,#0xd4]         ;122
000428  e1500005          CMP      r0,r5                 ;122
00042c  aaffffce          BGE      |L1.876|
000430  e51f01a4          LDR      r0,|L1.660|
000434  e5900000          LDR      r0,[r0,#0]            ;132  ; yaffs_trace_mask
000438  e3100801          TST      r0,#0x10000           ;132
00043c  0a000001          BEQ      |L1.1096|
000440  e28f0f66          ADR      r0,|L1.1504|
000444  ebfffffe          BL       sysprintf
                  |L1.1096|
000448  e51f01bc          LDR      r0,|L1.660|
00044c  e5900000          LDR      r0,[r0,#0]            ;134  ; yaffs_trace_mask
000450  e3100801          TST      r0,#0x10000           ;134
000454  0a000002          BEQ      |L1.1124|
000458  e1a01008          MOV      r1,r8                 ;134
00045c  e28f0f65          ADR      r0,|L1.1528|
000460  ebfffffe          BL       sysprintf
                  |L1.1124|
000464  e59d0010          LDR      r0,[sp,#0x10]         ;137
000468  e3500001          CMP      r0,#1                 ;137
00046c  da000005          BLE      |L1.1160|
000470  e51f01e4          LDR      r0,|L1.660|
000474  e5900000          LDR      r0,[r0,#0]            ;138  ; yaffs_trace_mask
000478  e3100801          TST      r0,#0x10000           ;138
00047c  0a000001          BEQ      |L1.1160|
000480  e28f0f66          ADR      r0,|L1.1568|
000484  ebfffffe          BL       sysprintf
                  |L1.1160|
000488  e3a05000          MOV      r5,#0                 ;141
00048c  ea000009          B        |L1.1208|
                  |L1.1168|
000490  e51f0204          LDR      r0,|L1.660|
000494  e5900000          LDR      r0,[r0,#0]            ;142  ; yaffs_trace_mask
000498  e3100801          TST      r0,#0x10000           ;142
00049c  0a000004          BEQ      |L1.1204|
0004a0  e79d2105          LDR      r2,[sp,r5,LSL #2]     ;142
0004a4  e51f01ec          LDR      r0,|L1.704|
0004a8  e7901105          LDR      r1,[r0,r5,LSL #2]     ;142
0004ac  e28f0e19          ADR      r0,|L1.1604|
0004b0  ebfffffe          BL       sysprintf
                  |L1.1204|
0004b4  e2855001          ADD      r5,r5,#1              ;141
                  |L1.1208|
0004b8  e355000a          CMP      r5,#0xa               ;141
0004bc  bafffff3          BLT      |L1.1168|
0004c0  e59400f4          LDR      r0,[r4,#0xf4]         ;146
0004c4  e59d101c          LDR      r1,[sp,#0x1c]         ;146
0004c8  e1500001          CMP      r0,r1                 ;146
0004cc  0a000007          BEQ      |L1.1264|
0004d0  e51f0244          LDR      r0,|L1.660|
0004d4  e5900000          LDR      r0,[r0,#0]            ;147  ; yaffs_trace_mask
0004d8  e3100801          TST      r0,#0x10000           ;147
0004dc  0a000003          BEQ      |L1.1264|
0004e0  e59d201c          LDR      r2,[sp,#0x1c]         ;147
0004e4  e28f0f5c          ADD      r0,pc,#0x5c, 30 ; #0x170;147
0004e8  e59410f4          LDR      r1,[r4,#0xf4]         ;147
0004ec  ebfffffe          BL       sysprintf
                  |L1.1264|
0004f0  e5940128          LDR      r0,[r4,#0x128]        ;152
0004f4  e59d100c          LDR      r1,[sp,#0xc]          ;152
0004f8  e1500001          CMP      r0,r1                 ;152
0004fc  0a000007          BEQ      |L1.1312|
000500  e51f0274          LDR      r0,|L1.660|
000504  e5900000          LDR      r0,[r0,#0]            ;153  ; yaffs_trace_mask
000508  e3100801          TST      r0,#0x10000           ;153
00050c  0a000003          BEQ      |L1.1312|
000510  e59d200c          LDR      r2,[sp,#0xc]          ;153
000514  e28f0f5e          ADR      r0,|L1.1684|
000518  e5941128          LDR      r1,[r4,#0x128]        ;153
00051c  ebfffffe          BL       sysprintf
                  |L1.1312|
000520  e59d0020          LDR      r0,[sp,#0x20]         ;158
000524  e3500001          CMP      r0,#1                 ;158
000528  da000006          BLE      |L1.1352|
00052c  e51f02a0          LDR      r0,|L1.660|
000530  e5900000          LDR      r0,[r0,#0]            ;159  ; yaffs_trace_mask
000534  e3100801          TST      r0,#0x10000           ;159
000538  0a000002          BEQ      |L1.1352|
00053c  e28f0f61          ADR      r0,|L1.1736|
000540  e59d1020          LDR      r1,[sp,#0x20]         ;159
000544  ebfffffe          BL       sysprintf
                  |L1.1352|
000548  e1a00000          MOV      r0,r0
00054c  eaffff7f          B        |L1.848|
                  |L1.1360|
000550  79616666          DCB      "yaffs: **>> yaffs: get_block_info block %d is not valid"
000554  733a202a
000558  2a3e3e20
00055c  79616666
000560  733a2067
000564  65745f62
000568  6c6f636b
00056c  5f696e66
000570  6f20626c
000574  6f636b20
000578  25642069
00057c  73206e6f
000580  74207661
000584  6c6964  
000587  0a00              DCB      "\n",0
000589  00                DCB      0
00058a  00                DCB      0
00058b  00                DCB      0
                  |L1.1420|
00058c  2e2e5c2e          DCB      "..\\..\\common\\src\\BSP\\ThirdParty\\yaffs2\\yaffs_get"
000590  2e5c636f
000594  6d6d6f6e
000598  5c737263
00059c  5c425350
0005a0  5c546869
0005a4  72645061
0005a8  7274795c
0005ac  79616666
0005b0  73325c79
0005b4  61666673
0005b8  5f676574
0005bc  626c6f63          DCB      "blockinfo.h",0
0005c0  6b696e66
0005c4  6f2e6800
                  |L1.1480|
0005c8  552d426f          DCB      "U-Boot BUG at %s:%d!\n",0
0005cc  6f742042
0005d0  55472061
0005d4  74202573
0005d8  3a256421
0005dc  0a00    
0005de  00                DCB      0
0005df  00                DCB      0
                  |L1.1504|
0005e0  79616666          DCB      "yaffs: Block summary\n",0
0005e4  733a2042
0005e8  6c6f636b
0005ec  2073756d
0005f0  6d617279
0005f4  0a00    
0005f6  00                DCB      0
0005f7  00                DCB      0
                  |L1.1528|
0005f8  79616666          DCB      "yaffs: %d blocks have illegal states\n",0
0005fc  733a2025
000600  6420626c
000604  6f636b73
000608  20686176
00060c  6520696c
000610  6c656761
000614  6c207374
000618  61746573
00061c  0a00    
00061e  00                DCB      0
00061f  00                DCB      0
                  |L1.1568|
000620  79616666          DCB      "yaffs: Too many allocating blocks\n",0
000624  733a2054
000628  6f6f206d
00062c  616e7920
000630  616c6c6f
000634  63617469
000638  6e672062
00063c  6c6f636b
000640  730a00  
000643  00                DCB      0
                  |L1.1604|
000644  79616666          DCB      "yaffs: %s %d blocks\n",0
000648  733a2025
00064c  73202564
000650  20626c6f
000654  636b730a
000658  00      
000659  00                DCB      0
00065a  00                DCB      0
00065b  00                DCB      0
00065c  79616666          DCB      "yaffs: Checkpoint block count wrong dev %d count %d\n",0
000660  733a2043
000664  6865636b
000668  706f696e
00066c  7420626c
000670  6f636b20
000674  636f756e
000678  74207772
00067c  6f6e6720
000680  64657620
000684  25642063
000688  6f756e74
00068c  2025640a
000690  00      
000691  00                DCB      0
000692  00                DCB      0
000693  00                DCB      0
                  |L1.1684|
000694  79616666          DCB      "yaffs: Erased block count wrong dev %d count %d\n",0
000698  733a2045
00069c  72617365
0006a0  6420626c
0006a4  6f636b20
0006a8  636f756e
0006ac  74207772
0006b0  6f6e6720
0006b4  64657620
0006b8  25642063
0006bc  6f756e74
0006c0  2025640a
0006c4  00      
0006c5  00                DCB      0
0006c6  00                DCB      0
0006c7  00                DCB      0
                  |L1.1736|
0006c8  79616666          DCB      "yaffs: Too many collecting blocks %d (max is 1)\n",0
0006cc  733a2054
0006d0  6f6f206d
0006d4  616e7920
0006d8  636f6c6c
0006dc  65637469
0006e0  6e672062
0006e4  6c6f636b
0006e8  73202564
0006ec  20286d61
0006f0  78206973
0006f4  2031290a
0006f8  00      
0006f9  00                DCB      0
0006fa  00                DCB      0
0006fb  00                DCB      0
                          ENDP

                  yaffs_verify_oh PROC
;;;167     */
;;;168    void yaffs_verify_oh(struct yaffs_obj *obj, struct yaffs_obj_hdr *oh,
0006fc  e92d41f0          PUSH     {r4-r8,lr}
;;;169    		     struct yaffs_ext_tags *tags, int parent_check)
;;;170    {
000700  e1a04000          MOV      r4,r0
000704  e1a05001          MOV      r5,r1
000708  e1a06002          MOV      r6,r2
00070c  e1a07003          MOV      r7,r3
;;;171    	if (obj && yaffs_skip_verification(obj->my_dev))
000710  e3540000          CMP      r4,#0
000714  0a000004          BEQ      |L1.1836|
000718  e5940008          LDR      r0,[r4,#8]
00071c  ebfffffe          BL       yaffs_skip_verification
000720  e3500000          CMP      r0,#0
000724  0a000000          BEQ      |L1.1836|
                  |L1.1832|
;;;172    		return;
;;;173    
;;;174    	if (!(tags && obj && oh)) {
;;;175    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;176    			"Verifying object header tags %p obj %p oh %p",
;;;177    			tags, obj, oh);
;;;178    		return;
;;;179    	}
;;;180    
;;;181    	if (oh->type <= YAFFS_OBJECT_TYPE_UNKNOWN ||
;;;182    	    oh->type > YAFFS_OBJECT_TYPE_MAX)
;;;183    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;184    			"Obj %d header type is illegal value 0x%x",
;;;185    			tags->obj_id, oh->type);
;;;186    
;;;187    	if (tags->obj_id != obj->obj_id)
;;;188    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;189    			"Obj %d header mismatch obj_id %d",
;;;190    			tags->obj_id, obj->obj_id);
;;;191    
;;;192    	/*
;;;193    	 * Check that the object's parent ids match if parent_check requested.
;;;194    	 *
;;;195    	 * Tests do not apply to the root object.
;;;196    	 */
;;;197    
;;;198    	if (parent_check && tags->obj_id > 1 && !obj->parent)
;;;199    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;200    			"Obj %d header mismatch parent_id %d obj->parent is NULL",
;;;201    			tags->obj_id, oh->parent_obj_id);
;;;202    
;;;203    	if (parent_check && obj->parent &&
;;;204    	    oh->parent_obj_id != obj->parent->obj_id &&
;;;205    	    (oh->parent_obj_id != YAFFS_OBJECTID_UNLINKED ||
;;;206    	     obj->parent->obj_id != YAFFS_OBJECTID_DELETED))
;;;207    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;208    			"Obj %d header mismatch parent_id %d parent_obj_id %d",
;;;209    			tags->obj_id, oh->parent_obj_id,
;;;210    			obj->parent->obj_id);
;;;211    
;;;212    	if (tags->obj_id > 1 && oh->name[0] == 0)	/* Null name */
;;;213    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;214    			"Obj %d header name is NULL",
;;;215    			obj->obj_id);
;;;216    
;;;217    	if (tags->obj_id > 1 && ((u8) (oh->name[0])) == 0xff)	/* Junk name */
;;;218    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;219    			"Obj %d header name is 0xff",
;;;220    			obj->obj_id);
;;;221    }
000728  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1836|
00072c  e3560000          CMP      r6,#0                 ;174
000730  0a000003          BEQ      |L1.1860|
000734  e3540000          CMP      r4,#0                 ;174
000738  0a000001          BEQ      |L1.1860|
00073c  e3550000          CMP      r5,#0                 ;174
000740  1a000009          BNE      |L1.1900|
                  |L1.1860|
000744  e51f04b8          LDR      r0,|L1.660|
000748  e5900000          LDR      r0,[r0,#0]            ;175  ; yaffs_trace_mask
00074c  e3100801          TST      r0,#0x10000           ;175
000750  0a000004          BEQ      |L1.1896|
000754  e1a03005          MOV      r3,r5                 ;175
000758  e1a02004          MOV      r2,r4                 ;175
00075c  e1a01006          MOV      r1,r6                 ;175
000760  e28f0f62          ADR      r0,|L1.2288|
000764  ebfffffe          BL       sysprintf
                  |L1.1896|
000768  eaffffee          B        |L1.1832|
                  |L1.1900|
00076c  e5d50000          LDRB     r0,[r5,#0]            ;181
000770  e3500000          CMP      r0,#0                 ;181
000774  da000002          BLE      |L1.1924|
000778  e5d50000          LDRB     r0,[r5,#0]            ;182
00077c  e3500005          CMP      r0,#5                 ;182
000780  da000007          BLE      |L1.1956|
                  |L1.1924|
000784  e51f04f8          LDR      r0,|L1.660|
000788  e5900000          LDR      r0,[r0,#0]            ;183  ; yaffs_trace_mask
00078c  e3100801          TST      r0,#0x10000           ;183
000790  0a000003          BEQ      |L1.1956|
000794  e5d52000          LDRB     r2,[r5,#0]            ;183
000798  e28f0f62          ADR      r0,|L1.2344|
00079c  e5961004          LDR      r1,[r6,#4]            ;183
0007a0  ebfffffe          BL       sysprintf
                  |L1.1956|
0007a4  e5960004          LDR      r0,[r6,#4]            ;187
0007a8  e5941030          LDR      r1,[r4,#0x30]         ;187
0007ac  e1500001          CMP      r0,r1                 ;187
0007b0  0a000007          BEQ      |L1.2004|
0007b4  e51f0528          LDR      r0,|L1.660|
0007b8  e5900000          LDR      r0,[r0,#0]            ;188  ; yaffs_trace_mask
0007bc  e3100801          TST      r0,#0x10000           ;188
0007c0  0a000003          BEQ      |L1.2004|
0007c4  e5942030          LDR      r2,[r4,#0x30]         ;188
0007c8  e28f0f63          ADR      r0,|L1.2396|
0007cc  e5961004          LDR      r1,[r6,#4]            ;188
0007d0  ebfffffe          BL       sysprintf
                  |L1.2004|
0007d4  e3570000          CMP      r7,#0                 ;198
0007d8  0a00000d          BEQ      |L1.2068|
0007dc  e5960004          LDR      r0,[r6,#4]            ;198
0007e0  e3500001          CMP      r0,#1                 ;198
0007e4  9a00000a          BLS      |L1.2068|
0007e8  e594001c          LDR      r0,[r4,#0x1c]         ;198
0007ec  e3500000          CMP      r0,#0                 ;198
0007f0  1a000007          BNE      |L1.2068|
0007f4  e51f0568          LDR      r0,|L1.660|
0007f8  e5900000          LDR      r0,[r0,#0]            ;199  ; yaffs_trace_mask
0007fc  e3100801          TST      r0,#0x10000           ;199
000800  0a000003          BEQ      |L1.2068|
000804  e5952004          LDR      r2,[r5,#4]            ;199
000808  e28f0f5e          ADR      r0,|L1.2440|
00080c  e5961004          LDR      r1,[r6,#4]            ;199
000810  ebfffffe          BL       sysprintf
                  |L1.2068|
000814  e3570000          CMP      r7,#0                 ;203
000818  0a000018          BEQ      |L1.2176|
00081c  e594001c          LDR      r0,[r4,#0x1c]         ;203
000820  e3500000          CMP      r0,#0                 ;203
000824  0a000015          BEQ      |L1.2176|
000828  e5950004          LDR      r0,[r5,#4]            ;204
00082c  e594101c          LDR      r1,[r4,#0x1c]         ;204
000830  e5911030          LDR      r1,[r1,#0x30]         ;204
000834  e1500001          CMP      r0,r1                 ;204
000838  0a000010          BEQ      |L1.2176|
00083c  e5950004          LDR      r0,[r5,#4]            ;205
000840  e3500003          CMP      r0,#3                 ;205
000844  1a000003          BNE      |L1.2136|
000848  e594001c          LDR      r0,[r4,#0x1c]         ;206
00084c  e5900030          LDR      r0,[r0,#0x30]         ;206
000850  e3500004          CMP      r0,#4                 ;206
000854  0a000009          BEQ      |L1.2176|
                  |L1.2136|
000858  e51f05cc          LDR      r0,|L1.660|
00085c  e5900000          LDR      r0,[r0,#0]            ;207  ; yaffs_trace_mask
000860  e3100801          TST      r0,#0x10000           ;207
000864  0a000005          BEQ      |L1.2176|
000868  e594001c          LDR      r0,[r4,#0x1c]         ;207
00086c  e5903030          LDR      r3,[r0,#0x30]         ;207
000870  e5952004          LDR      r2,[r5,#4]            ;207
000874  e28f0f53          ADR      r0,|L1.2504|
000878  e5961004          LDR      r1,[r6,#4]            ;207
00087c  ebfffffe          BL       sysprintf
                  |L1.2176|
000880  e5960004          LDR      r0,[r6,#4]            ;212
000884  e3500001          CMP      r0,#1                 ;212
000888  9a000009          BLS      |L1.2228|
00088c  e5d5000a          LDRB     r0,[r5,#0xa]          ;212
000890  e3500000          CMP      r0,#0                 ;212
000894  1a000006          BNE      |L1.2228|
000898  e51f060c          LDR      r0,|L1.660|
00089c  e5900000          LDR      r0,[r0,#0]            ;213  ; yaffs_trace_mask
0008a0  e3100801          TST      r0,#0x10000           ;213
0008a4  0a000002          BEQ      |L1.2228|
0008a8  e28f0f56          ADR      r0,|L1.2568|
0008ac  e5941030          LDR      r1,[r4,#0x30]         ;213
0008b0  ebfffffe          BL       sysprintf
                  |L1.2228|
0008b4  e5960004          LDR      r0,[r6,#4]            ;217
0008b8  e3500001          CMP      r0,#1                 ;217
0008bc  9a000009          BLS      |L1.2280|
0008c0  e5d5000a          LDRB     r0,[r5,#0xa]          ;217
0008c4  e35000ff          CMP      r0,#0xff              ;217
0008c8  1a000006          BNE      |L1.2280|
0008cc  e51f0640          LDR      r0,|L1.660|
0008d0  e5900000          LDR      r0,[r0,#0]            ;218  ; yaffs_trace_mask
0008d4  e3100801          TST      r0,#0x10000           ;218
0008d8  0a000002          BEQ      |L1.2280|
0008dc  e28f0f52          ADR      r0,|L1.2604|
0008e0  e5941030          LDR      r1,[r4,#0x30]         ;218
0008e4  ebfffffe          BL       sysprintf
                  |L1.2280|
0008e8  e1a00000          MOV      r0,r0
0008ec  eaffff8d          B        |L1.1832|
                  |L1.2288|
0008f0  79616666          DCB      "yaffs: Verifying object header tags %p obj %p oh %p\n",0
0008f4  733a2056
0008f8  65726966
0008fc  79696e67
000900  206f626a
000904  65637420
000908  68656164
00090c  65722074
000910  61677320
000914  2570206f
000918  626a2025
00091c  70206f68
000920  2025700a
000924  00      
000925  00                DCB      0
000926  00                DCB      0
000927  00                DCB      0
                  |L1.2344|
000928  79616666          DCB      "yaffs: Obj %d header type is illegal value 0x%x\n",0
00092c  733a204f
000930  626a2025
000934  64206865
000938  61646572
00093c  20747970
000940  65206973
000944  20696c6c
000948  6567616c
00094c  2076616c
000950  75652030
000954  7825780a
000958  00      
000959  00                DCB      0
00095a  00                DCB      0
00095b  00                DCB      0
                  |L1.2396|
00095c  79616666          DCB      "yaffs: Obj %d header mismatch obj_id %d\n",0
000960  733a204f
000964  626a2025
000968  64206865
00096c  61646572
000970  206d6973
000974  6d617463
000978  68206f62
00097c  6a5f6964
000980  2025640a
000984  00      
000985  00                DCB      0
000986  00                DCB      0
000987  00                DCB      0
                  |L1.2440|
000988  79616666          DCB      "yaffs: Obj %d header mismatch parent_id %d obj->parent "
00098c  733a204f
000990  626a2025
000994  64206865
000998  61646572
00099c  206d6973
0009a0  6d617463
0009a4  68207061
0009a8  72656e74
0009ac  5f696420
0009b0  2564206f
0009b4  626a2d3e
0009b8  70617265
0009bc  6e7420  
0009bf  6973204e          DCB      "is NULL\n",0
0009c3  554c4c0a
0009c7  00      
                  |L1.2504|
0009c8  79616666          DCB      "yaffs: Obj %d header mismatch parent_id %d parent_obj_i"
0009cc  733a204f
0009d0  626a2025
0009d4  64206865
0009d8  61646572
0009dc  206d6973
0009e0  6d617463
0009e4  68207061
0009e8  72656e74
0009ec  5f696420
0009f0  25642070
0009f4  6172656e
0009f8  745f6f62
0009fc  6a5f69  
0009ff  64202564          DCB      "d %d\n",0
000a03  0a00    
000a05  00                DCB      0
000a06  00                DCB      0
000a07  00                DCB      0
                  |L1.2568|
000a08  79616666          DCB      "yaffs: Obj %d header name is NULL\n",0
000a0c  733a204f
000a10  626a2025
000a14  64206865
000a18  61646572
000a1c  206e616d
000a20  65206973
000a24  204e554c
000a28  4c0a00  
000a2b  00                DCB      0
                  |L1.2604|
000a2c  79616666          DCB      "yaffs: Obj %d header name is 0xff\n",0
000a30  733a204f
000a34  626a2025
000a38  64206865
000a3c  61646572
000a40  206e616d
000a44  65206973
000a48  20307866
000a4c  660a00  
000a4f  00                DCB      0
                          ENDP

                  yaffs_verify_file PROC
;;;222    
;;;223    void yaffs_verify_file(struct yaffs_obj *obj)
000a50  e92d4ff0          PUSH     {r4-r11,lr}
;;;224    {
000a54  e24dd064          SUB      sp,sp,#0x64
000a58  e1a04000          MOV      r4,r0
;;;225    	u32 x;
;;;226    	int required_depth;
;;;227    	int last_chunk;
;;;228    	u32 offset_in_chunk;
;;;229    	u32 the_chunk;
;;;230    
;;;231    	u32 i;
;;;232    	struct yaffs_dev *dev;
;;;233    	struct yaffs_ext_tags tags;
;;;234    	struct yaffs_tnode *tn;
;;;235    	u32 obj_id;
;;;236    
;;;237    	if (!obj)
000a5c  e3540000          CMP      r4,#0
000a60  1a000001          BNE      |L1.2668|
                  |L1.2660|
;;;238    		return;
;;;239    
;;;240    	if (yaffs_skip_verification(obj->my_dev))
;;;241    		return;
;;;242    
;;;243    	dev = obj->my_dev;
;;;244    	obj_id = obj->obj_id;
;;;245    
;;;246    
;;;247    	/* Check file size is consistent with tnode depth */
;;;248    	yaffs_addr_to_chunk(dev, obj->variant.file_variant.file_size,
;;;249    				&last_chunk, &offset_in_chunk);
;;;250    	last_chunk++;
;;;251    	x = last_chunk >> YAFFS_TNODES_LEVEL0_BITS;
;;;252    	required_depth = 0;
;;;253    	while (x > 0) {
;;;254    		x >>= YAFFS_TNODES_INTERNAL_BITS;
;;;255    		required_depth++;
;;;256    	}
;;;257    
;;;258    	/* Check that the chunks in the tnode tree are all correct.
;;;259    	 * We do this by scanning through the tnode tree and
;;;260    	 * checking the tags for every chunk match.
;;;261    	 */
;;;262    
;;;263    	if (yaffs_skip_nand_verification(dev))
;;;264    		return;
;;;265    
;;;266    	for (i = 1; i <= last_chunk; i++) {
;;;267    		tn = yaffs_find_tnode_0(dev, &obj->variant.file_variant, i);
;;;268    
;;;269    		if (!tn)
;;;270    			continue;
;;;271    
;;;272    		the_chunk = yaffs_get_group_base(dev, tn, i);
;;;273    		if (the_chunk > 0) {
;;;274    			yaffs_rd_chunk_tags_nand(dev, the_chunk, NULL,
;;;275    						 &tags);
;;;276    			if (tags.obj_id != obj_id || tags.chunk_id != i)
;;;277    				yaffs_trace(YAFFS_TRACE_VERIFY,
;;;278    					"Object %d chunk_id %d NAND mismatch chunk %d tags (%d:%d)",
;;;279    					obj_id, i, the_chunk,
;;;280    					tags.obj_id, tags.chunk_id);
;;;281    		}
;;;282    	}
;;;283    }
000a64  e28dd064          ADD      sp,sp,#0x64
000a68  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2668|
000a6c  e5940008          LDR      r0,[r4,#8]            ;240
000a70  ebfffffe          BL       yaffs_skip_verification
000a74  e3500000          CMP      r0,#0                 ;240
000a78  0a000000          BEQ      |L1.2688|
000a7c  eafffff8          B        |L1.2660|
                  |L1.2688|
000a80  e594b008          LDR      r11,[r4,#8]           ;243
000a84  e5949030          LDR      r9,[r4,#0x30]         ;244
000a88  e28d0058          ADD      r0,sp,#0x58           ;248
000a8c  e28d105c          ADD      r1,sp,#0x5c           ;248
000a90  e58d0004          STR      r0,[sp,#4]            ;248
000a94  e58d1000          STR      r1,[sp,#0]            ;248
000a98  e1c406d8          LDRD     r0,r1,[r4,#0x68]      ;248
000a9c  e1cd00f8          STRD     r0,r1,[sp,#8]         ;248
000aa0  e1a02000          MOV      r2,r0                 ;248
000aa4  e1a03001          MOV      r3,r1                 ;248
000aa8  e1a0000b          MOV      r0,r11                ;248
000aac  ebfffffe          BL       yaffs_addr_to_chunk
000ab0  e59d005c          LDR      r0,[sp,#0x5c]         ;250
000ab4  e2800001          ADD      r0,r0,#1              ;250
000ab8  e58d005c          STR      r0,[sp,#0x5c]         ;250
000abc  e59d005c          LDR      r0,[sp,#0x5c]         ;251
000ac0  e1a08240          ASR      r8,r0,#4              ;251
000ac4  e3a0a000          MOV      r10,#0                ;252
000ac8  ea000001          B        |L1.2772|
                  |L1.2764|
000acc  e1a081a8          LSR      r8,r8,#3              ;254
000ad0  e28aa001          ADD      r10,r10,#1            ;255
                  |L1.2772|
000ad4  e3580000          CMP      r8,#0                 ;253
000ad8  1afffffb          BNE      |L1.2764|
000adc  e1a0000b          MOV      r0,r11                ;263
000ae0  ebfffffe          BL       yaffs_skip_nand_verification
000ae4  e3500000          CMP      r0,#0                 ;263
000ae8  0a000000          BEQ      |L1.2800|
000aec  eaffffdc          B        |L1.2660|
                  |L1.2800|
000af0  e3a06001          MOV      r6,#1                 ;266
000af4  ea000027          B        |L1.2968|
                  |L1.2808|
000af8  e1a02006          MOV      r2,r6                 ;267
000afc  e2841068          ADD      r1,r4,#0x68           ;267
000b00  e1a0000b          MOV      r0,r11                ;267
000b04  ebfffffe          BL       yaffs_find_tnode_0
000b08  e1a07000          MOV      r7,r0                 ;267
000b0c  e3570000          CMP      r7,#0                 ;269
000b10  1a000000          BNE      |L1.2840|
000b14  ea00001e          B        |L1.2964|
                  |L1.2840|
000b18  e1a02006          MOV      r2,r6                 ;272
000b1c  e1a01007          MOV      r1,r7                 ;272
000b20  e1a0000b          MOV      r0,r11                ;272
000b24  ebfffffe          BL       yaffs_get_group_base
000b28  e1a05000          MOV      r5,r0                 ;272
000b2c  e3550000          CMP      r5,#0                 ;273
000b30  0a000016          BEQ      |L1.2960|
000b34  e28d3010          ADD      r3,sp,#0x10           ;274
000b38  e3a02000          MOV      r2,#0                 ;274
000b3c  e1a01005          MOV      r1,r5                 ;274
000b40  e1a0000b          MOV      r0,r11                ;274
000b44  ebfffffe          BL       yaffs_rd_chunk_tags_nand
000b48  e59d0014          LDR      r0,[sp,#0x14]         ;276
000b4c  e1500009          CMP      r0,r9                 ;276
000b50  1a000002          BNE      |L1.2912|
000b54  e59d0018          LDR      r0,[sp,#0x18]         ;276
000b58  e1500006          CMP      r0,r6                 ;276
000b5c  0a00000b          BEQ      |L1.2960|
                  |L1.2912|
000b60  e51f08d4          LDR      r0,|L1.660|
000b64  e5900000          LDR      r0,[r0,#0]            ;277  ; yaffs_trace_mask
000b68  e3100801          TST      r0,#0x10000           ;277
000b6c  0a000007          BEQ      |L1.2960|
000b70  e59d0014          LDR      r0,[sp,#0x14]         ;277
000b74  e59d1018          LDR      r1,[sp,#0x18]         ;277
000b78  e1a03005          MOV      r3,r5                 ;277
000b7c  e1a02006          MOV      r2,r6                 ;277
000b80  e1cd00f0          STRD     r0,r1,[sp,#0]         ;277
000b84  e1a01009          MOV      r1,r9                 ;277
000b88  e59f0280          LDR      r0,|L1.3600|
000b8c  ebfffffe          BL       sysprintf
                  |L1.2960|
000b90  e1a00000          MOV      r0,r0                 ;270
                  |L1.2964|
000b94  e2866001          ADD      r6,r6,#1              ;266
                  |L1.2968|
000b98  e59d005c          LDR      r0,[sp,#0x5c]         ;266
000b9c  e1560000          CMP      r6,r0                 ;266
000ba0  9affffd4          BLS      |L1.2808|
000ba4  e1a00000          MOV      r0,r0
000ba8  eaffffad          B        |L1.2660|
;;;284    
                          ENDP

                  yaffs_verify_link PROC
;;;285    void yaffs_verify_link(struct yaffs_obj *obj)
000bac  e52de004          PUSH     {lr}
;;;286    {
000bb0  e1a02000          MOV      r2,r0
;;;287    	if (obj && yaffs_skip_verification(obj->my_dev))
000bb4  e3520000          CMP      r2,#0
000bb8  0a000004          BEQ      |L1.3024|
000bbc  e5920008          LDR      r0,[r2,#8]
000bc0  ebfffffe          BL       yaffs_skip_verification
000bc4  e3500000          CMP      r0,#0
000bc8  0a000000          BEQ      |L1.3024|
                  |L1.3020|
;;;288    		return;
;;;289    
;;;290    	/* Verify sane equivalent object */
;;;291    }
000bcc  e49df004          POP      {pc}
                  |L1.3024|
000bd0  e1a00000          MOV      r0,r0
000bd4  eafffffc          B        |L1.3020|
;;;292    
                          ENDP

                  yaffs_verify_symlink PROC
;;;293    void yaffs_verify_symlink(struct yaffs_obj *obj)
000bd8  e52de004          PUSH     {lr}
;;;294    {
000bdc  e1a02000          MOV      r2,r0
;;;295    	if (obj && yaffs_skip_verification(obj->my_dev))
000be0  e3520000          CMP      r2,#0
000be4  0a000004          BEQ      |L1.3068|
000be8  e5920008          LDR      r0,[r2,#8]
000bec  ebfffffe          BL       yaffs_skip_verification
000bf0  e3500000          CMP      r0,#0
000bf4  0a000000          BEQ      |L1.3068|
                  |L1.3064|
;;;296    		return;
;;;297    
;;;298    	/* Verify symlink string */
;;;299    }
000bf8  e49df004          POP      {pc}
                  |L1.3068|
000bfc  e1a00000          MOV      r0,r0
000c00  eafffffc          B        |L1.3064|
;;;300    
                          ENDP

                  yaffs_verify_special PROC
;;;301    void yaffs_verify_special(struct yaffs_obj *obj)
000c04  e52de004          PUSH     {lr}
;;;302    {
000c08  e1a02000          MOV      r2,r0
;;;303    	if (obj && yaffs_skip_verification(obj->my_dev))
000c0c  e3520000          CMP      r2,#0
000c10  0a000004          BEQ      |L1.3112|
000c14  e5920008          LDR      r0,[r2,#8]
000c18  ebfffffe          BL       yaffs_skip_verification
000c1c  e3500000          CMP      r0,#0
000c20  0a000000          BEQ      |L1.3112|
                  |L1.3108|
;;;304    		return;
;;;305    }
000c24  e49df004          POP      {pc}
                  |L1.3112|
000c28  e1a00000          MOV      r0,r0
000c2c  eafffffc          B        |L1.3108|
;;;306    
                          ENDP

                  yaffs_verify_obj_in_dir PROC
;;;422    
;;;423    void yaffs_verify_obj_in_dir(struct yaffs_obj *obj)
000c30  e92d41f0          PUSH     {r4-r8,lr}
;;;424    {
000c34  e1a04000          MOV      r4,r0
;;;425    	struct list_head *lh;
;;;426    	struct yaffs_obj *list_obj;
;;;427    	int count = 0;
000c38  e3a06000          MOV      r6,#0
;;;428    
;;;429    	if (!obj) {
000c3c  e3540000          CMP      r4,#0
000c40  1a00000c          BNE      |L1.3192|
;;;430    		yaffs_trace(YAFFS_TRACE_ALWAYS, "No object to verify");
000c44  e51f09b8          LDR      r0,|L1.660|
000c48  e5900000          LDR      r0,[r0,#0]  ; yaffs_trace_mask
000c4c  e310020f          TST      r0,#0xf0000000
000c50  0a000001          BEQ      |L1.3164|
000c54  e28f0f6e          ADR      r0,|L1.3604|
000c58  ebfffffe          BL       sysprintf
                  |L1.3164|
;;;431    		BUG();
000c5c  e1a00000          MOV      r0,r0
000c60  e59f21c8          LDR      r2,|L1.3632|
000c64  e28f1f72          ADR      r1,|L1.3636|
000c68  e59f01fc          LDR      r0,|L1.3692|
000c6c  ebfffffe          BL       sysprintf
000c70  e1a00000          MOV      r0,r0
                  |L1.3188|
;;;432    		return;
;;;433    	}
;;;434    
;;;435    	if (yaffs_skip_verification(obj->my_dev))
;;;436    		return;
;;;437    
;;;438    	if (!obj->parent) {
;;;439    		yaffs_trace(YAFFS_TRACE_ALWAYS, "Object does not have parent");
;;;440    		BUG();
;;;441    		return;
;;;442    	}
;;;443    
;;;444    	if (obj->parent->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY) {
;;;445    		yaffs_trace(YAFFS_TRACE_ALWAYS, "Parent is not directory");
;;;446    		BUG();
;;;447    	}
;;;448    
;;;449    	/* Iterate through the objects in each hash entry */
;;;450    
;;;451    	list_for_each(lh, &obj->parent->variant.dir_variant.children) {
;;;452    		list_obj = list_entry(lh, struct yaffs_obj, siblings);
;;;453    		yaffs_verify_obj(list_obj);
;;;454    		if (obj == list_obj)
;;;455    			count++;
;;;456    	}
;;;457    
;;;458    	if (count != 1) {
;;;459    		yaffs_trace(YAFFS_TRACE_ALWAYS,
;;;460    			"Object in directory %d times",
;;;461    			count);
;;;462    		BUG();
;;;463    	}
;;;464    }
000c74  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3192|
000c78  e5940008          LDR      r0,[r4,#8]            ;435
000c7c  ebfffffe          BL       yaffs_skip_verification
000c80  e3500000          CMP      r0,#0                 ;435
000c84  0a000000          BEQ      |L1.3212|
000c88  eafffff9          B        |L1.3188|
                  |L1.3212|
000c8c  e594001c          LDR      r0,[r4,#0x1c]         ;438
000c90  e3500000          CMP      r0,#0                 ;438
000c94  1a00000c          BNE      |L1.3276|
000c98  e51f0a0c          LDR      r0,|L1.660|
000c9c  e5900000          LDR      r0,[r0,#0]            ;439  ; yaffs_trace_mask
000ca0  e310020f          TST      r0,#0xf0000000        ;439
000ca4  0a000001          BEQ      |L1.3248|
000ca8  e28f0d07          ADR      r0,|L1.3696|
000cac  ebfffffe          BL       sysprintf
                  |L1.3248|
000cb0  e1a00000          MOV      r0,r0                 ;440
000cb4  e3a02f6e          MOV      r2,#0x1b8             ;440
000cb8  e28f1f5d          ADR      r1,|L1.3636|
000cbc  e59f01a8          LDR      r0,|L1.3692|
000cc0  ebfffffe          BL       sysprintf
000cc4  e1a00000          MOV      r0,r0                 ;440
000cc8  eaffffe9          B        |L1.3188|
                  |L1.3276|
000ccc  e594001c          LDR      r0,[r4,#0x1c]         ;444
000cd0  e5d00064          LDRB     r0,[r0,#0x64]         ;444
000cd4  e3500003          CMP      r0,#3                 ;444
000cd8  0a00000b          BEQ      |L1.3340|
000cdc  e51f0a50          LDR      r0,|L1.660|
000ce0  e5900000          LDR      r0,[r0,#0]            ;445  ; yaffs_trace_mask
000ce4  e310020f          TST      r0,#0xf0000000        ;445
000ce8  0a000001          BEQ      |L1.3316|
000cec  e28f0e1a          ADR      r0,|L1.3732|
000cf0  ebfffffe          BL       sysprintf
                  |L1.3316|
000cf4  e1a00000          MOV      r0,r0                 ;446
000cf8  e59f21b4          LDR      r2,|L1.3764|
000cfc  e28f1e13          ADR      r1,|L1.3636|
000d00  e59f0164          LDR      r0,|L1.3692|
000d04  ebfffffe          BL       sysprintf
000d08  e1a00000          MOV      r0,r0                 ;446
                  |L1.3340|
000d0c  e594001c          LDR      r0,[r4,#0x1c]         ;451
000d10  e5905068          LDR      r5,[r0,#0x68]         ;451
000d14  ea000006          B        |L1.3380|
                  |L1.3352|
000d18  e2457020          SUB      r7,r5,#0x20           ;452
000d1c  e1a00007          MOV      r0,r7                 ;453
000d20  ebfffffe          BL       yaffs_verify_obj
000d24  e1540007          CMP      r4,r7                 ;454
000d28  1a000000          BNE      |L1.3376|
000d2c  e2866001          ADD      r6,r6,#1              ;455
                  |L1.3376|
000d30  e5955000          LDR      r5,[r5,#0]            ;451
                  |L1.3380|
000d34  e594001c          LDR      r0,[r4,#0x1c]         ;451
000d38  e2800068          ADD      r0,r0,#0x68           ;451
000d3c  e1500005          CMP      r0,r5                 ;451
000d40  1afffff4          BNE      |L1.3352|
000d44  e3560001          CMP      r6,#1                 ;458
000d48  0a00000c          BEQ      |L1.3456|
000d4c  e51f0ac0          LDR      r0,|L1.660|
000d50  e5900000          LDR      r0,[r0,#0]            ;459  ; yaffs_trace_mask
000d54  e310020f          TST      r0,#0xf0000000        ;459
000d58  0a000002          BEQ      |L1.3432|
000d5c  e1a01006          MOV      r1,r6                 ;459
000d60  e28f0e15          ADR      r0,|L1.3768|
000d64  ebfffffe          BL       sysprintf
                  |L1.3432|
000d68  e1a00000          MOV      r0,r0                 ;462
000d6c  e59f216c          LDR      r2,|L1.3808|
000d70  e28f10bc          ADR      r1,|L1.3636|
000d74  e59f00f0          LDR      r0,|L1.3692|
000d78  ebfffffe          BL       sysprintf
000d7c  e1a00000          MOV      r0,r0                 ;462
                  |L1.3456|
000d80  e1a00000          MOV      r0,r0
000d84  eaffffba          B        |L1.3188|
;;;465    
                          ENDP

                  yaffs_verify_dir PROC
;;;466    void yaffs_verify_dir(struct yaffs_obj *directory)
000d88  e92d4070          PUSH     {r4-r6,lr}
;;;467    {
000d8c  e1a04000          MOV      r4,r0
;;;468    	struct list_head *lh;
;;;469    	struct yaffs_obj *list_obj;
;;;470    
;;;471    	if (!directory) {
000d90  e3540000          CMP      r4,#0
000d94  1a000006          BNE      |L1.3508|
;;;472    		BUG();
000d98  e1a00000          MOV      r0,r0
000d9c  e3a02f76          MOV      r2,#0x1d8
000da0  e28f108c          ADR      r1,|L1.3636|
000da4  e59f00c0          LDR      r0,|L1.3692|
000da8  ebfffffe          BL       sysprintf
000dac  e1a00000          MOV      r0,r0
                  |L1.3504|
;;;473    		return;
;;;474    	}
;;;475    
;;;476    	if (yaffs_skip_full_verification(directory->my_dev))
;;;477    		return;
;;;478    
;;;479    	if (directory->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY) {
;;;480    		yaffs_trace(YAFFS_TRACE_ALWAYS,
;;;481    			"Directory has wrong type: %d",
;;;482    			directory->variant_type);
;;;483    		BUG();
;;;484    	}
;;;485    
;;;486    	/* Iterate through the objects in each hash entry */
;;;487    
;;;488    	list_for_each(lh, &directory->variant.dir_variant.children) {
;;;489    		list_obj = list_entry(lh, struct yaffs_obj, siblings);
;;;490    		if (list_obj->parent != directory) {
;;;491    			yaffs_trace(YAFFS_TRACE_ALWAYS,
;;;492    				"Object in directory list has wrong parent %p",
;;;493    				list_obj->parent);
;;;494    			BUG();
;;;495    		}
;;;496    		yaffs_verify_obj_in_dir(list_obj);
;;;497    	}
;;;498    }
000db0  e8bd8070          POP      {r4-r6,pc}
                  |L1.3508|
000db4  e5940008          LDR      r0,[r4,#8]            ;476
000db8  ebfffffe          BL       yaffs_skip_full_verification
000dbc  e3500000          CMP      r0,#0                 ;476
000dc0  0a000000          BEQ      |L1.3528|
000dc4  eafffff9          B        |L1.3504|
                  |L1.3528|
000dc8  e5d40064          LDRB     r0,[r4,#0x64]         ;479
000dcc  e3500003          CMP      r0,#3                 ;479
000dd0  0a00000c          BEQ      |L1.3592|
000dd4  e51f0b48          LDR      r0,|L1.660|
000dd8  e5900000          LDR      r0,[r0,#0]            ;480  ; yaffs_trace_mask
000ddc  e310020f          TST      r0,#0xf0000000        ;480
000de0  0a000002          BEQ      |L1.3568|
000de4  e5d41064          LDRB     r1,[r4,#0x64]         ;480
000de8  e28f00f4          ADR      r0,|L1.3812|
000dec  ebfffffe          BL       sysprintf
                  |L1.3568|
000df0  e1a00000          MOV      r0,r0                 ;483
000df4  e59f2110          LDR      r2,|L1.3852|
000df8  e28f1034          ADR      r1,|L1.3636|
000dfc  e59f0068          LDR      r0,|L1.3692|
000e00  ebfffffe          BL       sysprintf
000e04  e1a00000          MOV      r0,r0                 ;483
                  |L1.3592|
000e08  e5945068          LDR      r5,[r4,#0x68]         ;488
000e0c  ea000053          B        |L1.3936|
                  |L1.3600|
                          DCD      ||.constdata||+0xc0
                  |L1.3604|
000e14  79616666          DCB      "yaffs: No object to verify\n",0
000e18  733a204e
000e1c  6f206f62
000e20  6a656374
000e24  20746f20
000e28  76657269
000e2c  66790a00
                  |L1.3632|
                          DCD      0x000001af
                  |L1.3636|
000e34  2e2e5c2e          DCB      "..\\..\\common\\src\\BSP\\ThirdParty\\yaffs2\\yaffs_ver"
000e38  2e5c636f
000e3c  6d6d6f6e
000e40  5c737263
000e44  5c425350
000e48  5c546869
000e4c  72645061
000e50  7274795c
000e54  79616666
000e58  73325c79
000e5c  61666673
000e60  5f766572
000e64  6966792e          DCB      "ify.c",0
000e68  6300    
000e6a  00                DCB      0
000e6b  00                DCB      0
                  |L1.3692|
                          DCD      ||.text||+0x5c8
                  |L1.3696|
000e70  79616666          DCB      "yaffs: Object does not have parent\n",0
000e74  733a204f
000e78  626a6563
000e7c  7420646f
000e80  6573206e
000e84  6f742068
000e88  61766520
000e8c  70617265
000e90  6e740a00
                  |L1.3732|
000e94  79616666          DCB      "yaffs: Parent is not directory\n",0
000e98  733a2050
000e9c  6172656e
000ea0  74206973
000ea4  206e6f74
000ea8  20646972
000eac  6563746f
000eb0  72790a00
                  |L1.3764|
                          DCD      0x000001be
                  |L1.3768|
000eb8  79616666          DCB      "yaffs: Object in directory %d times\n",0
000ebc  733a204f
000ec0  626a6563
000ec4  7420696e
000ec8  20646972
000ecc  6563746f
000ed0  72792025
000ed4  64207469
000ed8  6d65730a
000edc  00      
000edd  00                DCB      0
000ede  00                DCB      0
000edf  00                DCB      0
                  |L1.3808|
                          DCD      0x000001ce
                  |L1.3812|
000ee4  79616666          DCB      "yaffs: Directory has wrong type: %d\n",0
000ee8  733a2044
000eec  69726563
000ef0  746f7279
000ef4  20686173
000ef8  2077726f
000efc  6e672074
000f00  7970653a
000f04  2025640a
000f08  00      
000f09  00                DCB      0
000f0a  00                DCB      0
000f0b  00                DCB      0
                  |L1.3852|
                          DCD      0x000001e3
                  |L1.3856|
000f10  e2456020          SUB      r6,r5,#0x20           ;489
000f14  e596001c          LDR      r0,[r6,#0x1c]         ;490
000f18  e1500004          CMP      r0,r4                 ;490
000f1c  0a00000c          BEQ      |L1.3924|
000f20  e51f0c94          LDR      r0,|L1.660|
000f24  e5900000          LDR      r0,[r0,#0]            ;491  ; yaffs_trace_mask
000f28  e310020f          TST      r0,#0xf0000000        ;491
000f2c  0a000002          BEQ      |L1.3900|
000f30  e28f0fbd          ADR      r0,|L1.4652|
000f34  e596101c          LDR      r1,[r6,#0x1c]         ;491
000f38  ebfffffe          BL       sysprintf
                  |L1.3900|
000f3c  e1a00000          MOV      r0,r0                 ;494
000f40  e59f231c          LDR      r2,|L1.4708|
000f44  e24f1f46          ADR      r1,|L1.3636|
000f48  e51f00e4          LDR      r0,|L1.3692|
000f4c  ebfffffe          BL       sysprintf
000f50  e1a00000          MOV      r0,r0                 ;494
                  |L1.3924|
000f54  e1a00006          MOV      r0,r6                 ;496
000f58  ebfffffe          BL       yaffs_verify_obj_in_dir
000f5c  e5955000          LDR      r5,[r5,#0]            ;488
                  |L1.3936|
000f60  e2840068          ADD      r0,r4,#0x68           ;488
000f64  e1550000          CMP      r5,r0                 ;488
000f68  1affffe8          BNE      |L1.3856|
000f6c  e1a00000          MOV      r0,r0
000f70  eaffff8e          B        |L1.3504|
;;;499    
                          ENDP

                  yaffs_verify_obj PROC
;;;306    
;;;307    void yaffs_verify_obj(struct yaffs_obj *obj)
000f74  e92d4ff0          PUSH     {r4-r11,lr}
;;;308    {
000f78  e24dd054          SUB      sp,sp,#0x54
000f7c  e1a04000          MOV      r4,r0
;;;309    	struct yaffs_dev *dev;
;;;310    	u32 chunk_min;
;;;311    	u32 chunk_max;
;;;312    	u32 chunk_id_ok;
;;;313    	u32 chunk_in_range;
;;;314    	u32 chunk_wrongly_deleted;
;;;315    	u32 chunk_valid;
;;;316    
;;;317    	if (!obj)
000f80  e3540000          CMP      r4,#0
000f84  1a000001          BNE      |L1.3984|
                  |L1.3976|
;;;318    		return;
;;;319    
;;;320    	if (obj->being_created)
;;;321    		return;
;;;322    
;;;323    	dev = obj->my_dev;
;;;324    
;;;325    	if (yaffs_skip_verification(dev))
;;;326    		return;
;;;327    
;;;328    	/* Check sane object header chunk */
;;;329    
;;;330    	chunk_min = dev->internal_start_block * dev->param.chunks_per_block;
;;;331    	chunk_max =
;;;332    	    (dev->internal_end_block + 1) * dev->param.chunks_per_block - 1;
;;;333    
;;;334    	chunk_in_range = (((unsigned)(obj->hdr_chunk)) >= chunk_min &&
;;;335    			  ((unsigned)(obj->hdr_chunk)) <= chunk_max);
;;;336    	chunk_id_ok = chunk_in_range || (obj->hdr_chunk == 0);
;;;337    	chunk_valid = chunk_in_range &&
;;;338    	    yaffs_check_chunk_bit(dev,
;;;339    				  obj->hdr_chunk / dev->param.chunks_per_block,
;;;340    				  obj->hdr_chunk % dev->param.chunks_per_block);
;;;341    	chunk_wrongly_deleted = chunk_in_range && !chunk_valid;
;;;342    
;;;343    	if (!obj->fake && (!chunk_id_ok || chunk_wrongly_deleted))
;;;344    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;345    			"Obj %d has chunk_id %d %s %s",
;;;346    			obj->obj_id, obj->hdr_chunk,
;;;347    			chunk_id_ok ? "" : ",out of range",
;;;348    			chunk_wrongly_deleted ? ",marked as deleted" : "");
;;;349    
;;;350    	if (chunk_valid && !yaffs_skip_nand_verification(dev)) {
;;;351    		struct yaffs_ext_tags tags;
;;;352    		struct yaffs_obj_hdr *oh;
;;;353    		u8 *buffer = yaffs_get_temp_buffer(dev);
;;;354    
;;;355    		oh = (struct yaffs_obj_hdr *)buffer;
;;;356    
;;;357    		yaffs_rd_chunk_tags_nand(dev, obj->hdr_chunk, buffer, &tags);
;;;358    
;;;359    		yaffs_verify_oh(obj, oh, &tags, 1);
;;;360    
;;;361    		yaffs_release_temp_buffer(dev, buffer);
;;;362    	}
;;;363    
;;;364    	/* Verify it has a parent */
;;;365    	if (obj && !obj->fake && (!obj->parent || obj->parent->my_dev != dev)) {
;;;366    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;367    			"Obj %d has parent pointer %p which does not look like an object",
;;;368    			obj->obj_id, obj->parent);
;;;369    	}
;;;370    
;;;371    	/* Verify parent is a directory */
;;;372    	if (obj->parent &&
;;;373    	    obj->parent->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY) {
;;;374    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;375    			"Obj %d's parent is not a directory (type %d)",
;;;376    			obj->obj_id, obj->parent->variant_type);
;;;377    	}
;;;378    
;;;379    	switch (obj->variant_type) {
;;;380    	case YAFFS_OBJECT_TYPE_FILE:
;;;381    		yaffs_verify_file(obj);
;;;382    		break;
;;;383    	case YAFFS_OBJECT_TYPE_SYMLINK:
;;;384    		yaffs_verify_symlink(obj);
;;;385    		break;
;;;386    	case YAFFS_OBJECT_TYPE_DIRECTORY:
;;;387    		yaffs_verify_dir(obj);
;;;388    		break;
;;;389    	case YAFFS_OBJECT_TYPE_HARDLINK:
;;;390    		yaffs_verify_link(obj);
;;;391    		break;
;;;392    	case YAFFS_OBJECT_TYPE_SPECIAL:
;;;393    		yaffs_verify_special(obj);
;;;394    		break;
;;;395    	case YAFFS_OBJECT_TYPE_UNKNOWN:
;;;396    	default:
;;;397    		yaffs_trace(YAFFS_TRACE_VERIFY,
;;;398    			"Obj %d has illegaltype %d",
;;;399    		   obj->obj_id, obj->variant_type);
;;;400    		break;
;;;401    	}
;;;402    }
000f88  e28dd054          ADD      sp,sp,#0x54
000f8c  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.3984|
000f90  e5d40001          LDRB     r0,[r4,#1]            ;320
000f94  e1a00e80          LSL      r0,r0,#29             ;320
000f98  e1b00fa0          LSRS     r0,r0,#31             ;320
000f9c  0a000000          BEQ      |L1.4004|
000fa0  eafffff8          B        |L1.3976|
                  |L1.4004|
000fa4  e5945008          LDR      r5,[r4,#8]            ;323
000fa8  e1a00005          MOV      r0,r5                 ;325
000fac  ebfffffe          BL       yaffs_skip_verification
000fb0  e3500000          CMP      r0,#0                 ;325
000fb4  0a000000          BEQ      |L1.4028|
000fb8  eafffff2          B        |L1.3976|
                  |L1.4028|
000fbc  e59500d0          LDR      r0,[r5,#0xd0]         ;330
000fc0  e595100c          LDR      r1,[r5,#0xc]          ;330
000fc4  e0080190          MUL      r8,r0,r1              ;330
000fc8  e59500d4          LDR      r0,[r5,#0xd4]         ;331
000fcc  e2800001          ADD      r0,r0,#1              ;331
000fd0  e595100c          LDR      r1,[r5,#0xc]          ;331
000fd4  e0000091          MUL      r0,r1,r0              ;331
000fd8  e2409001          SUB      r9,r0,#1              ;331
000fdc  e5940028          LDR      r0,[r4,#0x28]         ;334
000fe0  e1500008          CMP      r0,r8                 ;334
000fe4  3a000004          BCC      |L1.4092|
000fe8  e5940028          LDR      r0,[r4,#0x28]         ;335
000fec  e1500009          CMP      r0,r9                 ;335
000ff0  8a000001          BHI      |L1.4092|
000ff4  e3a00001          MOV      r0,#1                 ;335
000ff8  ea000000          B        |L1.4096|
                  |L1.4092|
000ffc  e3a00000          MOV      r0,#0                 ;335
                  |L1.4096|
001000  e1a06000          MOV      r6,r0                 ;335
001004  e3560000          CMP      r6,#0                 ;336
001008  1a000002          BNE      |L1.4120|
00100c  e5940028          LDR      r0,[r4,#0x28]         ;336
001010  e3500000          CMP      r0,#0                 ;336
001014  1a000001          BNE      |L1.4128|
                  |L1.4120|
001018  e3a00001          MOV      r0,#1                 ;336
00101c  ea000000          B        |L1.4132|
                  |L1.4128|
001020  e3a00000          MOV      r0,#0                 ;336
                  |L1.4132|
001024  e1a0a000          MOV      r10,r0                ;336
001028  e3560000          CMP      r6,#0                 ;337
00102c  0a00000f          BEQ      |L1.4208|
001030  e595100c          LDR      r1,[r5,#0xc]          ;338
001034  e5940028          LDR      r0,[r4,#0x28]         ;338
001038  ebfffffe          BL       __aeabi_idivmod
00103c  e1a07001          MOV      r7,r1                 ;338
001040  e595100c          LDR      r1,[r5,#0xc]          ;338
001044  e5940028          LDR      r0,[r4,#0x28]         ;338
001048  ebfffffe          BL       __aeabi_idivmod
00104c  e1a02007          MOV      r2,r7                 ;338
001050  e58d004c          STR      r0,[sp,#0x4c]         ;338
001054  e1a01000          MOV      r1,r0                 ;338
001058  e1a00005          MOV      r0,r5                 ;338
00105c  ebfffffe          BL       yaffs_check_chunk_bit
001060  e3500000          CMP      r0,#0                 ;338
001064  0a000001          BEQ      |L1.4208|
001068  e3a00001          MOV      r0,#1                 ;338
00106c  ea000000          B        |L1.4212|
                  |L1.4208|
001070  e3a00000          MOV      r0,#0                 ;338
                  |L1.4212|
001074  e58d0050          STR      r0,[sp,#0x50]         ;338
001078  e3560000          CMP      r6,#0                 ;341
00107c  0a000004          BEQ      |L1.4244|
001080  e59d0050          LDR      r0,[sp,#0x50]         ;341
001084  e3500000          CMP      r0,#0                 ;341
001088  1a000001          BNE      |L1.4244|
00108c  e3a00001          MOV      r0,#1                 ;341
001090  ea000000          B        |L1.4248|
                  |L1.4244|
001094  e3a00000          MOV      r0,#0                 ;341
                  |L1.4248|
001098  e1a0b000          MOV      r11,r0                ;341
00109c  e5d40000          LDRB     r0,[r4,#0]            ;343
0010a0  e1a00e00          LSL      r0,r0,#28             ;343
0010a4  e1b00fa0          LSRS     r0,r0,#31             ;343
0010a8  1a000017          BNE      |L1.4364|
0010ac  e35a0000          CMP      r10,#0                ;343
0010b0  0a000001          BEQ      |L1.4284|
0010b4  e35b0000          CMP      r11,#0                ;343
0010b8  0a000013          BEQ      |L1.4364|
                  |L1.4284|
0010bc  e51f0e30          LDR      r0,|L1.660|
0010c0  e5900000          LDR      r0,[r0,#0]            ;344  ; yaffs_trace_mask
0010c4  e3100801          TST      r0,#0x10000           ;344
0010c8  0a00000f          BEQ      |L1.4364|
0010cc  e35b0000          CMP      r11,#0                ;344
0010d0  0a000001          BEQ      |L1.4316|
0010d4  e28f0f63          ADR      r0,|L1.4712|
0010d8  ea000000          B        |L1.4320|
                  |L1.4316|
0010dc  e28f0f5f          ADR      r0,|L1.4704|
                  |L1.4320|
0010e0  e35a0000          CMP      r10,#0                ;344
0010e4  e58d0000          STR      r0,[sp,#0]            ;344
0010e8  0a000001          BEQ      |L1.4340|
0010ec  e28f0f5b          ADR      r0,|L1.4704|
0010f0  ea000000          B        |L1.4344|
                  |L1.4340|
0010f4  e28f0d06          ADR      r0,|L1.4732|
                  |L1.4344|
0010f8  e1a03000          MOV      r3,r0                 ;344
0010fc  e28f0f62          ADR      r0,|L1.4748|
001100  e5941030          LDR      r1,[r4,#0x30]         ;344
001104  e5942028          LDR      r2,[r4,#0x28]         ;344
001108  ebfffffe          BL       sysprintf
                  |L1.4364|
00110c  e59d0050          LDR      r0,[sp,#0x50]         ;350
001110  e3500000          CMP      r0,#0                 ;350
001114  0a000015          BEQ      |L1.4464|
001118  e1a00005          MOV      r0,r5                 ;350
00111c  ebfffffe          BL       yaffs_skip_nand_verification
001120  e3500000          CMP      r0,#0                 ;350
001124  1a000011          BNE      |L1.4464|
001128  e1a00005          MOV      r0,r5                 ;353
00112c  ebfffffe          BL       yaffs_get_temp_buffer
001130  e1a07000          MOV      r7,r0                 ;353
001134  e58d7004          STR      r7,[sp,#4]            ;355
001138  e28d3008          ADD      r3,sp,#8              ;357
00113c  e1a02007          MOV      r2,r7                 ;357
001140  e1a00005          MOV      r0,r5                 ;357
001144  e5941028          LDR      r1,[r4,#0x28]         ;357
001148  ebfffffe          BL       yaffs_rd_chunk_tags_nand
00114c  e3a03001          MOV      r3,#1                 ;359
001150  e28d2008          ADD      r2,sp,#8              ;359
001154  e1a00004          MOV      r0,r4                 ;359
001158  e59d1004          LDR      r1,[sp,#4]            ;359
00115c  ebfffffe          BL       yaffs_verify_oh
001160  e1a01007          MOV      r1,r7                 ;361
001164  e1a00005          MOV      r0,r5                 ;361
001168  ebfffffe          BL       yaffs_release_temp_buffer
00116c  e1a00000          MOV      r0,r0                 ;362
                  |L1.4464|
001170  e3540000          CMP      r4,#0                 ;365
001174  0a000012          BEQ      |L1.4548|
001178  e5d40000          LDRB     r0,[r4,#0]            ;365
00117c  e1a00e00          LSL      r0,r0,#28             ;365
001180  e1b00fa0          LSRS     r0,r0,#31             ;365
001184  1a00000e          BNE      |L1.4548|
001188  e594001c          LDR      r0,[r4,#0x1c]         ;365
00118c  e3500000          CMP      r0,#0                 ;365
001190  0a000003          BEQ      |L1.4516|
001194  e594001c          LDR      r0,[r4,#0x1c]         ;365
001198  e5900008          LDR      r0,[r0,#8]            ;365
00119c  e1500005          CMP      r0,r5                 ;365
0011a0  0a000007          BEQ      |L1.4548|
                  |L1.4516|
0011a4  e51f0f18          LDR      r0,|L1.660|
0011a8  e5900000          LDR      r0,[r0,#0]            ;366  ; yaffs_trace_mask
0011ac  e3100801          TST      r0,#0x10000           ;366
0011b0  0a000003          BEQ      |L1.4548|
0011b4  e59f00f8          LDR      r0,|L1.4788|
0011b8  e5941030          LDR      r1,[r4,#0x30]         ;366
0011bc  e594201c          LDR      r2,[r4,#0x1c]         ;366
0011c0  ebfffffe          BL       sysprintf
                  |L1.4548|
0011c4  e594001c          LDR      r0,[r4,#0x1c]         ;372
0011c8  e3500000          CMP      r0,#0                 ;372
0011cc  0a00000c          BEQ      |L1.4612|
0011d0  e594001c          LDR      r0,[r4,#0x1c]         ;373
0011d4  e5d00064          LDRB     r0,[r0,#0x64]         ;373
0011d8  e3500003          CMP      r0,#3                 ;373
0011dc  0a000008          BEQ      |L1.4612|
0011e0  e51f0f54          LDR      r0,|L1.660|
0011e4  e5900000          LDR      r0,[r0,#0]            ;374  ; yaffs_trace_mask
0011e8  e3100801          TST      r0,#0x10000           ;374
0011ec  0a000004          BEQ      |L1.4612|
0011f0  e594001c          LDR      r0,[r4,#0x1c]         ;374
0011f4  e5d02064          LDRB     r2,[r0,#0x64]         ;374
0011f8  e28f00b8          ADR      r0,|L1.4792|
0011fc  e5941030          LDR      r1,[r4,#0x30]         ;374
001200  ebfffffe          BL       sysprintf
                  |L1.4612|
001204  e5d40064          LDRB     r0,[r4,#0x64]         ;379
001208  e3500006          CMP      r0,#6                 ;379
00120c  308ff100          ADDCC    pc,pc,r0,LSL #2       ;379
001210  ea00004a          B        |L1.4928|
001214  ea00004b          B        |L1.4936|
001218  ea000034          B        |L1.4848|
00121c  ea000037          B        |L1.4864|
001220  ea00003a          B        |L1.4880|
001224  ea00003d          B        |L1.4896|
001228  ea000040          B        |L1.4912|
                  |L1.4652|
00122c  79616666          DCB      "yaffs: Object in directory list has wrong parent %p\n"
001230  733a204f
001234  626a6563
001238  7420696e
00123c  20646972
001240  6563746f
001244  7279206c
001248  69737420
00124c  68617320
001250  77726f6e
001254  67207061
001258  72656e74
00125c  2025700a
                  |L1.4704|
001260  00                DCB      0
001261  00                DCB      0
001262  00                DCB      0
001263  00                DCB      0
                  |L1.4708|
                          DCD      0x000001ee
                  |L1.4712|
001268  2c6d6172          DCB      ",marked as deleted",0
00126c  6b656420
001270  61732064
001274  656c6574
001278  656400  
00127b  00                DCB      0
                  |L1.4732|
00127c  2c6f7574          DCB      ",out of range",0
001280  206f6620
001284  72616e67
001288  6500    
00128a  00                DCB      0
00128b  00                DCB      0
                  |L1.4748|
00128c  79616666          DCB      "yaffs: Obj %d has chunk_id %d %s %s\n",0
001290  733a204f
001294  626a2025
001298  64206861
00129c  73206368
0012a0  756e6b5f
0012a4  69642025
0012a8  64202573
0012ac  2025730a
0012b0  00      
0012b1  00                DCB      0
0012b2  00                DCB      0
0012b3  00                DCB      0
                  |L1.4788|
                          DCD      ||.constdata||+0x104
                  |L1.4792|
0012b8  79616666          DCB      "yaffs: Obj %d's parent is not a directory (type %d)\n",0
0012bc  733a204f
0012c0  626a2025
0012c4  64277320
0012c8  70617265
0012cc  6e742069
0012d0  73206e6f
0012d4  74206120
0012d8  64697265
0012dc  63746f72
0012e0  79202874
0012e4  79706520
0012e8  2564290a
0012ec  00      
0012ed  00                DCB      0
0012ee  00                DCB      0
0012ef  00                DCB      0
                  |L1.4848|
0012f0  e1a00000          MOV      r0,r0                 ;380
0012f4  e1a00004          MOV      r0,r4                 ;381
0012f8  ebfffffe          BL       yaffs_verify_file
0012fc  ea00001a          B        |L1.4972|
                  |L1.4864|
001300  e1a00000          MOV      r0,r0                 ;383
001304  e1a00004          MOV      r0,r4                 ;384
001308  ebfffffe          BL       yaffs_verify_symlink
00130c  ea000016          B        |L1.4972|
                  |L1.4880|
001310  e1a00000          MOV      r0,r0                 ;386
001314  e1a00004          MOV      r0,r4                 ;387
001318  ebfffffe          BL       yaffs_verify_dir
00131c  ea000012          B        |L1.4972|
                  |L1.4896|
001320  e1a00000          MOV      r0,r0                 ;389
001324  e1a00004          MOV      r0,r4                 ;390
001328  ebfffffe          BL       yaffs_verify_link
00132c  ea00000e          B        |L1.4972|
                  |L1.4912|
001330  e1a00000          MOV      r0,r0                 ;392
001334  e1a00004          MOV      r0,r4                 ;393
001338  ebfffffe          BL       yaffs_verify_special
00133c  ea00000a          B        |L1.4972|
                  |L1.4928|
001340  e1a00000          MOV      r0,r0                 ;395
001344  e1a00000          MOV      r0,r0                 ;395
                  |L1.4936|
001348  e59f011c          LDR      r0,|L1.5228|
00134c  e5900000          LDR      r0,[r0,#0]            ;397  ; yaffs_trace_mask
001350  e3100801          TST      r0,#0x10000           ;397
001354  0a000003          BEQ      |L1.4968|
001358  e5d42064          LDRB     r2,[r4,#0x64]         ;397
00135c  e28f0f43          ADR      r0,|L1.5232|
001360  e5941030          LDR      r1,[r4,#0x30]         ;397
001364  ebfffffe          BL       sysprintf
                  |L1.4968|
001368  e1a00000          MOV      r0,r0                 ;400
                  |L1.4972|
00136c  e1a00000          MOV      r0,r0                 ;382
001370  e1a00000          MOV      r0,r0
001374  eaffff03          B        |L1.3976|
;;;403    
                          ENDP

                  yaffs_verify_objects PROC
;;;404    void yaffs_verify_objects(struct yaffs_dev *dev)
001378  e92d41f0          PUSH     {r4-r8,lr}
;;;405    {
00137c  e1a05000          MOV      r5,r0
;;;406    	struct yaffs_obj *obj;
;;;407    	int i;
;;;408    	struct list_head *lh;
;;;409    
;;;410    	if (yaffs_skip_verification(dev))
001380  e1a00005          MOV      r0,r5
001384  ebfffffe          BL       yaffs_skip_verification
001388  e3500000          CMP      r0,#0
00138c  0a000000          BEQ      |L1.5012|
                  |L1.5008|
;;;411    		return;
;;;412    
;;;413    	/* Iterate through the objects in each hash entry */
;;;414    
;;;415    	for (i = 0; i < YAFFS_NOBJECT_BUCKETS; i++) {
;;;416    		list_for_each(lh, &dev->obj_bucket[i].list) {
;;;417    			obj = list_entry(lh, struct yaffs_obj, hash_link);
;;;418    			yaffs_verify_obj(obj);
;;;419    		}
;;;420    	}
;;;421    }
001390  e8bd81f0          POP      {r4-r8,pc}
                  |L1.5012|
001394  e3a04000          MOV      r4,#0                 ;415
001398  ea00000d          B        |L1.5076|
                  |L1.5020|
00139c  e0840084          ADD      r0,r4,r4,LSL #1       ;416
0013a0  e2851f52          ADD      r1,r5,#0x148          ;416
0013a4  e7916100          LDR      r6,[r1,r0,LSL #2]     ;416
0013a8  ea000003          B        |L1.5052|
                  |L1.5036|
0013ac  e246700c          SUB      r7,r6,#0xc            ;417
0013b0  e1a00007          MOV      r0,r7                 ;418
0013b4  ebfffffe          BL       yaffs_verify_obj
0013b8  e5966000          LDR      r6,[r6,#0]            ;416
                  |L1.5052|
0013bc  e0840084          ADD      r0,r4,r4,LSL #1       ;416
0013c0  e2851f52          ADD      r1,r5,#0x148          ;416
0013c4  e0810100          ADD      r0,r1,r0,LSL #2       ;416
0013c8  e1500006          CMP      r0,r6                 ;416
0013cc  1afffff6          BNE      |L1.5036|
0013d0  e2844001          ADD      r4,r4,#1              ;415
                  |L1.5076|
0013d4  e3540c01          CMP      r4,#0x100             ;415
0013d8  baffffef          BLT      |L1.5020|
0013dc  e1a00000          MOV      r0,r0
0013e0  eaffffea          B        |L1.5008|
;;;422    
                          ENDP

                  yaffs_verify_free_chunks PROC
;;;501    
;;;502    void yaffs_verify_free_chunks(struct yaffs_dev *dev)
0013e4  e92d4070          PUSH     {r4-r6,lr}
;;;503    {
0013e8  e1a05000          MOV      r5,r0
;;;504    	int counted;
;;;505    	int difference;
;;;506    
;;;507    	if (yaffs_skip_verification(dev))
0013ec  e1a00005          MOV      r0,r5
0013f0  ebfffffe          BL       yaffs_skip_verification
0013f4  e3500000          CMP      r0,#0
0013f8  0a000000          BEQ      |L1.5120|
                  |L1.5116|
;;;508    		return;
;;;509    
;;;510    	counted = yaffs_count_free_chunks(dev);
;;;511    
;;;512    	difference = dev->n_free_chunks - counted;
;;;513    
;;;514    	if (difference) {
;;;515    		yaffs_trace(YAFFS_TRACE_ALWAYS,
;;;516    			"Freechunks verification failure %d %d %d",
;;;517    			dev->n_free_chunks, counted, difference);
;;;518    		yaffs_free_verification_failures++;
;;;519    	}
;;;520    }
0013fc  e8bd8070          POP      {r4-r6,pc}
                  |L1.5120|
001400  e1a00005          MOV      r0,r5                 ;510
001404  ebfffffe          BL       yaffs_count_free_chunks
001408  e1a04000          MOV      r4,r0                 ;510
00140c  e5950d4c          LDR      r0,[r5,#0xd4c]        ;512
001410  e0406004          SUB      r6,r0,r4              ;512
001414  e3560000          CMP      r6,#0                 ;514
001418  0a00000d          BEQ      |L1.5204|
00141c  e59f0048          LDR      r0,|L1.5228|
001420  e5900000          LDR      r0,[r0,#0]            ;515  ; yaffs_trace_mask
001424  e310020f          TST      r0,#0xf0000000        ;515
001428  0a000004          BEQ      |L1.5184|
00142c  e1a03006          MOV      r3,r6                 ;515
001430  e1a02004          MOV      r2,r4                 ;515
001434  e28f0058          ADR      r0,|L1.5268|
001438  e5951d4c          LDR      r1,[r5,#0xd4c]        ;515
00143c  ebfffffe          BL       sysprintf
                  |L1.5184|
001440  e59f0080          LDR      r0,|L1.5320|
001444  e5900000          LDR      r0,[r0,#0]            ;518  ; yaffs_free_verification_failures
001448  e2800001          ADD      r0,r0,#1              ;518
00144c  e59f1074          LDR      r1,|L1.5320|
001450  e5810000          STR      r0,[r1,#0]            ;518  ; yaffs_free_verification_failures
                  |L1.5204|
001454  e1a00000          MOV      r0,r0
001458  eaffffe7          B        |L1.5116|
;;;521    
                          ENDP

                  yaffs_verify_file_sane PROC
;;;522    int yaffs_verify_file_sane(struct yaffs_obj *in)
00145c  e1a01000          MOV      r1,r0
;;;523    {
;;;524    	in = in;
001460  e1a00000          MOV      r0,r0
;;;525    	return YAFFS_OK;
001464  e3a00001          MOV      r0,#1
;;;526    }
001468  e12fff1e          BX       lr
                          ENDP

                  |L1.5228|
                          DCD      yaffs_trace_mask
                  |L1.5232|
001470  79616666          DCB      "yaffs: Obj %d has illegaltype %d\n",0
001474  733a204f
001478  626a2025
00147c  64206861
001480  7320696c
001484  6c656761
001488  6c747970
00148c  65202564
001490  0a00    
001492  00                DCB      0
001493  00                DCB      0
                  |L1.5268|
001494  79616666          DCB      "yaffs: Freechunks verification failure %d %d %d\n",0
001498  733a2046
00149c  72656563
0014a0  68756e6b
0014a4  73207665
0014a8  72696669
0014ac  63617469
0014b0  6f6e2066
0014b4  61696c75
0014b8  72652025
0014bc  64202564
0014c0  2025640a
0014c4  00      
0014c5  00                DCB      0
0014c6  00                DCB      0
0014c7  00                DCB      0
                  |L1.5320|
                          DCD      yaffs_free_verification_failures

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  block_state_name
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x8
                          DCD      ||.conststring||+0x13
                          DCD      ||.conststring||+0x1c
                          DCD      ||.conststring||+0x22
                          DCD      ||.conststring||+0x2d
                          DCD      ||.conststring||+0x32
                          DCD      ||.conststring||+0x38
                          DCD      ||.conststring||+0x43
                          DCD      ||.conststring||+0x4e
000028  79616666          DCB      0x79,0x61,0x66,0x66
00002c  733a2042          DCB      0x73,0x3a,0x20,0x42
000030  6c6f636b          DCB      0x6c,0x6f,0x63,0x6b
000034  20256420          DCB      0x20,0x25,0x64,0x20
000038  68617320          DCB      0x68,0x61,0x73,0x20
00003c  696c6c65          DCB      0x69,0x6c,0x6c,0x65
000040  67616c20          DCB      0x67,0x61,0x6c,0x20
000044  76616c75          DCB      0x76,0x61,0x6c,0x75
000048  65732070          DCB      0x65,0x73,0x20,0x70
00004c  61676573          DCB      0x61,0x67,0x65,0x73
000050  5f696e5f          DCB      0x5f,0x69,0x6e,0x5f
000054  75736564          DCB      0x75,0x73,0x65,0x64
000058  20256420          DCB      0x20,0x25,0x64,0x20
00005c  736f6674          DCB      0x73,0x6f,0x66,0x74
000060  5f64656c          DCB      0x5f,0x64,0x65,0x6c
000064  5f706167          DCB      0x5f,0x70,0x61,0x67
000068  65732025          DCB      0x65,0x73,0x20,0x25
00006c  640a0000          DCB      0x64,0x0a,0x00,0x00
000070  79616666          DCB      0x79,0x61,0x66,0x66
000074  733a2042          DCB      0x73,0x3a,0x20,0x42
000078  6c6f636b          DCB      0x6c,0x6f,0x63,0x6b
00007c  20256420          DCB      0x20,0x25,0x64,0x20
000080  68617320          DCB      0x68,0x61,0x73,0x20
000084  696e636f          DCB      0x69,0x6e,0x63,0x6f
000088  6e736973          DCB      0x6e,0x73,0x69,0x73
00008c  74656e74          DCB      0x74,0x65,0x6e,0x74
000090  2076616c          DCB      0x20,0x76,0x61,0x6c
000094  75657320          DCB      0x75,0x65,0x73,0x20
000098  70616765          DCB      0x70,0x61,0x67,0x65
00009c  735f696e          DCB      0x73,0x5f,0x69,0x6e
0000a0  5f757365          DCB      0x5f,0x75,0x73,0x65
0000a4  20256420          DCB      0x20,0x25,0x64,0x20
0000a8  636f756e          DCB      0x63,0x6f,0x75,0x6e
0000ac  74656420          DCB      0x74,0x65,0x64,0x20
0000b0  6368756e          DCB      0x63,0x68,0x75,0x6e
0000b4  6b206269          DCB      0x6b,0x20,0x62,0x69
0000b8  74732025          DCB      0x74,0x73,0x20,0x25
0000bc  640a0000          DCB      0x64,0x0a,0x00,0x00
0000c0  79616666          DCB      0x79,0x61,0x66,0x66
0000c4  733a204f          DCB      0x73,0x3a,0x20,0x4f
0000c8  626a6563          DCB      0x62,0x6a,0x65,0x63
0000cc  74202564          DCB      0x74,0x20,0x25,0x64
0000d0  20636875          DCB      0x20,0x63,0x68,0x75
0000d4  6e6b5f69          DCB      0x6e,0x6b,0x5f,0x69
0000d8  64202564          DCB      0x64,0x20,0x25,0x64
0000dc  204e414e          DCB      0x20,0x4e,0x41,0x4e
0000e0  44206d69          DCB      0x44,0x20,0x6d,0x69
0000e4  736d6174          DCB      0x73,0x6d,0x61,0x74
0000e8  63682063          DCB      0x63,0x68,0x20,0x63
0000ec  68756e6b          DCB      0x68,0x75,0x6e,0x6b
0000f0  20256420          DCB      0x20,0x25,0x64,0x20
0000f4  74616773          DCB      0x74,0x61,0x67,0x73
0000f8  20282564          DCB      0x20,0x28,0x25,0x64
0000fc  3a256429          DCB      0x3a,0x25,0x64,0x29
000100  0a000000          DCB      0x0a,0x00,0x00,0x00
000104  79616666          DCB      0x79,0x61,0x66,0x66
000108  733a204f          DCB      0x73,0x3a,0x20,0x4f
00010c  626a2025          DCB      0x62,0x6a,0x20,0x25
000110  64206861          DCB      0x64,0x20,0x68,0x61
000114  73207061          DCB      0x73,0x20,0x70,0x61
000118  72656e74          DCB      0x72,0x65,0x6e,0x74
00011c  20706f69          DCB      0x20,0x70,0x6f,0x69
000120  6e746572          DCB      0x6e,0x74,0x65,0x72
000124  20257020          DCB      0x20,0x25,0x70,0x20
000128  77686963          DCB      0x77,0x68,0x69,0x63
00012c  6820646f          DCB      0x68,0x20,0x64,0x6f
000130  6573206e          DCB      0x65,0x73,0x20,0x6e
000134  6f74206c          DCB      0x6f,0x74,0x20,0x6c
000138  6f6f6b20          DCB      0x6f,0x6f,0x6b,0x20
00013c  6c696b65          DCB      0x6c,0x69,0x6b,0x65
000140  20616e20          DCB      0x20,0x61,0x6e,0x20
000144  6f626a65          DCB      0x6f,0x62,0x6a,0x65
000148  63740a00          DCB      0x63,0x74,0x0a,0x00

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  556e6b6e          DCB      "Unknown",0
000004  6f776e00
000008  4e656564          DCB      "Needs scan",0
00000c  73207363
000010  616e00  
000013  5363616e          DCB      "Scanning",0
000017  6e696e67
00001b  00      
00001c  456d7074          DCB      "Empty",0
000020  7900    
000022  416c6c6f          DCB      "Allocating",0
000026  63617469
00002a  6e6700  
00002d  46756c6c          DCB      "Full",0
000031  00      
000032  44697274          DCB      "Dirty",0
000036  7900    
000038  43686563          DCB      "Checkpoint",0
00003c  6b706f69
000040  6e7400  
000043  436f6c6c          DCB      "Collecting",0
000047  65637469
00004b  6e6700  
00004e  44656164          DCB      "Dead",0
000052  00      

                          AREA ||.data||, DATA, ALIGN=2

                  yaffs_free_verification_failures
                          DCD      0x00000000
