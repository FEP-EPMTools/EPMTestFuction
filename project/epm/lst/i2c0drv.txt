; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\i2c0drv.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\i2c0drv.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\i2c0drv.crf src\UserDrv\i2c0drv.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  hwInit PROC
;;;36     /*-----------------------------------------*/
;;;37     static BOOL hwInit(void)
000000  e92d4010          PUSH     {r4,lr}
;;;38     {
;;;39         outpw(REG_CLK_PCLKEN0,inpw(REG_CLK_PCLKEN0) | (1<<3)); //Enable GPIO engin clock.
000004  e3a0020b          MOV      r0,#0xb0000000
000008  e5900218          LDR      r0,[r0,#0x218]
00000c  e3800008          ORR      r0,r0,#8
000010  e3a0120b          MOV      r1,#0xb0000000
000014  e5810218          STR      r0,[r1,#0x218]
;;;40         //init i2c0
;;;41         outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<0)) | (0x8<<0));//GPG0 I2C0_SCL
000018  e3a0020b          MOV      r0,#0xb0000000
00001c  e59000a0          LDR      r0,[r0,#0xa0]
000020  e3c0000f          BIC      r0,r0,#0xf
000024  e3800008          ORR      r0,r0,#8
000028  e58100a0          STR      r0,[r1,#0xa0]
;;;42         outpw(REG_SYS_GPG_MFPL,(inpw(REG_SYS_GPG_MFPL) & ~(0xF<<4)) | (0x8<<4));//GPG1 I2C0_SDA
00002c  e3a0020b          MOV      r0,#0xb0000000
000030  e59000a0          LDR      r0,[r0,#0xa0]
000034  e3c000f0          BIC      r0,r0,#0xf0
000038  e3800080          ORR      r0,r0,#0x80
00003c  e58100a0          STR      r0,[r1,#0xa0]
;;;43         i2cInit(I2C_PORT);
000040  e3a00000          MOV      r0,#0
000044  ebfffffe          BL       i2cInit
;;;44         int32_t rtval = i2cOpen((PVOID)I2C_PORT);
000048  e3a00000          MOV      r0,#0
00004c  ebfffffe          BL       i2cOpen
000050  e1a04000          MOV      r4,r0
;;;45         if(rtval < 0) 
000054  e3540000          CMP      r4,#0
000058  aa000001          BGE      |L1.100|
;;;46         {
;;;47             sysprintf("Open I2C0 error!\n");
00005c  e28f00c8          ADR      r0,|L1.300|
000060  ebfffffe          BL       sysprintf
                  |L1.100|
;;;48         }
;;;49         i2cIoctl(I2C_PORT, I2C_IOC_SET_SPEED, 100, 0);
000064  e3a03000          MOV      r3,#0
000068  e3a02064          MOV      r2,#0x64
00006c  e3a01002          MOV      r1,#2
000070  e1a00003          MOV      r0,r3
000074  ebfffffe          BL       i2cIoctl
;;;50         return TRUE;
000078  e3a00001          MOV      r0,#1
;;;51     }
00007c  e8bd8010          POP      {r4,pc}
;;;52     /*-----------------------------------------*/
                          ENDP

                  I2c0DrvInit PROC
;;;54     /*-----------------------------------------*/
;;;55     BOOL I2c0DrvInit(void)
000080  e92d4010          PUSH     {r4,lr}
;;;56     {
;;;57         BOOL retval;
;;;58         sysprintf("I2c0DrvInit!!\n");
000084  e28f00b4          ADR      r0,|L1.320|
000088  ebfffffe          BL       sysprintf
;;;59         retval = hwInit();
00008c  ebfffffe          BL       hwInit
000090  e1a04000          MOV      r4,r0
;;;60         return retval;
000094  e1a00004          MOV      r0,r4
;;;61     }
000098  e8bd8010          POP      {r4,pc}
;;;62     
                          ENDP

                  I2c0Ioctl PROC
;;;63     int32_t I2c0Ioctl(uint32_t cmd, uint32_t arg0, uint32_t arg1)
00009c  e92d4070          PUSH     {r4-r6,lr}
;;;64     {
0000a0  e1a04000          MOV      r4,r0
0000a4  e1a05001          MOV      r5,r1
0000a8  e1a06002          MOV      r6,r2
;;;65         return i2cIoctl(I2C_PORT, cmd, arg0, arg1);
0000ac  e1a03006          MOV      r3,r6
0000b0  e1a02005          MOV      r2,r5
0000b4  e1a01004          MOV      r1,r4
0000b8  e3a00000          MOV      r0,#0
0000bc  ebfffffe          BL       i2cIoctl
;;;66     }
0000c0  e8bd8070          POP      {r4-r6,pc}
;;;67     int32_t I2c0Read(uint8_t* buf, uint32_t len)
                          ENDP

                  I2c0Read PROC
0000c4  e92d4070          PUSH     {r4-r6,lr}
;;;68     {
0000c8  e1a04000          MOV      r4,r0
0000cc  e1a05001          MOV      r5,r1
;;;69         return i2cRead(I2C_PORT, buf, len);
0000d0  e1a02005          MOV      r2,r5
0000d4  e1a01004          MOV      r1,r4
0000d8  e3a00000          MOV      r0,#0
0000dc  ebfffffe          BL       i2cRead
;;;70     }
0000e0  e8bd8070          POP      {r4-r6,pc}
;;;71     int32_t I2c0Write(uint8_t* buf, uint32_t len)
                          ENDP

                  I2c0Write PROC
0000e4  e92d4070          PUSH     {r4-r6,lr}
;;;72     {
0000e8  e1a04000          MOV      r4,r0
0000ec  e1a05001          MOV      r5,r1
;;;73         return i2cWrite(I2C_PORT, buf, len);
0000f0  e1a02005          MOV      r2,r5
0000f4  e1a01004          MOV      r1,r4
0000f8  e3a00000          MOV      r0,#0
0000fc  ebfffffe          BL       i2cWrite
;;;74     }
000100  e8bd8070          POP      {r4-r6,pc}
;;;75     void I2c0enableCriticalSectionFunc(BOOL flag)
                          ENDP

                  I2c0enableCriticalSectionFunc PROC
000104  e92d4010          PUSH     {r4,lr}
;;;76     {
000108  e1a04000          MOV      r4,r0
;;;77         if(flag)
00010c  e3540000          CMP      r4,#0
000110  0a000002          BEQ      |L1.288|
;;;78             i2cEnterCriticalSection(I2C_PORT);
000114  e3a00000          MOV      r0,#0
000118  ebfffffe          BL       i2cEnterCriticalSection
00011c  ea000001          B        |L1.296|
                  |L1.288|
;;;79         else
;;;80             i2cExitCriticalSection(I2C_PORT);
000120  e3a00000          MOV      r0,#0
000124  ebfffffe          BL       i2cExitCriticalSection
                  |L1.296|
;;;81     }
000128  e8bd8010          POP      {r4,pc}
;;;82     /*** * Copyright (C) 2016 Far Easy Pass LTD. All rights reserved. ***/
                          ENDP

                  |L1.300|
00012c  4f70656e          DCB      "Open I2C0 error!\n",0
000130  20493243
000134  30206572
000138  726f7221
00013c  0a00    
00013e  00                DCB      0
00013f  00                DCB      0
                  |L1.320|
000140  49326330          DCB      "I2c0DrvInit!!\n",0
000144  44727649
000148  6e697421
00014c  210a00  
00014f  00                DCB      0
