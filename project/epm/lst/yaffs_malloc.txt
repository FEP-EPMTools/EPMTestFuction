; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\yaffs_malloc.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\yaffs_malloc.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -I..\..\common\src\BSP\Library\USB_HOST\Inc -I..\..\common\src\BSP\Library\USB_HOST\Inc\usb_uvc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\yaffs_malloc.crf ..\..\common\src\BSP\ThirdParty\yaffs2\yaffs_malloc.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  YAFFS_InitializeMemoryPool PROC
;;;65     
;;;66     void  YAFFS_InitializeMemoryPool(void)
000000  e92d4010          PUSH     {r4,lr}
;;;67     {
;;;68     	_MemoryPoolBase = (unsigned int)&_YAFFSMemoryPool[0] | 0x80000000;
000004  e59f0310          LDR      r0,|L1.796|
000008  e3800102          ORR      r0,r0,#0x80000000
00000c  e59f130c          LDR      r1,|L1.800|
000010  e5810000          STR      r0,[r1,#0]  ; _MemoryPoolBase
;;;69     
;;;70     	_MemoryPoolEnd = _MemoryPoolBase + YAFFS_MEMORY_POOL_SIZE;
000014  e2810000          ADD      r0,r1,#0
000018  e5900000          LDR      r0,[r0,#0]  ; _MemoryPoolBase
00001c  e2800501          ADD      r0,r0,#0x400000
000020  e59f12fc          LDR      r1,|L1.804|
000024  e5810000          STR      r0,[r1,#0]  ; _MemoryPoolEnd
;;;71     	_FreeMemorySize = _MemoryPoolEnd - _MemoryPoolBase;
000028  e2810000          ADD      r0,r1,#0
00002c  e5900000          LDR      r0,[r0,#0]  ; _MemoryPoolEnd
000030  e59f12e8          LDR      r1,|L1.800|
000034  e5911000          LDR      r1,[r1,#0]  ; _MemoryPoolBase
000038  e0400001          SUB      r0,r0,r1
00003c  e59f12e4          LDR      r1,|L1.808|
000040  e5810000          STR      r0,[r1,#0]  ; _FreeMemorySize
;;;72     	_AllocatedMemorySize = 0;
000044  e3a00000          MOV      r0,#0
000048  e59f12dc          LDR      r1,|L1.812|
00004c  e5810000          STR      r0,[r1,#0]  ; _AllocatedMemorySize
;;;73     	_pCurrent = (YAFFS_MHDR_T *)_MemoryPoolBase;
000050  e59f02c8          LDR      r0,|L1.800|
000054  e5900000          LDR      r0,[r0,#0]  ; _MemoryPoolBase
000058  e59f12d0          LDR      r1,|L1.816|
00005c  e5810000          STR      r0,[r1,#0]  ; _pCurrent
;;;74     	memset((char *)_MemoryPoolBase, 0, _FreeMemorySize);
000060  e59f02c0          LDR      r0,|L1.808|
000064  e5901000          LDR      r1,[r0,#0]  ; _FreeMemorySize
000068  e59f02b0          LDR      r0,|L1.800|
00006c  e5900000          LDR      r0,[r0,#0]  ; _MemoryPoolBase
000070  ebfffffe          BL       __aeabi_memclr
;;;75     }
000074  e8bd8010          POP      {r4,pc}
;;;76     
                          ENDP

                  yaffs_malloc PROC
;;;77     /***************************************/
;;;78     void *yaffs_malloc(size_t size)
000078  e92d47fc          PUSH     {r2-r10,lr}
;;;79     {
00007c  e1a06000          MOV      r6,r0
;;;80     // 	return malloc(size);
;;;81     	YAFFS_MHDR_T  *pPrimitivePos = _pCurrent;
000080  e59f02a8          LDR      r0,|L1.816|
000084  e5909000          LDR      r9,[r0,#0]  ; _pCurrent
;;;82     	YAFFS_MHDR_T  *pFound;
;;;83     	int   found_size=-1;
000088  e3e07000          MVN      r7,#0
;;;84     	int   i, block_count;
;;;85     	int   wrap = 0;
00008c  e3a0a000          MOV      r10,#0
;;;86     
;;;87     	if (size >= _FreeMemorySize)
000090  e59f0290          LDR      r0,|L1.808|
000094  e5900000          LDR      r0,[r0,#0]  ; _FreeMemorySize
000098  e1560000          CMP      r6,r0
00009c  3a000006          BCC      |L1.188|
;;;88     	{
;;;89     		sysprintf("yaffs_malloc - want=%d, free=%d\n", size, _FreeMemorySize);
0000a0  e59f0280          LDR      r0,|L1.808|
0000a4  e1a01006          MOV      r1,r6
0000a8  e5902000          LDR      r2,[r0,#0]  ; _FreeMemorySize
0000ac  e28f0d0a          ADR      r0,|L1.820|
0000b0  ebfffffe          BL       sysprintf
;;;90     		return NULL;
0000b4  e3a00000          MOV      r0,#0
                  |L1.184|
;;;91     	}
;;;92     
;;;93     	if ((unsigned int)_pCurrent >= _MemoryPoolEnd)
;;;94     	   _pCurrent = (YAFFS_MHDR_T *)_MemoryPoolBase;   /* wrapped */
;;;95     
;;;96     	do 
;;;97     	{
;;;98     		if (_pCurrent->flag)          /* is not a free block */
;;;99     		{
;;;100    			if (_pCurrent->magic != YAFFS_MEM_ALLOC_MAGIC)
;;;101    			{
;;;102    				sysprintf("\nyaffs_malloc - incorrect magic number! C:%x F:%x, wanted:%d, Base:0x%x, End:0x%x\n", 
;;;103                            (unsigned int)_pCurrent, _FreeMemorySize, size, (unsigned int)_MemoryPoolBase, (unsigned int)_MemoryPoolEnd);
;;;104    				return NULL;
;;;105    			}
;;;106    
;;;107    			if (_pCurrent->flag == 0x3)
;;;108    				_pCurrent = (YAFFS_MHDR_T *)((unsigned int)_pCurrent + _pCurrent->bcnt * YAFFS_MEM_BLOCK_SIZE);
;;;109    			else
;;;110    			{
;;;111    				sysprintf("USB_malloc warning - not the first block!\n");
;;;112    				_pCurrent = (YAFFS_MHDR_T *)((unsigned int)_pCurrent + YAFFS_MEM_BLOCK_SIZE);
;;;113    			}
;;;114    			
;;;115    			if ((unsigned int)_pCurrent > _MemoryPoolEnd)
;;;116    				sysprintf("yaffs_malloc - exceed limit!!\n");
;;;117    
;;;118    			if ((unsigned int)_pCurrent == _MemoryPoolEnd)
;;;119    			{
;;;120    				sysprintf("yaffs_malloc - warp!!\n");
;;;121    				wrap = 1;
;;;122    				_pCurrent = (YAFFS_MHDR_T *)_MemoryPoolBase;   /* wrapped */
;;;123    			}
;;;124    			
;;;125    			found_size = -1;          /* reset the accumlator */
;;;126    		}
;;;127    		else                         /* is a free block */
;;;128    		{
;;;129    			if (found_size == -1)     /* the leading block */
;;;130    			{
;;;131    				pFound = _pCurrent;
;;;132    				block_count = 1;
;;;133    			   
;;;134    				found_size = YAFFS_MEM_BLOCK_SIZE - sizeof(YAFFS_MHDR_T);
;;;135    			}
;;;136    			else                      /* not the leading block */
;;;137    			{
;;;138    				found_size += YAFFS_MEM_BLOCK_SIZE;
;;;139    				block_count++;
;;;140    			}
;;;141    			   
;;;142    			if (found_size >= size)
;;;143    			{
;;;144    				pFound->bcnt = block_count;
;;;145    				pFound->magic = YAFFS_MEM_ALLOC_MAGIC;
;;;146    				_FreeMemorySize -= block_count * YAFFS_MEM_BLOCK_SIZE;
;;;147    				_AllocatedMemorySize += block_count * YAFFS_MEM_BLOCK_SIZE;
;;;148    				_pCurrent = pFound;
;;;149    				for (i=0; i<block_count; i++)
;;;150    				{
;;;151    					_pCurrent->flag = 1;     /* allocate block */
;;;152    					_pCurrent = (YAFFS_MHDR_T *)((unsigned int)_pCurrent + YAFFS_MEM_BLOCK_SIZE);
;;;153    				} 
;;;154    				pFound->flag = 0x3;
;;;155    				
;;;156    				return (void *)((unsigned int)pFound + sizeof(YAFFS_MHDR_T));
;;;157    			}
;;;158    			 
;;;159    			/* advance to the next block */
;;;160    			_pCurrent = (YAFFS_MHDR_T *)((unsigned int)_pCurrent + YAFFS_MEM_BLOCK_SIZE);
;;;161    			if ((unsigned int)_pCurrent >= _MemoryPoolEnd)
;;;162    			{
;;;163    				wrap = 1;
;;;164    				_pCurrent = (YAFFS_MHDR_T *)_MemoryPoolBase;   /* wrapped */
;;;165    				found_size = -1;     /* reset accumlator */
;;;166    			}
;;;167    		}
;;;168    	} while ((wrap == 0) || (_pCurrent < pPrimitivePos));
;;;169    	   
;;;170    	sysprintf("yaffs_malloc - No free memory!\n");
;;;171    	return NULL;
;;;172    }
0000b8  e8bd87fc          POP      {r2-r10,pc}
                  |L1.188|
0000bc  e59f026c          LDR      r0,|L1.816|
0000c0  e5900000          LDR      r0,[r0,#0]            ;93  ; _pCurrent
0000c4  e59f1258          LDR      r1,|L1.804|
0000c8  e5911000          LDR      r1,[r1,#0]            ;93  ; _MemoryPoolEnd
0000cc  e1500001          CMP      r0,r1                 ;93
0000d0  3a000003          BCC      |L1.228|
0000d4  e59f0244          LDR      r0,|L1.800|
0000d8  e5900000          LDR      r0,[r0,#0]            ;94  ; _MemoryPoolBase
0000dc  e59f124c          LDR      r1,|L1.816|
0000e0  e5810000          STR      r0,[r1,#0]            ;94  ; _pCurrent
                  |L1.228|
0000e4  e1a00000          MOV      r0,r0                 ;96
                  |L1.232|
0000e8  e59f0240          LDR      r0,|L1.816|
0000ec  e5900000          LDR      r0,[r0,#0]            ;98  ; _pCurrent
0000f0  e5900000          LDR      r0,[r0,#0]            ;98
0000f4  e3500000          CMP      r0,#0                 ;98
0000f8  0a000040          BEQ      |L1.512|
0000fc  e59f022c          LDR      r0,|L1.816|
000100  e5900000          LDR      r0,[r0,#0]            ;100  ; _pCurrent
000104  e5900008          LDR      r0,[r0,#8]            ;100
000108  e59f1248          LDR      r1,|L1.856|
00010c  e1500001          CMP      r0,r1                 ;100
000110  0a00000e          BEQ      |L1.336|
000114  e59f0208          LDR      r0,|L1.804|
000118  e5900000          LDR      r0,[r0,#0]            ;102  ; _MemoryPoolEnd
00011c  e59f11fc          LDR      r1,|L1.800|
000120  e5911000          LDR      r1,[r1,#0]            ;102  ; _MemoryPoolBase
000124  e1a03006          MOV      r3,r6                 ;102
000128  e58d0004          STR      r0,[sp,#4]            ;102
00012c  e59f01f4          LDR      r0,|L1.808|
000130  e58d1000          STR      r1,[sp,#0]            ;102
000134  e5902000          LDR      r2,[r0,#0]            ;102  ; _FreeMemorySize
000138  e59f01f0          LDR      r0,|L1.816|
00013c  e5901000          LDR      r1,[r0,#0]            ;102  ; _pCurrent
000140  e59f0214          LDR      r0,|L1.860|
000144  ebfffffe          BL       sysprintf
000148  e3a00000          MOV      r0,#0                 ;104
00014c  eaffffd9          B        |L1.184|
                  |L1.336|
000150  e59f01d8          LDR      r0,|L1.816|
000154  e5900000          LDR      r0,[r0,#0]            ;107  ; _pCurrent
000158  e5900000          LDR      r0,[r0,#0]            ;107
00015c  e3500003          CMP      r0,#3                 ;107
000160  1a000008          BNE      |L1.392|
000164  e59f01c4          LDR      r0,|L1.816|
000168  e5900000          LDR      r0,[r0,#0]            ;108  ; _pCurrent
00016c  e5900004          LDR      r0,[r0,#4]            ;108
000170  e59f11b8          LDR      r1,|L1.816|
000174  e5911000          LDR      r1,[r1,#0]            ;108  ; _pCurrent
000178  e0810480          ADD      r0,r1,r0,LSL #9       ;108
00017c  e59f11ac          LDR      r1,|L1.816|
000180  e5810000          STR      r0,[r1,#0]            ;108  ; _pCurrent
000184  ea000006          B        |L1.420|
                  |L1.392|
000188  e28f0e1d          ADR      r0,|L1.864|
00018c  ebfffffe          BL       sysprintf
000190  e59f0198          LDR      r0,|L1.816|
000194  e5900000          LDR      r0,[r0,#0]            ;112  ; _pCurrent
000198  e2800c02          ADD      r0,r0,#0x200          ;112
00019c  e59f118c          LDR      r1,|L1.816|
0001a0  e5810000          STR      r0,[r1,#0]            ;112  ; _pCurrent
                  |L1.420|
0001a4  e59f0184          LDR      r0,|L1.816|
0001a8  e5900000          LDR      r0,[r0,#0]            ;115  ; _pCurrent
0001ac  e59f1170          LDR      r1,|L1.804|
0001b0  e5911000          LDR      r1,[r1,#0]            ;115  ; _MemoryPoolEnd
0001b4  e1500001          CMP      r0,r1                 ;115
0001b8  9a000001          BLS      |L1.452|
0001bc  e28f0f72          ADR      r0,|L1.908|
0001c0  ebfffffe          BL       sysprintf
                  |L1.452|
0001c4  e59f0164          LDR      r0,|L1.816|
0001c8  e5900000          LDR      r0,[r0,#0]            ;118  ; _pCurrent
0001cc  e59f1150          LDR      r1,|L1.804|
0001d0  e5911000          LDR      r1,[r1,#0]            ;118  ; _MemoryPoolEnd
0001d4  e1500001          CMP      r0,r1                 ;118
0001d8  1a000006          BNE      |L1.504|
0001dc  e28f0f72          ADR      r0,|L1.940|
0001e0  ebfffffe          BL       sysprintf
0001e4  e3a0a001          MOV      r10,#1                ;121
0001e8  e59f0130          LDR      r0,|L1.800|
0001ec  e5900000          LDR      r0,[r0,#0]            ;122  ; _MemoryPoolBase
0001f0  e59f1138          LDR      r1,|L1.816|
0001f4  e5810000          STR      r0,[r1,#0]            ;122  ; _pCurrent
                  |L1.504|
0001f8  e3e07000          MVN      r7,#0                 ;125
0001fc  ea00003c          B        |L1.756|
                  |L1.512|
000200  e3770001          CMN      r7,#1                 ;129
000204  1a000004          BNE      |L1.540|
000208  e59f0120          LDR      r0,|L1.816|
00020c  e5905000          LDR      r5,[r0,#0]            ;131  ; _pCurrent
000210  e3a04001          MOV      r4,#1                 ;132
000214  e3a07e1f          MOV      r7,#0x1f0             ;134
000218  ea000001          B        |L1.548|
                  |L1.540|
00021c  e2877c02          ADD      r7,r7,#0x200          ;138
000220  e2844001          ADD      r4,r4,#1              ;139
                  |L1.548|
000224  e1570006          CMP      r7,r6                 ;142
000228  3a000020          BCC      |L1.688|
00022c  e5854004          STR      r4,[r5,#4]            ;144
000230  e59f0120          LDR      r0,|L1.856|
000234  e5850008          STR      r0,[r5,#8]            ;145
000238  e59f00e8          LDR      r0,|L1.808|
00023c  e5900000          LDR      r0,[r0,#0]            ;146  ; _FreeMemorySize
000240  e0400484          SUB      r0,r0,r4,LSL #9       ;146
000244  e59f10dc          LDR      r1,|L1.808|
000248  e5810000          STR      r0,[r1,#0]            ;146  ; _FreeMemorySize
00024c  e59f00d8          LDR      r0,|L1.812|
000250  e5900000          LDR      r0,[r0,#0]            ;147  ; _AllocatedMemorySize
000254  e0800484          ADD      r0,r0,r4,LSL #9       ;147
000258  e59f10cc          LDR      r1,|L1.812|
00025c  e5810000          STR      r0,[r1,#0]            ;147  ; _AllocatedMemorySize
000260  e59f00c8          LDR      r0,|L1.816|
000264  e5805000          STR      r5,[r0,#0]            ;148  ; _pCurrent
000268  e3a08000          MOV      r8,#0                 ;149
00026c  ea000009          B        |L1.664|
                  |L1.624|
000270  e3a00001          MOV      r0,#1                 ;151
000274  e59f10b4          LDR      r1,|L1.816|
000278  e5911000          LDR      r1,[r1,#0]            ;151  ; _pCurrent
00027c  e5810000          STR      r0,[r1,#0]            ;151
000280  e59f00a8          LDR      r0,|L1.816|
000284  e5900000          LDR      r0,[r0,#0]            ;152  ; _pCurrent
000288  e2800c02          ADD      r0,r0,#0x200          ;152
00028c  e59f109c          LDR      r1,|L1.816|
000290  e5810000          STR      r0,[r1,#0]            ;152  ; _pCurrent
000294  e2888001          ADD      r8,r8,#1              ;149
                  |L1.664|
000298  e1580004          CMP      r8,r4                 ;149
00029c  bafffff3          BLT      |L1.624|
0002a0  e3a00003          MOV      r0,#3                 ;154
0002a4  e5850000          STR      r0,[r5,#0]            ;154
0002a8  e2850010          ADD      r0,r5,#0x10           ;156
0002ac  eaffff81          B        |L1.184|
                  |L1.688|
0002b0  e59f0078          LDR      r0,|L1.816|
0002b4  e5900000          LDR      r0,[r0,#0]            ;160  ; _pCurrent
0002b8  e2800c02          ADD      r0,r0,#0x200          ;160
0002bc  e59f106c          LDR      r1,|L1.816|
0002c0  e5810000          STR      r0,[r1,#0]            ;160  ; _pCurrent
0002c4  e2810000          ADD      r0,r1,#0              ;161
0002c8  e5900000          LDR      r0,[r0,#0]            ;161  ; _pCurrent
0002cc  e59f1050          LDR      r1,|L1.804|
0002d0  e5911000          LDR      r1,[r1,#0]            ;161  ; _MemoryPoolEnd
0002d4  e1500001          CMP      r0,r1                 ;161
0002d8  3a000005          BCC      |L1.756|
0002dc  e3a0a001          MOV      r10,#1                ;163
0002e0  e59f0038          LDR      r0,|L1.800|
0002e4  e5900000          LDR      r0,[r0,#0]            ;164  ; _MemoryPoolBase
0002e8  e59f1040          LDR      r1,|L1.816|
0002ec  e5810000          STR      r0,[r1,#0]            ;164  ; _pCurrent
0002f0  e3e07000          MVN      r7,#0                 ;165
                  |L1.756|
0002f4  e35a0000          CMP      r10,#0                ;168
0002f8  0affff7a          BEQ      |L1.232|
0002fc  e59f002c          LDR      r0,|L1.816|
000300  e5900000          LDR      r0,[r0,#0]            ;168  ; _pCurrent
000304  e1500009          CMP      r0,r9                 ;168
000308  3affff76          BCC      |L1.232|
00030c  e28f00b0          ADR      r0,|L1.964|
000310  ebfffffe          BL       sysprintf
000314  e3a00000          MOV      r0,#0                 ;171
000318  eaffff66          B        |L1.184|
                  |L1.796|
                          DCD      _YAFFSMemoryPool
                  |L1.800|
                          DCD      _MemoryPoolBase
                  |L1.804|
                          DCD      _MemoryPoolEnd
                  |L1.808|
                          DCD      _FreeMemorySize
                  |L1.812|
                          DCD      _AllocatedMemorySize
                  |L1.816|
                          DCD      _pCurrent
                  |L1.820|
000334  79616666          DCB      "yaffs_malloc - want=%d, free=%d\n",0
000338  735f6d61
00033c  6c6c6f63
000340  202d2077
000344  616e743d
000348  25642c20
00034c  66726565
000350  3d25640a
000354  00      
000355  00                DCB      0
000356  00                DCB      0
000357  00                DCB      0
                  |L1.856|
                          DCD      0x41090908
                  |L1.860|
                          DCD      ||.constdata||
                  |L1.864|
000360  5553425f          DCB      "USB_malloc warning - not the first block!\n",0
000364  6d616c6c
000368  6f632077
00036c  61726e69
000370  6e67202d
000374  206e6f74
000378  20746865
00037c  20666972
000380  73742062
000384  6c6f636b
000388  210a00  
00038b  00                DCB      0
                  |L1.908|
00038c  79616666          DCB      "yaffs_malloc - exceed limit!!\n",0
000390  735f6d61
000394  6c6c6f63
000398  202d2065
00039c  78636565
0003a0  64206c69
0003a4  6d697421
0003a8  210a00  
0003ab  00                DCB      0
                  |L1.940|
0003ac  79616666          DCB      "yaffs_malloc - warp!!\n",0
0003b0  735f6d61
0003b4  6c6c6f63
0003b8  202d2077
0003bc  61727021
0003c0  210a00  
0003c3  00                DCB      0
                  |L1.964|
0003c4  79616666          DCB      "yaffs_malloc - No free memory!\n",0
0003c8  735f6d61
0003cc  6c6c6f63
0003d0  202d204e
0003d4  6f206672
0003d8  6565206d
0003dc  656d6f72
0003e0  79210a00
                          ENDP

                  yaffs_free PROC
;;;173    
;;;174    void yaffs_free(void *ptr)
0003e4  e92d41f0          PUSH     {r4-r8,lr}
;;;175    {
0003e8  e1a07000          MOV      r7,r0
;;;176    // 	free(ptr);
;;;177    	YAFFS_MHDR_T  *pMblk;
;;;178    	unsigned int  addr = (unsigned int)ptr;
0003ec  e1a04007          MOV      r4,r7
;;;179    	int     i, count;
;;;180    
;;;181    	if ((addr < _MemoryPoolBase) || (addr >= _MemoryPoolEnd))
0003f0  e51f00d8          LDR      r0,|L1.800|
0003f4  e5900000          LDR      r0,[r0,#0]  ; _MemoryPoolBase
0003f8  e1540000          CMP      r4,r0
0003fc  3a000003          BCC      |L1.1040|
000400  e51f00e4          LDR      r0,|L1.804|
000404  e5900000          LDR      r0,[r0,#0]  ; _MemoryPoolEnd
000408  e1540000          CMP      r4,r0
00040c  3a000004          BCC      |L1.1060|
                  |L1.1040|
;;;182    	{
;;;183    		if (addr)
000410  e3540000          CMP      r4,#0
000414  0a000001          BEQ      |L1.1056|
;;;184    			free(ptr);
000418  e1a00007          MOV      r0,r7
00041c  ebfffffe          BL       free
                  |L1.1056|
;;;185    		return;
;;;186    	}
;;;187    
;;;188    	/* get the leading block address */
;;;189    	if (addr % YAFFS_MEM_BLOCK_SIZE == 0)
;;;190    		addr -= YAFFS_MEM_BLOCK_SIZE;
;;;191    	else
;;;192    		addr -= sizeof(YAFFS_MHDR_T);
;;;193    		
;;;194    	if (addr % YAFFS_MEM_BLOCK_SIZE != 0)
;;;195    	{
;;;196    		sysprintf("yaffs_free fatal error on address: %x!!\n", (unsigned int)ptr);
;;;197    		return;
;;;198    	}
;;;199    	
;;;200    	pMblk = (YAFFS_MHDR_T *)addr;
;;;201    	if (pMblk->flag == 0)
;;;202    	{
;;;203    		sysprintf("yaffs_free(), warning - try to free a free block: %x\n", (unsigned int)ptr);
;;;204    		return;
;;;205    	}
;;;206    	if (pMblk->magic != YAFFS_MEM_ALLOC_MAGIC)
;;;207    	{
;;;208    		sysprintf("yaffs_free(), warning - try to free an unknow block at address:%x.\n", addr);
;;;209    		return;
;;;210    	}
;;;211    
;;;212    	count = pMblk->bcnt;
;;;213    	for (i = 0; i < count; i++)
;;;214    	{
;;;215    		pMblk->flag = 0;     /* release block */
;;;216    		pMblk = (YAFFS_MHDR_T *)((unsigned int)pMblk + YAFFS_MEM_BLOCK_SIZE);
;;;217    	}
;;;218    
;;;219    	_FreeMemorySize += count * YAFFS_MEM_BLOCK_SIZE;
;;;220    	_AllocatedMemorySize -= count * YAFFS_MEM_BLOCK_SIZE;
;;;221    	return;
;;;222    }
000420  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1060|
000424  e1a00b84          LSL      r0,r4,#23             ;189
000428  e1b00ba0          LSRS     r0,r0,#23             ;189
00042c  1a000001          BNE      |L1.1080|
000430  e2444c02          SUB      r4,r4,#0x200          ;190
000434  ea000000          B        |L1.1084|
                  |L1.1080|
000438  e2444010          SUB      r4,r4,#0x10           ;192
                  |L1.1084|
00043c  e1a00b84          LSL      r0,r4,#23             ;194
000440  e1b00ba0          LSRS     r0,r0,#23             ;194
000444  0a000003          BEQ      |L1.1112|
000448  e1a01007          MOV      r1,r7                 ;196
00044c  e28f00f0          ADR      r0,|L1.1348|
000450  ebfffffe          BL       sysprintf
000454  eafffff1          B        |L1.1056|
                  |L1.1112|
000458  e1a05004          MOV      r5,r4                 ;200
00045c  e5950000          LDR      r0,[r5,#0]            ;201
000460  e3500000          CMP      r0,#0                 ;201
000464  1a000003          BNE      |L1.1144|
000468  e1a01007          MOV      r1,r7                 ;203
00046c  e28f00fc          ADR      r0,|L1.1392|
000470  ebfffffe          BL       sysprintf
000474  eaffffe9          B        |L1.1056|
                  |L1.1144|
000478  e5950008          LDR      r0,[r5,#8]            ;206
00047c  e51f112c          LDR      r1,|L1.856|
000480  e1500001          CMP      r0,r1                 ;206
000484  0a000003          BEQ      |L1.1176|
000488  e1a01004          MOV      r1,r4                 ;208
00048c  e59f0114          LDR      r0,|L1.1448|
000490  ebfffffe          BL       sysprintf
000494  eaffffe1          B        |L1.1056|
                  |L1.1176|
000498  e5956004          LDR      r6,[r5,#4]            ;212
00049c  e3a08000          MOV      r8,#0                 ;213
0004a0  ea000003          B        |L1.1204|
                  |L1.1188|
0004a4  e3a00000          MOV      r0,#0                 ;215
0004a8  e5850000          STR      r0,[r5,#0]            ;215
0004ac  e2855c02          ADD      r5,r5,#0x200          ;216
0004b0  e2888001          ADD      r8,r8,#1              ;213
                  |L1.1204|
0004b4  e1580006          CMP      r8,r6                 ;213
0004b8  bafffff9          BLT      |L1.1188|
0004bc  e51f019c          LDR      r0,|L1.808|
0004c0  e5900000          LDR      r0,[r0,#0]            ;219  ; _FreeMemorySize
0004c4  e0800486          ADD      r0,r0,r6,LSL #9       ;219
0004c8  e51f11a8          LDR      r1,|L1.808|
0004cc  e5810000          STR      r0,[r1,#0]            ;219  ; _FreeMemorySize
0004d0  e51f01ac          LDR      r0,|L1.812|
0004d4  e5900000          LDR      r0,[r0,#0]            ;220  ; _AllocatedMemorySize
0004d8  e0400486          SUB      r0,r0,r6,LSL #9       ;220
0004dc  e51f11b8          LDR      r1,|L1.812|
0004e0  e5810000          STR      r0,[r1,#0]            ;220  ; _AllocatedMemorySize
0004e4  e1a00000          MOV      r0,r0                 ;221
0004e8  eaffffcc          B        |L1.1056|
;;;223    
                          ENDP

                  yaffs_bug_fn PROC
;;;226    
;;;227    void yaffs_bug_fn(const char *fn, int n)
0004ec  e92d4070          PUSH     {r4-r6,lr}
;;;228    {
0004f0  e1a04000          MOV      r4,r0
0004f4  e1a05001          MOV      r5,r1
;;;229    	sysprintf("yaffs bug at %s:%d\n", fn, n);
0004f8  e1a02005          MOV      r2,r5
0004fc  e1a01004          MOV      r1,r4
000500  e28f00a4          ADR      r0,|L1.1452|
000504  ebfffffe          BL       sysprintf
;;;230    }
000508  e8bd8070          POP      {r4-r6,pc}
;;;231    
                          ENDP

                  yaffsfs_SetError PROC
;;;232    void yaffsfs_SetError(int err)
00050c  e59f10ac          LDR      r1,|L1.1472|
;;;233    {
;;;234    	yaffs_errno = err;
000510  e5810000          STR      r0,[r1,#0]  ; yaffs_errno
;;;235    }
000514  e12fff1e          BX       lr
;;;236    
                          ENDP

                  yaffsfs_GetLastError PROC
;;;237    int yaffsfs_GetLastError(void)
000518  e59f00a0          LDR      r0,|L1.1472|
;;;238    {
;;;239    	return yaffs_errno;
00051c  e5900000          LDR      r0,[r0,#0]  ; yaffs_errno
;;;240    }
000520  e12fff1e          BX       lr
;;;241    
                          ENDP

                  yaffsfs_GetError PROC
;;;242    
;;;243    int yaffsfs_GetError(void)
000524  e59f0094          LDR      r0,|L1.1472|
;;;244    {
;;;245    	return yaffs_errno;
000528  e5900000          LDR      r0,[r0,#0]  ; yaffs_errno
;;;246    }
00052c  e12fff1e          BX       lr
;;;247    
                          ENDP

                  yaffsfs_Lock PROC
;;;248    void yaffsfs_Lock(void)
000530  e12fff1e          BX       lr
;;;249    {
;;;250    }
;;;251    
                          ENDP

                  yaffsfs_Unlock PROC
;;;252    void yaffsfs_Unlock(void)
000534  e12fff1e          BX       lr
;;;253    {
;;;254    }
;;;255    
                          ENDP

                  yaffsfs_CurrentTime PROC
;;;256    uint32_t yaffsfs_CurrentTime(void)
000538  e3a00000          MOV      r0,#0
;;;257    {
;;;258    	return 0;
;;;259    }
00053c  e12fff1e          BX       lr
;;;260    
                          ENDP

                  yaffsfs_LocalInitialisation PROC
;;;261    
;;;262    void yaffsfs_LocalInitialisation(void)
000540  e12fff1e          BX       lr
;;;263    {
;;;264    	/* No locking used */
;;;265    }
;;;266    
                          ENDP

                  |L1.1348|
000544  79616666          DCB      "yaffs_free fatal error on address: %x!!\n",0
000548  735f6672
00054c  65652066
000550  6174616c
000554  20657272
000558  6f72206f
00055c  6e206164
000560  64726573
000564  733a2025
000568  7821210a
00056c  00      
00056d  00                DCB      0
00056e  00                DCB      0
00056f  00                DCB      0
                  |L1.1392|
000570  79616666          DCB      "yaffs_free(), warning - try to free a free block: %x\n",0
000574  735f6672
000578  65652829
00057c  2c207761
000580  726e696e
000584  67202d20
000588  74727920
00058c  746f2066
000590  72656520
000594  61206672
000598  65652062
00059c  6c6f636b
0005a0  3a202578
0005a4  0a00    
0005a6  00                DCB      0
0005a7  00                DCB      0
                  |L1.1448|
                          DCD      ||.constdata||+0x54
                  |L1.1452|
0005ac  79616666          DCB      "yaffs bug at %s:%d\n",0
0005b0  73206275
0005b4  67206174
0005b8  2025733a
0005bc  25640a00
                  |L1.1472|
                          DCD      yaffs_errno

                          AREA ||.bss||, DATA, NOINIT, ALIGN=9

                  _YAFFSMemoryPool
                          %        4194304

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  0a796166          DCB      0x0a,0x79,0x61,0x66
000004  66735f6d          DCB      0x66,0x73,0x5f,0x6d
000008  616c6c6f          DCB      0x61,0x6c,0x6c,0x6f
00000c  63202d20          DCB      0x63,0x20,0x2d,0x20
000010  696e636f          DCB      0x69,0x6e,0x63,0x6f
000014  72726563          DCB      0x72,0x72,0x65,0x63
000018  74206d61          DCB      0x74,0x20,0x6d,0x61
00001c  67696320          DCB      0x67,0x69,0x63,0x20
000020  6e756d62          DCB      0x6e,0x75,0x6d,0x62
000024  65722120          DCB      0x65,0x72,0x21,0x20
000028  433a2578          DCB      0x43,0x3a,0x25,0x78
00002c  20463a25          DCB      0x20,0x46,0x3a,0x25
000030  782c2077          DCB      0x78,0x2c,0x20,0x77
000034  616e7465          DCB      0x61,0x6e,0x74,0x65
000038  643a2564          DCB      0x64,0x3a,0x25,0x64
00003c  2c204261          DCB      0x2c,0x20,0x42,0x61
000040  73653a30          DCB      0x73,0x65,0x3a,0x30
000044  7825782c          DCB      0x78,0x25,0x78,0x2c
000048  20456e64          DCB      0x20,0x45,0x6e,0x64
00004c  3a307825          DCB      0x3a,0x30,0x78,0x25
000050  780a0000          DCB      0x78,0x0a,0x00,0x00
000054  79616666          DCB      0x79,0x61,0x66,0x66
000058  735f6672          DCB      0x73,0x5f,0x66,0x72
00005c  65652829          DCB      0x65,0x65,0x28,0x29
000060  2c207761          DCB      0x2c,0x20,0x77,0x61
000064  726e696e          DCB      0x72,0x6e,0x69,0x6e
000068  67202d20          DCB      0x67,0x20,0x2d,0x20
00006c  74727920          DCB      0x74,0x72,0x79,0x20
000070  746f2066          DCB      0x74,0x6f,0x20,0x66
000074  72656520          DCB      0x72,0x65,0x65,0x20
000078  616e2075          DCB      0x61,0x6e,0x20,0x75
00007c  6e6b6e6f          DCB      0x6e,0x6b,0x6e,0x6f
000080  7720626c          DCB      0x77,0x20,0x62,0x6c
000084  6f636b20          DCB      0x6f,0x63,0x6b,0x20
000088  61742061          DCB      0x61,0x74,0x20,0x61
00008c  64647265          DCB      0x64,0x64,0x72,0x65
000090  73733a25          DCB      0x73,0x73,0x3a,0x25
000094  782e0a00          DCB      0x78,0x2e,0x0a,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  yaffs_trace_mask
                          DCD      0x00000000
                  _YAFFS_pCurrent
                          DCD      _pCurrent
                  _pCurrent
                          DCD      0x00000000
                  _FreeMemorySize
                          DCD      0x00000000
                  _AllocatedMemorySize
                          DCD      0x00000000
                  _MemoryPoolBase
                          DCD      0x00000000
                  _MemoryPoolEnd
                          DCD      0x00000000
                  yaffs_errno
                          DCD      0x00000000
