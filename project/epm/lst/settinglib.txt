; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\settinglib.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\settinglib.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\settinglib.crf src\User\settinglib.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  getSettingChecksum PROC
;;;48     /*-----------------------------------------*/
;;;49     static uint16_t getSettingChecksum(uint8_t* pTarget, uint16_t len, char* str)
000000  e92d4030          PUSH     {r4,r5,lr}
;;;50     {
000004  e1a03000          MOV      r3,r0
000008  e1a0c001          MOV      r12,r1
00000c  e1a04002          MOV      r4,r2
;;;51         int i;
;;;52         uint16_t checksum = 0;
000010  e3a00000          MOV      r0,#0
;;;53         uint8_t* pr = (uint8_t*)pTarget;
000014  e1a02003          MOV      r2,r3
;;;54         for(i = 0; i< len - sizeof(uint16_t); i++) //???checksum ?????
000018  e3a01000          MOV      r1,#0
00001c  ea000004          B        |L1.52|
                  |L1.32|
;;;55         {
;;;56             checksum = checksum + pr[i];
000020  e7d25001          LDRB     r5,[r2,r1]
000024  e0855000          ADD      r5,r5,r0
000028  e1a00805          LSL      r0,r5,#16
00002c  e1a00820          LSR      r0,r0,#16
000030  e2811001          ADD      r1,r1,#1              ;54
                  |L1.52|
000034  e24c5002          SUB      r5,r12,#2             ;54
000038  e1550001          CMP      r5,r1                 ;54
00003c  8afffff7          BHI      |L1.32|
;;;57         }
;;;58         //sysprintf("  -- getSettingChecksum (%s) : checksum = 0x%x (%d)\r\n", str, checksum, checksum); 
;;;59         return checksum;
;;;60     }
000040  e8bd8030          POP      {r4,r5,pc}
;;;61     
                          ENDP

                  printSettingValue PROC
;;;419    
;;;420    void printSettingValue(char* str)
000044  e92d40f8          PUSH     {r3-r7,lr}
;;;421    {
000048  e1a05000          MOV      r5,r0
;;;422        int i;
;;;423        sysprintf("  \r\n"); 
00004c  e28f0e17          ADR      r0,|L1.452|
000050  ebfffffe          BL       sysprintf
;;;424        sysprintf("  - print SettingValue (%s) : version = %d, recordLen = %d, sizeof(MeterStorageData) = %d \r\n", str, meterStorageData.version, meterStorageData.recordLen, sizeof(MeterStorageData));
000054  e59f0170          LDR      r0,|L1.460|
000058  e59f1170          LDR      r1,|L1.464|
00005c  e58d0000          STR      r0,[sp,#0]
000060  e5d10002          LDRB     r0,[r1,#2]  ; meterStorageData
000064  e5d11001          LDRB     r1,[r1,#1]  ; meterStorageData
000068  e1813400          ORR      r3,r1,r0,LSL #8
00006c  e59f015c          LDR      r0,|L1.464|
000070  e5d02000          LDRB     r2,[r0,#0]  ; meterStorageData
000074  e1a01005          MOV      r1,r5
000078  e59f0154          LDR      r0,|L1.468|
00007c  ebfffffe          BL       sysprintf
;;;425        for(i = 0; i<EPM_TOTAL_METER_SPACE_NUM; i++)
000080  e3a04000          MOV      r4,#0
000084  ea000010          B        |L1.204|
                  |L1.136|
;;;426        {
;;;427            sysprintf("  - METER_SPACE_%02d : StartTime = %d \r\n", i, meterStorageData.depositStartTime[i]);
000088  e59f1148          LDR      r1,|L1.472|
00008c  e0810104          ADD      r0,r1,r4,LSL #2
000090  ebfffffe          BL       __aeabi_uread4
000094  e1a06000          MOV      r6,r0
000098  e1a02006          MOV      r2,r6
00009c  e1a01004          MOV      r1,r4
0000a0  e28f0f4d          ADR      r0,|L1.476|
0000a4  ebfffffe          BL       sysprintf
;;;428            sysprintf("  - METER_SPACE_%02d : EndTime = %d \r\n", i, meterStorageData.depositEndTime[i]);
0000a8  e59f1158          LDR      r1,|L1.520|
0000ac  e0810104          ADD      r0,r1,r4,LSL #2
0000b0  ebfffffe          BL       __aeabi_uread4
0000b4  e1a06000          MOV      r6,r0
0000b8  e1a02006          MOV      r2,r6
0000bc  e1a01004          MOV      r1,r4
0000c0  e28f0f51          ADR      r0,|L1.524|
0000c4  ebfffffe          BL       sysprintf
0000c8  e2844001          ADD      r4,r4,#1              ;425
                  |L1.204|
0000cc  e3540006          CMP      r4,#6                 ;425
0000d0  baffffec          BLT      |L1.136|
;;;429        }
;;;430        sysprintf("  - meterPosition  = %d, spaceEnableNum = %d \r\n", meterPara.meterPosition, meterPara.spaceEnableNum);    
0000d4  e59f0158          LDR      r0,|L1.564|
0000d8  ebfffffe          BL       __aeabi_uread4
0000dc  e1a06000          MOV      r6,r0
0000e0  e59f0150          LDR      r0,|L1.568|
0000e4  ebfffffe          BL       __aeabi_uread4
0000e8  e1a07000          MOV      r7,r0
0000ec  e1a02006          MOV      r2,r6
0000f0  e1a01007          MOV      r1,r7
0000f4  e28f0d05          ADR      r0,|L1.572|
0000f8  ebfffffe          BL       sysprintf
;;;431        sysprintf("  \r\n"); 
0000fc  e28f00c0          ADR      r0,|L1.452|
000100  ebfffffe          BL       sysprintf
;;;432    }
000104  e8bd80f8          POP      {r3-r7,pc}
;;;433    
                          ENDP

                  resetSettingValue PROC
;;;61     
;;;62     static void resetSettingValue(void)
000108  e92d4010          PUSH     {r4,lr}
;;;63     {
;;;64         //sysprintf("     reset SettingValue >>\r\n"); 
;;;65         memset(&meterStorageData, 0x0, sizeof(MeterStorageData));
00010c  e59f10b8          LDR      r1,|L1.460|
000110  e59f00b8          LDR      r0,|L1.464|
000114  ebfffffe          BL       __aeabi_memclr
;;;66         
;;;67         meterStorageData.version = SETTING_VERSION;
000118  e3a00001          MOV      r0,#1
00011c  e59f10ac          LDR      r1,|L1.464|
000120  e5c10000          STRB     r0,[r1,#0]  ; meterStorageData
;;;68         meterStorageData.recordLen = sizeof(MeterStorageData);    
000124  e59f10a0          LDR      r1,|L1.460|
000128  e59f00a0          LDR      r0,|L1.464|
00012c  e5c01001          STRB     r1,[r0,#1]  ; meterStorageData
000130  e1a01421          LSR      r1,r1,#8
000134  e5c01002          STRB     r1,[r0,#2]  ; meterStorageData
;;;69         
;;;70         //checksum    
;;;71         meterStorageData.checksum = getSettingChecksum((uint8_t*)&meterStorageData, sizeof(MeterStorageData), "Reset");   
000138  e28f2f4b          ADR      r2,|L1.620|
00013c  e59f1088          LDR      r1,|L1.460|
000140  ebfffffe          BL       getSettingChecksum
000144  e59f1084          LDR      r1,|L1.464|
000148  e5c101f5          STRB     r0,[r1,#0x1f5]  ; meterStorageData
00014c  e1a00420          LSR      r0,r0,#8
000150  e5c101f6          STRB     r0,[r1,#0x1f6]  ; meterStorageData
;;;72     
;;;73         printSettingValue("Reset");    
000154  e28f0e11          ADR      r0,|L1.620|
000158  ebfffffe          BL       printSettingValue
;;;74         //sysprintf("     <<  reset SettingValue\r\n"); 
;;;75     }
00015c  e8bd8010          POP      {r4,pc}
;;;76     static BOOL checkSettingValue(uint16_t versionSrc, uint16_t recordLenSrc, uint16_t checkSumSrc, uint16_t version, uint16_t recordLen, uint16_t checkSum, char* str)   
                          ENDP

                  checkSettingValue PROC
000160  e92d47f0          PUSH     {r4-r10,lr}
;;;77     {
000164  e1a04000          MOV      r4,r0
000168  e1a05001          MOV      r5,r1
00016c  e1a06002          MOV      r6,r2
000170  e1a07003          MOV      r7,r3
000174  e28da020          ADD      r10,sp,#0x20
000178  e89a0700          LDM      r10,{r8-r10}
;;;78         if(versionSrc != version)
00017c  e1540007          CMP      r4,r7
000180  0a000006          BEQ      |L1.416|
;;;79         {
;;;80             sysprintf("!!ERROR!! check %s SettingValue : version error  [%d:%d]\r\n", str, versionSrc, version); 
000184  e1a03007          MOV      r3,r7
000188  e1a02004          MOV      r2,r4
00018c  e1a0100a          MOV      r1,r10
000190  e28f00dc          ADR      r0,|L1.628|
000194  ebfffffe          BL       sysprintf
;;;81             return FALSE;
000198  e3a00000          MOV      r0,#0
                  |L1.412|
;;;82         }
;;;83         else if(recordLenSrc != recordLen)
;;;84         {
;;;85             sysprintf("!!ERROR!! check %s SettingValue : recordLen error  [%d:%d]\r\n", str, recordLenSrc, recordLen); 
;;;86             return FALSE;
;;;87         }
;;;88         else if(checkSumSrc != checkSum)
;;;89         {
;;;90             sysprintf("!!ERROR!! check %s SettingValue : checksum error  [%d:%d]\r\n", str, checkSumSrc, checkSum); 
;;;91             return FALSE;
;;;92         }
;;;93         return TRUE;
;;;94     }
00019c  e8bd87f0          POP      {r4-r10,pc}
                  |L1.416|
0001a0  e1550008          CMP      r5,r8                 ;83
0001a4  0a000051          BEQ      |L1.752|
0001a8  e1a03008          MOV      r3,r8                 ;85
0001ac  e1a02005          MOV      r2,r5                 ;85
0001b0  e1a0100a          MOV      r1,r10                ;85
0001b4  e28f00f4          ADR      r0,|L1.688|
0001b8  ebfffffe          BL       sysprintf
0001bc  e3a00000          MOV      r0,#0                 ;86
0001c0  eafffff5          B        |L1.412|
                  |L1.452|
0001c4  20200d0a          DCB      "  \r\n",0
0001c8  00      
0001c9  00                DCB      0
0001ca  00                DCB      0
0001cb  00                DCB      0
                  |L1.460|
                          DCD      0x000001f7
                  |L1.464|
                          DCD      meterStorageData
                  |L1.468|
                          DCD      ||.constdata||
                  |L1.472|
                          DCD      meterStorageData+0x3
                  |L1.476|
0001dc  20202d20          DCB      "  - METER_SPACE_%02d : StartTime = %d \r\n",0
0001e0  4d455445
0001e4  525f5350
0001e8  4143455f
0001ec  25303264
0001f0  203a2053
0001f4  74617274
0001f8  54696d65
0001fc  203d2025
000200  64200d0a
000204  00      
000205  00                DCB      0
000206  00                DCB      0
000207  00                DCB      0
                  |L1.520|
                          DCD      meterStorageData+0x1b
                  |L1.524|
00020c  20202d20          DCB      "  - METER_SPACE_%02d : EndTime = %d \r\n",0
000210  4d455445
000214  525f5350
000218  4143455f
00021c  25303264
000220  203a2045
000224  6e645469
000228  6d65203d
00022c  20256420
000230  0d0a00  
000233  00                DCB      0
                  |L1.564|
                          DCD      meterPara+0x6c
                  |L1.568|
                          DCD      meterPara+0x68
                  |L1.572|
00023c  20202d20          DCB      "  - meterPosition  = %d, spaceEnableNum = %d \r\n",0
000240  6d657465
000244  72506f73
000248  6974696f
00024c  6e20203d
000250  2025642c
000254  20737061
000258  6365456e
00025c  61626c65
000260  4e756d20
000264  3d202564
000268  200d0a00
                  |L1.620|
00026c  52657365          DCB      "Reset",0
000270  7400    
000272  00                DCB      0
000273  00                DCB      0
                  |L1.628|
000274  21214552          DCB      "!!ERROR!! check %s SettingValue : version error  [%d:%d"
000278  524f5221
00027c  21206368
000280  65636b20
000284  25732053
000288  65747469
00028c  6e675661
000290  6c756520
000294  3a207665
000298  7273696f
00029c  6e206572
0002a0  726f7220
0002a4  205b2564
0002a8  3a2564  
0002ab  5d0d0a00          DCB      "]\r\n",0
0002af  00                DCB      0
                  |L1.688|
0002b0  21214552          DCB      "!!ERROR!! check %s SettingValue : recordLen error  [%d:"
0002b4  524f5221
0002b8  21206368
0002bc  65636b20
0002c0  25732053
0002c4  65747469
0002c8  6e675661
0002cc  6c756520
0002d0  3a207265
0002d4  636f7264
0002d8  4c656e20
0002dc  6572726f
0002e0  7220205b
0002e4  25643a  
0002e7  25645d0d          DCB      "%d]\r\n",0
0002eb  0a00    
0002ed  00                DCB      0
0002ee  00                DCB      0
0002ef  00                DCB      0
                  |L1.752|
0002f0  e1560009          CMP      r6,r9                 ;88
0002f4  0a000006          BEQ      |L1.788|
0002f8  e1a03009          MOV      r3,r9                 ;90
0002fc  e1a02006          MOV      r2,r6                 ;90
000300  e1a0100a          MOV      r1,r10                ;90
000304  e28f0f52          ADR      r0,|L1.1108|
000308  ebfffffe          BL       sysprintf
00030c  e3a00000          MOV      r0,#0                 ;91
000310  eaffffa1          B        |L1.412|
                  |L1.788|
000314  e3a00001          MOV      r0,#1                 ;93
000318  eaffff9f          B        |L1.412|
;;;95     static void loadSettingValue(uint8_t* src, uint16_t len, char* str)
                          ENDP

                  loadSettingValue PROC
00031c  e92d41f0          PUSH     {r4-r8,lr}
;;;96     {
000320  e24ddd41          SUB      sp,sp,#0x1040
000324  e1a05000          MOV      r5,r0
000328  e1a04001          MOV      r4,r1
00032c  e1a06002          MOV      r6,r2
;;;97         sysprintf("     load %s SettingValue >>\r\n", str); 
000330  e1a01006          MOV      r1,r6
000334  e28f0f55          ADR      r0,|L1.1168|
000338  ebfffffe          BL       sysprintf
;;;98     #if(EPM_STORAGE_TYPE == STORAGE_TYPE_FATFS)
;;;99         FIL MyFile;
;;;100        FRESULT res;
;;;101        uint16_t NumByteToRead;
;;;102        NumByteToRead = len;
00033c  e58d4014          STR      r4,[sp,#0x14]
;;;103        memset(src, 0x0, len);
000340  e1a01004          MOV      r1,r4
000344  e1a00005          MOV      r0,r5
000348  ebfffffe          BL       __aeabi_memclr
;;;104        FRESULT reval = f_open(&MyFile, EPM_STORAGE_FILE_NAME, FA_READ);       
00034c  e3a02001          MOV      r2,#1
000350  e28f1f56          ADR      r1,|L1.1200|
000354  e28d0018          ADD      r0,sp,#0x18
000358  ebfffffe          BL       f_open
00035c  e1a08000          MOV      r8,r0
;;;105        if(reval != FR_OK) 
000360  e3580000          CMP      r8,#0
000364  0a000008          BEQ      |L1.908|
;;;106        {
;;;107            sysprintf("Cannot Open %s file for reading...\r\n", EPM_STORAGE_FILE_NAME); 
000368  e28f1d05          ADR      r1,|L1.1200|
00036c  e28f0e15          ADR      r0,|L1.1220|
000370  ebfffffe          BL       sysprintf
;;;108            if(reval == 16)
000374  e3580010          CMP      r8,#0x10
000378  1a000001          BNE      |L1.900|
;;;109            {
;;;110                sysprintf("return FR_LOCKED, close file...\n\r");
00037c  e28f0f5a          ADR      r0,|L1.1260|
000380  ebfffffe          BL       sysprintf
                  |L1.900|
;;;111            }
;;;112            return;
;;;113        }
;;;114        else
;;;115        {
;;;116            //sysprintf("INFO : Text written on the 'USBHost.txt' file \n");
;;;117                    
;;;118            res = f_read(&MyFile, src, len, (void *)&NumByteToRead);
;;;119            f_close(&MyFile);        
;;;120            if((NumByteToRead == 0) || (NumByteToRead != len) || (res != FR_OK)) /*EOF, len error or Error*/
;;;121            {
;;;122                sysprintf("Cannot Read from the  %s file... \r\n", EPM_STORAGE_FILE_NAME); 
;;;123                return;
;;;124            }
;;;125            else
;;;126            {
;;;127                //sysprintf("Read Text :<%s> \r\n", rtext);
;;;128                //sysprintf("INFO : f_read %d, bytesread = %d, time = %d\r\n", res, bytesread, nowTick - oriTick);
;;;129            }
;;;130            
;;;131        }
;;;132        //sysprintf("     << load %s SettingValue\r\n", str); 
;;;133    #elif(EPM_STORAGE_TYPE == STORAGE_TYPE_FLASH)
;;;134        pStorageInterface->readFunc(src, len);
;;;135    #endif
;;;136    }
000384  e28ddd41          ADD      sp,sp,#0x1040
000388  e8bd81f0          POP      {r4-r8,pc}
                  |L1.908|
00038c  e28d3014          ADD      r3,sp,#0x14           ;118
000390  e1a02004          MOV      r2,r4                 ;118
000394  e1a01005          MOV      r1,r5                 ;118
000398  e28d0018          ADD      r0,sp,#0x18           ;118
00039c  ebfffffe          BL       f_read
0003a0  e1a07000          MOV      r7,r0                 ;118
0003a4  e28d0018          ADD      r0,sp,#0x18           ;119
0003a8  ebfffffe          BL       f_close
0003ac  e1dd01b4          LDRH     r0,[sp,#0x14]         ;120
0003b0  e3500000          CMP      r0,#0                 ;120
0003b4  0a000004          BEQ      |L1.972|
0003b8  e1dd01b4          LDRH     r0,[sp,#0x14]         ;120
0003bc  e1500004          CMP      r0,r4                 ;120
0003c0  1a000001          BNE      |L1.972|
0003c4  e3570000          CMP      r7,#0                 ;120
0003c8  0a000003          BEQ      |L1.988|
                  |L1.972|
0003cc  e28f10dc          ADR      r1,|L1.1200|
0003d0  e28f0f4e          ADR      r0,|L1.1296|
0003d4  ebfffffe          BL       sysprintf
0003d8  eaffffe9          B        |L1.900|
                  |L1.988|
0003dc  e1a00000          MOV      r0,r0
0003e0  eaffffe7          B        |L1.900|
;;;137    static void saveSettingValue(uint8_t* src, uint16_t len, char* str)
                          ENDP

                  saveSettingValue PROC
0003e4  e92d41f0          PUSH     {r4-r8,lr}
;;;138    {
0003e8  e24ddd41          SUB      sp,sp,#0x1040
0003ec  e1a07000          MOV      r7,r0
0003f0  e1a04001          MOV      r4,r1
0003f4  e1a08002          MOV      r8,r2
;;;139        sysprintf("     save \"%s\" SettingValue (len = %d) >>\r\n", str, len); 
0003f8  e1a02004          MOV      r2,r4
0003fc  e1a01008          MOV      r1,r8
000400  e28f0f4b          ADR      r0,|L1.1332|
000404  ebfffffe          BL       sysprintf
;;;140    #if(EPM_STORAGE_TYPE == STORAGE_TYPE_FATFS)
;;;141        FIL MyFile;
;;;142        FRESULT res;
;;;143        uint32_t bytesWritten = 0;
000408  e3a01000          MOV      r1,#0
00040c  e58d1014          STR      r1,[sp,#0x14]
;;;144        FRESULT reval = f_open(&MyFile, EPM_STORAGE_FILE_NAME, FA_OPEN_ALWAYS | FA_WRITE);
000410  e3a02012          MOV      r2,#0x12
000414  e28f1094          ADR      r1,|L1.1200|
000418  e28d0018          ADD      r0,sp,#0x18
00041c  ebfffffe          BL       f_open
000420  e1a06000          MOV      r6,r0
;;;145        //sysprintf("f_open %s file return %d\n\r", FILE_NAME, reval);
;;;146        if(reval != FR_OK) 
000424  e3560000          CMP      r6,#0
000428  0a000059          BEQ      |L1.1428|
;;;147        {
;;;148            sysprintf("Cannot Open %s file for writing ( return %d)...\n\r", EPM_STORAGE_FILE_NAME, reval);
00042c  e1a02006          MOV      r2,r6
000430  e28f1078          ADR      r1,|L1.1200|
000434  e28f0f49          ADR      r0,|L1.1376|
000438  ebfffffe          BL       sysprintf
;;;149            if(reval == 16)
00043c  e3560010          CMP      r6,#0x10
000440  1a000001          BNE      |L1.1100|
;;;150            {
;;;151                sysprintf("return FR_LOCKED, close file...\n\r");
000444  e28f00a0          ADR      r0,|L1.1260|
000448  ebfffffe          BL       sysprintf
                  |L1.1100|
;;;152            }
;;;153            return;
;;;154        }
;;;155        else
;;;156        {
;;;157            res= f_write (&MyFile, src, len, (void *)&bytesWritten);             
;;;158            f_close(&MyFile);  
;;;159            sysprintf("INFO : f_write %d, bytesWritten = %d\r\n", res, bytesWritten);
;;;160            if((bytesWritten == 0) || (bytesWritten != len)  || (res != FR_OK)) /*EOF or Error*/
;;;161            {
;;;162                sysprintf("INFO : f_write res = %d, bytesWritten = %d\r\n", res, bytesWritten);
;;;163                sysprintf("Cannot Write on the  %s file... \r\n", EPM_STORAGE_FILE_NAME);
;;;164                return;
;;;165            }
;;;166            else
;;;167            {
;;;168            }
;;;169        }
;;;170    #elif(EPM_STORAGE_TYPE == STORAGE_TYPE_FLASH)
;;;171        pStorageInterface->writeFunc(src, len);
;;;172    #endif
;;;173    }
00044c  e28ddd41          ADD      sp,sp,#0x1040
000450  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1108|
000454  21214552          DCB      "!!ERROR!! check %s SettingValue : checksum error  [%d:%"
000458  524f5221
00045c  21206368
000460  65636b20
000464  25732053
000468  65747469
00046c  6e675661
000470  6c756520
000474  3a206368
000478  65636b73
00047c  756d2065
000480  72726f72
000484  20205b25
000488  643a25  
00048b  645d0d0a          DCB      "d]\r\n",0
00048f  00      
                  |L1.1168|
000490  20202020          DCB      "     load %s SettingValue >>\r\n",0
000494  206c6f61
000498  64202573
00049c  20536574
0004a0  74696e67
0004a4  56616c75
0004a8  65203e3e
0004ac  0d0a00  
0004af  00                DCB      0
                  |L1.1200|
0004b0  313a6570          DCB      "1:epmstorage.dat",0
0004b4  6d73746f
0004b8  72616765
0004bc  2e646174
0004c0  00      
0004c1  00                DCB      0
0004c2  00                DCB      0
0004c3  00                DCB      0
                  |L1.1220|
0004c4  43616e6e          DCB      "Cannot Open %s file for reading...\r\n",0
0004c8  6f74204f
0004cc  70656e20
0004d0  25732066
0004d4  696c6520
0004d8  666f7220
0004dc  72656164
0004e0  696e672e
0004e4  2e2e0d0a
0004e8  00      
0004e9  00                DCB      0
0004ea  00                DCB      0
0004eb  00                DCB      0
                  |L1.1260|
0004ec  72657475          DCB      "return FR_LOCKED, close file...\n\r",0
0004f0  726e2046
0004f4  525f4c4f
0004f8  434b4544
0004fc  2c20636c
000500  6f736520
000504  66696c65
000508  2e2e2e0a
00050c  0d00    
00050e  00                DCB      0
00050f  00                DCB      0
                  |L1.1296|
000510  43616e6e          DCB      "Cannot Read from the  %s file... \r\n",0
000514  6f742052
000518  65616420
00051c  66726f6d
000520  20746865
000524  20202573
000528  2066696c
00052c  652e2e2e
000530  200d0a00
                  |L1.1332|
000534  20202020          DCB      "     save ""%s"" SettingValue (len = %d) >>\r\n",0
000538  20736176
00053c  65202225
000540  73222053
000544  65747469
000548  6e675661
00054c  6c756520
000550  286c656e
000554  203d2025
000558  6429203e
00055c  3e0d0a00
                  |L1.1376|
000560  43616e6e          DCB      "Cannot Open %s file for writing ( return %d)...\n\r",0
000564  6f74204f
000568  70656e20
00056c  25732066
000570  696c6520
000574  666f7220
000578  77726974
00057c  696e6720
000580  28207265
000584  7475726e
000588  20256429
00058c  2e2e2e0a
000590  0d00    
000592  00                DCB      0
000593  00                DCB      0
                  |L1.1428|
000594  e28d3014          ADD      r3,sp,#0x14           ;157
000598  e1a02004          MOV      r2,r4                 ;157
00059c  e1a01007          MOV      r1,r7                 ;157
0005a0  e28d0018          ADD      r0,sp,#0x18           ;157
0005a4  ebfffffe          BL       f_write
0005a8  e1a05000          MOV      r5,r0                 ;157
0005ac  e28d0018          ADD      r0,sp,#0x18           ;158
0005b0  ebfffffe          BL       f_close
0005b4  e1a01005          MOV      r1,r5                 ;159
0005b8  e28f0c02          ADR      r0,|L1.1984|
0005bc  e59d2014          LDR      r2,[sp,#0x14]         ;159
0005c0  ebfffffe          BL       sysprintf
0005c4  e59d0014          LDR      r0,[sp,#0x14]         ;160
0005c8  e3500000          CMP      r0,#0                 ;160
0005cc  0a000004          BEQ      |L1.1508|
0005d0  e59d1014          LDR      r1,[sp,#0x14]         ;160
0005d4  e1510004          CMP      r1,r4                 ;160
0005d8  1a000001          BNE      |L1.1508|
0005dc  e3550000          CMP      r5,#0                 ;160
0005e0  0a000007          BEQ      |L1.1540|
                  |L1.1508|
0005e4  e1a01005          MOV      r1,r5                 ;162
0005e8  e28f0f7e          ADR      r0,|L1.2024|
0005ec  e59d2014          LDR      r2,[sp,#0x14]         ;162
0005f0  ebfffffe          BL       sysprintf
0005f4  e24f1f53          ADR      r1,|L1.1200|
0005f8  e28f0f86          ADR      r0,|L1.2072|
0005fc  ebfffffe          BL       sysprintf
000600  eaffff91          B        |L1.1100|
                  |L1.1540|
000604  e1a00000          MOV      r0,r0
000608  eaffff8f          B        |L1.1100|
;;;174    
                          ENDP

                  resetJsonSetting PROC
;;;175    static void resetJsonSetting(void)
00060c  e92d4010          PUSH     {r4,lr}
;;;176    {
;;;177        meterPara.jsonver = -1;
000610  e59f1224          LDR      r1,|L1.2108|
000614  e3e00000          MVN      r0,#0
000618  ebfffffe          BL       __aeabi_uwrite4
;;;178        meterPara.spaceEnableNum = EPM_DEFAULT_SPACE_ENABLE_NUM;
00061c  e51f13f0          LDR      r1,|L1.564|
000620  e3a00002          MOV      r0,#2
000624  ebfffffe          BL       __aeabi_uwrite4
;;;179        meterPara.meterPosition = EPM_DEFAULT_METER_POSITION;
000628  e51f13f8          LDR      r1,|L1.568|
00062c  e3a00001          MOV      r0,#1
000630  ebfffffe          BL       __aeabi_uwrite4
;;;180    }
000634  e8bd8010          POP      {r4,pc}
;;;181    
                          ENDP

                  loadJsonSetting PROC
;;;182    static BOOL loadJsonSetting(char* name)
000638  e92d5ff0          PUSH     {r4-r12,lr}
;;;183    {
00063c  e24ddd41          SUB      sp,sp,#0x1040
000640  e1a07000          MOV      r7,r0
;;;184        sysprintf("     load loadJsonSetting %s >>\r\n", name); 
000644  e1a01007          MOV      r1,r7
000648  e28f0e1f          ADR      r0,|L1.2112|
00064c  ebfffffe          BL       sysprintf
;;;185    #if(EPM_STORAGE_TYPE == STORAGE_TYPE_FATFS)
;;;186        FIL MyFile;
;;;187        FRESULT res;
;;;188        uint16_t NumByteToRead;
;;;189        uint8_t* pBuff;
;;;190        int buffLen;
;;;191        
;;;192         __SHOW_FREE_HEAP_SIZE__
000650  e3a010c0          MOV      r1,#0xc0
000654  e28f0f82          ADR      r0,|L1.2148|
000658  ebfffffe          BL       _showFreeHeapSize
;;;193        
;;;194        FRESULT reval = f_open(&MyFile, name, FA_READ);       
00065c  e3a02001          MOV      r2,#1
000660  e1a01007          MOV      r1,r7
000664  e28d0018          ADD      r0,sp,#0x18
000668  ebfffffe          BL       f_open
00066c  e1a0a000          MOV      r10,r0
;;;195        if(reval != FR_OK) 
000670  e35a0000          CMP      r10,#0
000674  0a000005          BEQ      |L1.1680|
;;;196        {
;;;197            sysprintf("Cannot Open %s file for reading...\r\n", EPM_STORAGE_FILE_NAME); 
000678  e24f1e1d          ADR      r1,|L1.1200|
00067c  e24f0d07          ADR      r0,|L1.1220|
000680  ebfffffe          BL       sysprintf
;;;198            return FALSE;
000684  e3a00000          MOV      r0,#0
                  |L1.1672|
000688  e28ddd41          ADD      sp,sp,#0x1040
;;;199        }
;;;200        else
;;;201        {
;;;202            //sysprintf("INFO : Text written on the 'USBHost.txt' file \n");
;;;203            buffLen = MyFile.fsize;
;;;204            if(buffLen > 0)
;;;205            {
;;;206                pBuff =  pvPortMalloc(buffLen);   
;;;207                if(pBuff != NULL)
;;;208                {                
;;;209                    res = f_read(&MyFile, pBuff, buffLen, (void *)&NumByteToRead);
;;;210                    f_close(&MyFile);        
;;;211                    if((NumByteToRead == 0) || (NumByteToRead != buffLen) || (res != FR_OK)) /*EOF, len error or Error*/
;;;212                    {
;;;213                        sysprintf("Cannot Read from the  %s file... \r\n", name); 
;;;214                        
;;;215                    }
;;;216                    else
;;;217                    {
;;;218                        cJSON *root_json = cJSON_Parse((char*)pBuff);
;;;219                        cJSON *tmp_json;
;;;220                        resetJsonSetting();
;;;221                        if (NULL == root_json)
;;;222                        {
;;;223                            sysprintf("error:%s\n", cJSON_GetErrorPtr());                        
;;;224                            goto jsonExit;
;;;225                        }
;;;226                        
;;;227                        tmp_json = cJSON_GetObjectItem(root_json, "jsonver");
;;;228                        if (tmp_json != NULL)
;;;229                        {
;;;230                            meterPara.jsonver = tmp_json->valueint;
;;;231                            sysprintf(" >> meterPara.jsonver:%d\n", meterPara.jsonver);
;;;232                            cJSON_Delete(tmp_json);
;;;233                        }
;;;234                        else
;;;235                        {
;;;236                            cJSON_Delete(root_json);
;;;237                            goto jsonExit;
;;;238                        }
;;;239                        
;;;240                        tmp_json = cJSON_GetObjectItem(root_json, "name");
;;;241                        if (tmp_json != NULL)
;;;242                        {
;;;243                            strcpy(meterPara.name, tmp_json->valuestring);
;;;244                            sysprintf(" >> meterPara.name:[%s]\n", meterPara.name);
;;;245                            cJSON_Delete(tmp_json);
;;;246                        }
;;;247                        else
;;;248                        {
;;;249                            cJSON_Delete(root_json);
;;;250                            goto jsonExit;
;;;251                        }
;;;252                        
;;;253                        tmp_json = cJSON_GetObjectItem(root_json, "epmid");
;;;254                        if (tmp_json != NULL)
;;;255                        {
;;;256                            //sysprintf(" >> 0x%04x, 0x%04x\n", (tmp_json->valueint), (uint16_t)(tmp_json->valueint));
;;;257                            meterPara.epmid = tmp_json->valueint;
;;;258                            sysprintf(" >> meterPara.epmid:%d\n", meterPara.epmid);
;;;259                            cJSON_Delete(tmp_json);
;;;260                        }
;;;261                        else
;;;262                        {
;;;263                            cJSON_Delete(root_json);
;;;264                            goto jsonExit;
;;;265                        }
;;;266                        
;;;267                        tmp_json = cJSON_GetObjectItem(root_json, "createtime");
;;;268                        if (tmp_json != NULL)
;;;269                        {
;;;270                            strcpy(meterPara.createTime, tmp_json->valuestring);
;;;271                            sysprintf(" >> meterPara.createTime:[%s]\n", meterPara.createTime);
;;;272                            cJSON_Delete(tmp_json);
;;;273                        }
;;;274                        else
;;;275                        {
;;;276                            cJSON_Delete(root_json);
;;;277                            goto jsonExit;
;;;278                        }
;;;279                        
;;;280                        tmp_json = cJSON_GetObjectItem(root_json, "modifytime");
;;;281                        if (tmp_json != NULL)
;;;282                        {
;;;283                            strcpy(meterPara.modifyTime, tmp_json->valuestring);
;;;284                            sysprintf(" >> meterPara.modifyTime:[%s]\n", meterPara.modifyTime);
;;;285                            cJSON_Delete(tmp_json);
;;;286                        }
;;;287                        else
;;;288                        {
;;;289                            cJSON_Delete(root_json);
;;;290                            goto jsonExit;
;;;291                        }
;;;292                        
;;;293                        tmp_json = cJSON_GetObjectItem(root_json, "spacenum");
;;;294                        if (tmp_json != NULL)
;;;295                        {
;;;296                            meterPara.spaceEnableNum = tmp_json->valueint;
;;;297                            sysprintf(" >> meterPara.spaceEnableNum:%d\n", meterPara.spaceEnableNum);
;;;298                            cJSON_Delete(tmp_json);
;;;299                        }
;;;300                        else
;;;301                        {
;;;302                            cJSON_Delete(root_json);
;;;303                            goto jsonExit;
;;;304                        }
;;;305                        
;;;306                        tmp_json = cJSON_GetObjectItem(root_json, "meterposition");
;;;307                        if (tmp_json != NULL)
;;;308                        {
;;;309                            meterPara.meterPosition = tmp_json->valueint;
;;;310                            sysprintf(" >> meterPara.meterPosition:%d\n", meterPara.meterPosition);
;;;311                            cJSON_Delete(tmp_json);
;;;312                        }
;;;313                        else
;;;314                        {
;;;315                            cJSON_Delete(root_json);
;;;316                            goto jsonExit;
;;;317                        }
;;;318                        cJSON_Delete(root_json);
;;;319                        vPortFree(pBuff);
;;;320                        
;;;321                         __SHOW_FREE_HEAP_SIZE__ 
;;;322                        return TRUE;
;;;323                    }
;;;324                    
;;;325                }
;;;326            }
;;;327            
;;;328        }
;;;329    jsonExit:
;;;330        if(pBuff != NULL)
;;;331            vPortFree(pBuff);
;;;332        
;;;333        __SHOW_FREE_HEAP_SIZE__ 
;;;334        return FALSE;
;;;335    
;;;336    #elif(EPM_STORAGE_TYPE == STORAGE_TYPE_FLASH)
;;;337        pStorageInterface->readFunc(src, len);
;;;338    #endif
;;;339    }
00068c  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.1680|
000690  e59d6024          LDR      r6,[sp,#0x24]         ;203
000694  e3560000          CMP      r6,#0                 ;204
000698  da0000fe          BLE      |L1.2712|
00069c  e1a00006          MOV      r0,r6                 ;206
0006a0  ebfffffe          BL       pvPortMalloc
0006a4  e1a05000          MOV      r5,r0                 ;206
0006a8  e3550000          CMP      r5,#0                 ;207
0006ac  0a0000f9          BEQ      |L1.2712|
0006b0  e28d3014          ADD      r3,sp,#0x14           ;209
0006b4  e1a02006          MOV      r2,r6                 ;209
0006b8  e1a01005          MOV      r1,r5                 ;209
0006bc  e28d0018          ADD      r0,sp,#0x18           ;209
0006c0  ebfffffe          BL       f_read
0006c4  e1a08000          MOV      r8,r0                 ;209
0006c8  e28d0018          ADD      r0,sp,#0x18           ;210
0006cc  ebfffffe          BL       f_close
0006d0  e1dd01b4          LDRH     r0,[sp,#0x14]         ;211
0006d4  e3500000          CMP      r0,#0                 ;211
0006d8  0a000004          BEQ      |L1.1776|
0006dc  e1dd11b4          LDRH     r1,[sp,#0x14]         ;211
0006e0  e1510006          CMP      r1,r6                 ;211
0006e4  1a000001          BNE      |L1.1776|
0006e8  e3580000          CMP      r8,#0                 ;211
0006ec  0a000003          BEQ      |L1.1792|
                  |L1.1776|
0006f0  e1a01007          MOV      r1,r7                 ;213
0006f4  e24f0f7b          ADR      r0,|L1.1296|
0006f8  ebfffffe          BL       sysprintf
0006fc  ea0000e3          B        |L1.2704|
                  |L1.1792|
000700  e1a00005          MOV      r0,r5                 ;218
000704  ebfffffe          BL       cJSON_Parse
000708  e1a09000          MOV      r9,r0                 ;218
00070c  ebfffffe          BL       resetJsonSetting
000710  e3590000          CMP      r9,#0                 ;221
000714  1a000005          BNE      |L1.1840|
000718  ebfffffe          BL       cJSON_GetErrorPtr
00071c  e1a0b000          MOV      r11,r0                ;223
000720  e1a0100b          MOV      r1,r11                ;223
000724  e28f0e15          ADR      r0,|L1.2172|
000728  ebfffffe          BL       sysprintf
00072c  ea0000da          B        |L1.2716|
                  |L1.1840|
000730  e28f1e15          ADR      r1,|L1.2184|
000734  e1a00009          MOV      r0,r9                 ;227
000738  ebfffffe          BL       cJSON_GetObjectItem
00073c  e1a04000          MOV      r4,r0                 ;227
000740  e3540000          CMP      r4,#0                 ;228
000744  0a00000b          BEQ      |L1.1912|
000748  e59f10ec          LDR      r1,|L1.2108|
00074c  e5940014          LDR      r0,[r4,#0x14]         ;230
000750  ebfffffe          BL       __aeabi_uwrite4
000754  e59f00e0          LDR      r0,|L1.2108|
000758  ebfffffe          BL       __aeabi_uread4
00075c  e1a0b000          MOV      r11,r0                ;231
000760  e1a0100b          MOV      r1,r11                ;231
000764  e28f0f49          ADR      r0,|L1.2192|
000768  ebfffffe          BL       sysprintf
00076c  e1a00004          MOV      r0,r4                 ;232
000770  ebfffffe          BL       cJSON_Delete
000774  ea000002          B        |L1.1924|
                  |L1.1912|
000778  e1a00009          MOV      r0,r9                 ;236
00077c  ebfffffe          BL       cJSON_Delete
000780  ea0000c5          B        |L1.2716|
                  |L1.1924|
000784  e28f1e12          ADR      r1,|L1.2220|
000788  e1a00009          MOV      r0,r9                 ;240
00078c  ebfffffe          BL       cJSON_GetObjectItem
000790  e1a04000          MOV      r4,r0                 ;240
000794  e3540000          CMP      r4,#0                 ;241
000798  0a00004d          BEQ      |L1.2260|
00079c  e59f0110          LDR      r0,|L1.2228|
0007a0  e5941010          LDR      r1,[r4,#0x10]         ;243
0007a4  ebfffffe          BL       strcpy
0007a8  e59f1104          LDR      r1,|L1.2228|
0007ac  e28f0f41          ADR      r0,|L1.2232|
0007b0  ebfffffe          BL       sysprintf
0007b4  e1a00004          MOV      r0,r4                 ;245
0007b8  ebfffffe          BL       cJSON_Delete
0007bc  ea000047          B        |L1.2272|
                  |L1.1984|
0007c0  494e464f          DCB      "INFO : f_write %d, bytesWritten = %d\r\n",0
0007c4  203a2066
0007c8  5f777269
0007cc  74652025
0007d0  642c2062
0007d4  79746573
0007d8  57726974
0007dc  74656e20
0007e0  3d202564
0007e4  0d0a00  
0007e7  00                DCB      0
                  |L1.2024|
0007e8  494e464f          DCB      "INFO : f_write res = %d, bytesWritten = %d\r\n",0
0007ec  203a2066
0007f0  5f777269
0007f4  74652072
0007f8  6573203d
0007fc  2025642c
000800  20627974
000804  65735772
000808  69747465
00080c  6e203d20
000810  25640d0a
000814  00      
000815  00                DCB      0
000816  00                DCB      0
000817  00                DCB      0
                  |L1.2072|
000818  43616e6e          DCB      "Cannot Write on the  %s file... \r\n",0
00081c  6f742057
000820  72697465
000824  206f6e20
000828  74686520
00082c  20257320
000830  66696c65
000834  2e2e2e20
000838  0d0a00  
00083b  00                DCB      0
                  |L1.2108|
                          DCD      meterPara
                  |L1.2112|
000840  20202020          DCB      "     load loadJsonSetting %s >>\r\n",0
000844  206c6f61
000848  64206c6f
00084c  61644a73
000850  6f6e5365
000854  7474696e
000858  67202573
00085c  203e3e0d
000860  0a00    
000862  00                DCB      0
000863  00                DCB      0
                  |L1.2148|
000864  7372635c          DCB      "src\\User\\settinglib.c",0
000868  55736572
00086c  5c736574
000870  74696e67
000874  6c69622e
000878  6300    
00087a  00                DCB      0
00087b  00                DCB      0
                  |L1.2172|
00087c  6572726f          DCB      "error:%s\n",0
000880  723a2573
000884  0a00    
000886  00                DCB      0
000887  00                DCB      0
                  |L1.2184|
000888  6a736f6e          DCB      "jsonver",0
00088c  76657200
                  |L1.2192|
000890  203e3e20          DCB      " >> meterPara.jsonver:%d\n",0
000894  6d657465
000898  72506172
00089c  612e6a73
0008a0  6f6e7665
0008a4  723a2564
0008a8  0a00    
0008aa  00                DCB      0
0008ab  00                DCB      0
                  |L1.2220|
0008ac  6e616d65          DCB      "name",0
0008b0  00      
0008b1  00                DCB      0
0008b2  00                DCB      0
0008b3  00                DCB      0
                  |L1.2228|
                          DCD      meterPara+0x8
                  |L1.2232|
0008b8  203e3e20          DCB      " >> meterPara.name:[%s]\n",0
0008bc  6d657465
0008c0  72506172
0008c4  612e6e61
0008c8  6d653a5b
0008cc  25735d0a
0008d0  00      
0008d1  00                DCB      0
0008d2  00                DCB      0
0008d3  00                DCB      0
                  |L1.2260|
0008d4  e1a00009          MOV      r0,r9                 ;249
0008d8  ebfffffe          BL       cJSON_Delete
0008dc  ea00006e          B        |L1.2716|
                  |L1.2272|
0008e0  e28f1f76          ADR      r1,|L1.2752|
0008e4  e1a00009          MOV      r0,r9                 ;253
0008e8  ebfffffe          BL       cJSON_GetObjectItem
0008ec  e1a04000          MOV      r4,r0                 ;253
0008f0  e3540000          CMP      r4,#0                 ;254
0008f4  0a00000b          BEQ      |L1.2344|
0008f8  e59f11c8          LDR      r1,|L1.2760|
0008fc  e5940014          LDR      r0,[r4,#0x14]         ;257
000900  ebfffffe          BL       __aeabi_uwrite4
000904  e59f01bc          LDR      r0,|L1.2760|
000908  ebfffffe          BL       __aeabi_uread4
00090c  e1a0b000          MOV      r11,r0                ;258
000910  e1a0100b          MOV      r1,r11                ;258
000914  e28f0e1b          ADR      r0,|L1.2764|
000918  ebfffffe          BL       sysprintf
00091c  e1a00004          MOV      r0,r4                 ;259
000920  ebfffffe          BL       cJSON_Delete
000924  ea000002          B        |L1.2356|
                  |L1.2344|
000928  e1a00009          MOV      r0,r9                 ;263
00092c  ebfffffe          BL       cJSON_Delete
000930  ea000059          B        |L1.2716|
                  |L1.2356|
000934  e28f1f6a          ADR      r1,|L1.2788|
000938  e1a00009          MOV      r0,r9                 ;267
00093c  ebfffffe          BL       cJSON_GetObjectItem
000940  e1a04000          MOV      r4,r0                 ;267
000944  e3540000          CMP      r4,#0                 ;268
000948  0a000008          BEQ      |L1.2416|
00094c  e59f019c          LDR      r0,|L1.2800|
000950  e5941010          LDR      r1,[r4,#0x10]         ;270
000954  ebfffffe          BL       strcpy
000958  e59f1190          LDR      r1,|L1.2800|
00095c  e28f0e19          ADR      r0,|L1.2804|
000960  ebfffffe          BL       sysprintf
000964  e1a00004          MOV      r0,r4                 ;272
000968  ebfffffe          BL       cJSON_Delete
00096c  ea000002          B        |L1.2428|
                  |L1.2416|
000970  e1a00009          MOV      r0,r9                 ;276
000974  ebfffffe          BL       cJSON_Delete
000978  ea000047          B        |L1.2716|
                  |L1.2428|
00097c  e28f1e19          ADR      r1,|L1.2836|
000980  e1a00009          MOV      r0,r9                 ;280
000984  ebfffffe          BL       cJSON_GetObjectItem
000988  e1a04000          MOV      r4,r0                 ;280
00098c  e3540000          CMP      r4,#0                 ;281
000990  0a000008          BEQ      |L1.2488|
000994  e59f0184          LDR      r0,|L1.2848|
000998  e5941010          LDR      r1,[r4,#0x10]         ;283
00099c  ebfffffe          BL       strcpy
0009a0  e59f1178          LDR      r1,|L1.2848|
0009a4  e28f0f5e          ADR      r0,|L1.2852|
0009a8  ebfffffe          BL       sysprintf
0009ac  e1a00004          MOV      r0,r4                 ;285
0009b0  ebfffffe          BL       cJSON_Delete
0009b4  ea000002          B        |L1.2500|
                  |L1.2488|
0009b8  e1a00009          MOV      r0,r9                 ;289
0009bc  ebfffffe          BL       cJSON_Delete
0009c0  ea000035          B        |L1.2716|
                  |L1.2500|
0009c4  e28f1f5e          ADR      r1,|L1.2884|
0009c8  e1a00009          MOV      r0,r9                 ;293
0009cc  ebfffffe          BL       cJSON_GetObjectItem
0009d0  e1a04000          MOV      r4,r0                 ;293
0009d4  e3540000          CMP      r4,#0                 ;294
0009d8  0a00000b          BEQ      |L1.2572|
0009dc  e51f17b0          LDR      r1,|L1.564|
0009e0  e5940014          LDR      r0,[r4,#0x14]         ;296
0009e4  ebfffffe          BL       __aeabi_uwrite4
0009e8  e51f07bc          LDR      r0,|L1.564|
0009ec  ebfffffe          BL       __aeabi_uread4
0009f0  e1a0b000          MOV      r11,r0                ;297
0009f4  e1a0100b          MOV      r1,r11                ;297
0009f8  e28f0e15          ADR      r0,|L1.2896|
0009fc  ebfffffe          BL       sysprintf
000a00  e1a00004          MOV      r0,r4                 ;298
000a04  ebfffffe          BL       cJSON_Delete
000a08  ea000002          B        |L1.2584|
                  |L1.2572|
000a0c  e1a00009          MOV      r0,r9                 ;302
000a10  ebfffffe          BL       cJSON_Delete
000a14  ea000020          B        |L1.2716|
                  |L1.2584|
000a18  e28f1f55          ADR      r1,|L1.2932|
000a1c  e1a00009          MOV      r0,r9                 ;306
000a20  ebfffffe          BL       cJSON_GetObjectItem
000a24  e1a04000          MOV      r4,r0                 ;306
000a28  e3540000          CMP      r4,#0                 ;307
000a2c  0a00000b          BEQ      |L1.2656|
000a30  e51f1800          LDR      r1,|L1.568|
000a34  e5940014          LDR      r0,[r4,#0x14]         ;309
000a38  ebfffffe          BL       __aeabi_uwrite4
000a3c  e51f080c          LDR      r0,|L1.568|
000a40  ebfffffe          BL       __aeabi_uread4
000a44  e1a0b000          MOV      r11,r0                ;310
000a48  e1a0100b          MOV      r1,r11                ;310
000a4c  e28f0e13          ADR      r0,|L1.2948|
000a50  ebfffffe          BL       sysprintf
000a54  e1a00004          MOV      r0,r4                 ;311
000a58  ebfffffe          BL       cJSON_Delete
000a5c  ea000002          B        |L1.2668|
                  |L1.2656|
000a60  e1a00009          MOV      r0,r9                 ;315
000a64  ebfffffe          BL       cJSON_Delete
000a68  ea00000b          B        |L1.2716|
                  |L1.2668|
000a6c  e1a00009          MOV      r0,r9                 ;318
000a70  ebfffffe          BL       cJSON_Delete
000a74  e1a00005          MOV      r0,r5                 ;319
000a78  ebfffffe          BL       vPortFree
000a7c  e59f1120          LDR      r1,|L1.2980|
000a80  e24f0f89          ADR      r0,|L1.2148|
000a84  ebfffffe          BL       _showFreeHeapSize
000a88  e3a00001          MOV      r0,#1                 ;322
000a8c  eafffefd          B        |L1.1672|
                  |L1.2704|
000a90  e1a00000          MOV      r0,r0                 ;323
000a94  e1a00000          MOV      r0,r0                 ;323
                  |L1.2712|
000a98  e1a00000          MOV      r0,r0                 ;329
                  |L1.2716|
000a9c  e3550000          CMP      r5,#0                 ;330
000aa0  0a000001          BEQ      |L1.2732|
000aa4  e1a00005          MOV      r0,r5                 ;331
000aa8  ebfffffe          BL       vPortFree
                  |L1.2732|
000aac  e59f10f4          LDR      r1,|L1.2984|
000ab0  e24f0f95          ADR      r0,|L1.2148|
000ab4  ebfffffe          BL       _showFreeHeapSize
000ab8  e3a00000          MOV      r0,#0                 ;334
000abc  eafffef1          B        |L1.1672|
                  |L1.2752|
000ac0  65706d69          DCB      "epmid",0
000ac4  6400    
000ac6  00                DCB      0
000ac7  00                DCB      0
                  |L1.2760|
                          DCD      meterPara+0x4
                  |L1.2764|
000acc  203e3e20          DCB      " >> meterPara.epmid:%d\n",0
000ad0  6d657465
000ad4  72506172
000ad8  612e6570
000adc  6d69643a
000ae0  25640a00
                  |L1.2788|
000ae4  63726561          DCB      "createtime",0
000ae8  74657469
000aec  6d6500  
000aef  00                DCB      0
                  |L1.2800|
                          DCD      meterPara+0x28
                  |L1.2804|
000af4  203e3e20          DCB      " >> meterPara.createTime:[%s]\n",0
000af8  6d657465
000afc  72506172
000b00  612e6372
000b04  65617465
000b08  54696d65
000b0c  3a5b2573
000b10  5d0a00  
000b13  00                DCB      0
                  |L1.2836|
000b14  6d6f6469          DCB      "modifytime",0
000b18  66797469
000b1c  6d6500  
000b1f  00                DCB      0
                  |L1.2848|
                          DCD      meterPara+0x48
                  |L1.2852|
000b24  203e3e20          DCB      " >> meterPara.modifyTime:[%s]\n",0
000b28  6d657465
000b2c  72506172
000b30  612e6d6f
000b34  64696679
000b38  54696d65
000b3c  3a5b2573
000b40  5d0a00  
000b43  00                DCB      0
                  |L1.2884|
000b44  73706163          DCB      "spacenum",0
000b48  656e756d
000b4c  00      
000b4d  00                DCB      0
000b4e  00                DCB      0
000b4f  00                DCB      0
                  |L1.2896|
000b50  203e3e20          DCB      " >> meterPara.spaceEnableNum:%d\n",0
000b54  6d657465
000b58  72506172
000b5c  612e7370
000b60  61636545
000b64  6e61626c
000b68  654e756d
000b6c  3a25640a
000b70  00      
000b71  00                DCB      0
000b72  00                DCB      0
000b73  00                DCB      0
                  |L1.2932|
000b74  6d657465          DCB      "meterposition",0
000b78  72706f73
000b7c  6974696f
000b80  6e00    
000b82  00                DCB      0
000b83  00                DCB      0
                  |L1.2948|
000b84  203e3e20          DCB      " >> meterPara.meterPosition:%d\n",0
000b88  6d657465
000b8c  72506172
000b90  612e6d65
000b94  74657250
000b98  6f736974
000b9c  696f6e3a
000ba0  25640a00
                  |L1.2980|
                          DCD      0x00000141
                  |L1.2984|
                          DCD      0x0000014d
                          ENDP

                  swInit PROC
;;;340    
;;;341    static BOOL swInit(void)
000bac  e92d40fe          PUSH     {r1-r7,lr}
;;;342    {   
;;;343        BOOL reVal = FALSE;
000bb0  e3a05000          MOV      r5,#0
;;;344        int retryTimes = 3;
000bb4  e3a04003          MOV      r4,#3
;;;345        sysprintf("\r\nSettingInit : sizeof(MeterStorageData) = %d...\r\n", sizeof(MeterStorageData)); 
000bb8  e2841f7d          ADD      r1,r4,#0x1f4
000bbc  e28f0f52          ADR      r0,|L1.3340|
000bc0  ebfffffe          BL       sysprintf
;;;346        
;;;347        if(loadJsonSetting(EPM_PARA_FILE_NAME) != TRUE)
000bc4  e28f0f5d          ADR      r0,|L1.3392|
000bc8  ebfffffe          BL       loadJsonSetting
000bcc  e3500001          CMP      r0,#1
000bd0  0a000001          BEQ      |L1.3036|
;;;348        {
;;;349            return FALSE;
000bd4  e3a00000          MOV      r0,#0
                  |L1.3032|
;;;350        }
;;;351        while(retryTimes != 0)
;;;352        {
;;;353            sysprintf("--INFO---  PowinSettingInit : %d  -----\r\n", retryTimes); 
;;;354            memset((uint8_t*)&meterStorageData, 0x0, sizeof(MeterStorageData));
;;;355            loadSettingValue((uint8_t*)&meterStorageData, sizeof(MeterStorageData), "Meter");
;;;356            
;;;357            //printSettingValue("Load"); 
;;;358            
;;;359            if(checkSettingValue(meterStorageData.version, meterStorageData.recordLen, meterStorageData.checksum, 
;;;360                        SETTING_VERSION, sizeof(MeterStorageData), getSettingChecksum((uint8_t*)&meterStorageData, sizeof(MeterStorageData), "Meter"), "Meter"))
;;;361            {
;;;362                //BOOL saveFlag = FALSE;
;;;363                printSettingValue("Load OK");
;;;364                sysprintf("#####  checkSettingValue: OK...\r\n");   
;;;365                reVal = TRUE;          
;;;366                break;
;;;367    
;;;368            }
;;;369            else
;;;370            {
;;;371                printSettingValue("Load ERROR");
;;;372                sysprintf("#####  checkSettingValue: ERROR...\r\n"); 
;;;373                resetSettingValue();
;;;374                saveSettingValue((uint8_t*)&meterStorageData, sizeof(MeterStorageData), "Meter");;
;;;375            }
;;;376            retryTimes--;
;;;377        }
;;;378        return reVal;
;;;379    }
000bd8  e8bd80fe          POP      {r1-r7,pc}
                  |L1.3036|
000bdc  ea000030          B        |L1.3236|
                  |L1.3040|
000be0  e1a01004          MOV      r1,r4                 ;353
000be4  e28f0e16          ADR      r0,|L1.3404|
000be8  ebfffffe          BL       sysprintf
000bec  e51f1a28          LDR      r1,|L1.460|
000bf0  e51f0a28          LDR      r0,|L1.464|
000bf4  ebfffffe          BL       __aeabi_memclr
000bf8  e28f2f5e          ADR      r2,|L1.3448|
000bfc  e51f1a38          LDR      r1,|L1.460|
000c00  e51f0a38          LDR      r0,|L1.464|
000c04  ebfffffe          BL       loadSettingValue
000c08  e28f2f5a          ADR      r2,|L1.3448|
000c0c  e51f1a48          LDR      r1,|L1.460|
000c10  e51f0a48          LDR      r0,|L1.464|
000c14  ebfffffe          BL       getSettingChecksum
000c18  e1a06000          MOV      r6,r0                 ;359
000c1c  e28f0f55          ADR      r0,|L1.3448|
000c20  e51f1a5c          LDR      r1,|L1.460|
000c24  e51fca5c          LDR      r12,|L1.464|
000c28  e58d0008          STR      r0,[sp,#8]            ;359
000c2c  e88d0042          STM      sp,{r1,r6}            ;359
000c30  e5dc31f6          LDRB     r3,[r12,#0x1f6]       ;359  ; meterStorageData
000c34  e5dcc1f5          LDRB     r12,[r12,#0x1f5]      ;359  ; meterStorageData
000c38  e18c2403          ORR      r2,r12,r3,LSL #8      ;359
000c3c  e51fca74          LDR      r12,|L1.464|
000c40  e5dc3002          LDRB     r3,[r12,#2]           ;359  ; meterStorageData
000c44  e5dcc001          LDRB     r12,[r12,#1]          ;359  ; meterStorageData
000c48  e18c1403          ORR      r1,r12,r3,LSL #8      ;359
000c4c  e51f3a84          LDR      r3,|L1.464|
000c50  e5d30000          LDRB     r0,[r3,#0]            ;359  ; meterStorageData
000c54  e3a03001          MOV      r3,#1                 ;359
000c58  ebfffffe          BL       checkSettingValue
000c5c  e3500000          CMP      r0,#0                 ;359
000c60  0a000005          BEQ      |L1.3196|
000c64  e28f0f45          ADR      r0,|L1.3456|
000c68  ebfffffe          BL       printSettingValue
000c6c  e28f0f45          ADR      r0,|L1.3464|
000c70  ebfffffe          BL       sysprintf
000c74  e3a05001          MOV      r5,#1                 ;365
000c78  ea00000b          B        |L1.3244|
                  |L1.3196|
000c7c  e28f0f4a          ADR      r0,|L1.3500|
000c80  ebfffffe          BL       printSettingValue
000c84  e28f0f4b          ADR      r0,|L1.3512|
000c88  ebfffffe          BL       sysprintf
000c8c  ebfffffe          BL       resetSettingValue
000c90  e28f20e0          ADR      r2,|L1.3448|
000c94  e51f1ad0          LDR      r1,|L1.460|
000c98  e51f0ad0          LDR      r0,|L1.464|
000c9c  ebfffffe          BL       saveSettingValue
000ca0  e2444001          SUB      r4,r4,#1              ;376
                  |L1.3236|
000ca4  e3540000          CMP      r4,#0                 ;351
000ca8  1affffcc          BNE      |L1.3040|
                  |L1.3244|
000cac  e1a00000          MOV      r0,r0                 ;366
000cb0  e1a00005          MOV      r0,r5                 ;378
000cb4  eaffffc7          B        |L1.3032|
;;;380    
                          ENDP

                  applySetting PROC
;;;381    static BOOL applySetting(void)
000cb8  e92d4070          PUSH     {r4-r6,lr}
;;;382    { 
;;;383        return calculatePreparePositionInfo(meterPara.meterPosition, meterPara.spaceEnableNum);
000cbc  e51f0a90          LDR      r0,|L1.564|
000cc0  ebfffffe          BL       __aeabi_uread4
000cc4  e20040ff          AND      r4,r0,#0xff
000cc8  e51f0a98          LDR      r0,|L1.568|
000ccc  ebfffffe          BL       __aeabi_uread4
000cd0  e20050ff          AND      r5,r0,#0xff
000cd4  e1a01004          MOV      r1,r4
000cd8  e1a00005          MOV      r0,r5
000cdc  ebfffffe          BL       calculatePreparePositionInfo
;;;384    }
000ce0  e8bd8070          POP      {r4-r6,pc}
;;;385        
                          ENDP

                  SettingLibInit PROC
;;;388    /*-----------------------------------------*/
;;;389    BOOL SettingLibInit(void)
000ce4  e92d4010          PUSH     {r4,lr}
;;;390    {
;;;391        sysprintf("SettingLibInit!!\n");
000ce8  e28f00f0          ADR      r0,|L1.3552|
000cec  ebfffffe          BL       sysprintf
;;;392    #if(EPM_STORAGE_TYPE == STORAGE_TYPE_FLASH)
;;;393        pStorageInterface = StorageGetInterface(STORAGE_FLASH_INTERFACE_INDEX);
;;;394        if(pStorageInterface == NULL)
;;;395        {
;;;396            sysprintf("SettingLibInit ERROR (pStorageInterface == NULL)!!\n");
;;;397            return FALSE;
;;;398        }
;;;399        if(pStorageInterface->initFunc() == FALSE)
;;;400        {
;;;401            sysprintf("SettingLibInit ERROR (initFunc false)!!\n");
;;;402            return FALSE;
;;;403        }
;;;404    #endif
;;;405        if(swInit() == FALSE)
000cf0  ebfffffe          BL       swInit
000cf4  e3500000          CMP      r0,#0
000cf8  1a000047          BNE      |L1.3612|
;;;406        {
;;;407            sysprintf("SettingLibInit ERROR (swInit false)!!\n");
000cfc  e28f00f0          ADR      r0,|L1.3572|
000d00  ebfffffe          BL       sysprintf
;;;408            return FALSE;
000d04  e3a00000          MOV      r0,#0
                  |L1.3336|
;;;409        }
;;;410        if(applySetting() == FALSE)
;;;411        {
;;;412            sysprintf("SettingLibInit ERROR (applySetting false)!!\n");
;;;413            return FALSE;
;;;414        }
;;;415        
;;;416        sysprintf("SettingLibInit OK!!\n");
;;;417        return TRUE;
;;;418    }
000d08  e8bd8010          POP      {r4,pc}
                  |L1.3340|
000d0c  0d0a5365          DCB      "\r\nSettingInit : sizeof(MeterStorageData) = %d...\r\n",0
000d10  7474696e
000d14  67496e69
000d18  74203a20
000d1c  73697a65
000d20  6f66284d
000d24  65746572
000d28  53746f72
000d2c  61676544
000d30  61746129
000d34  203d2025
000d38  642e2e2e
000d3c  0d0a00  
000d3f  00                DCB      0
                  |L1.3392|
000d40  303a6570          DCB      "0:epm.pre ",0
000d44  6d2e7072
000d48  652000  
000d4b  00                DCB      0
                  |L1.3404|
000d4c  2d2d494e          DCB      "--INFO---  PowinSettingInit : %d  -----\r\n",0
000d50  464f2d2d
000d54  2d202050
000d58  6f77696e
000d5c  53657474
000d60  696e6749
000d64  6e697420
000d68  3a202564
000d6c  20202d2d
000d70  2d2d2d0d
000d74  0a00    
000d76  00                DCB      0
000d77  00                DCB      0
                  |L1.3448|
000d78  4d657465          DCB      "Meter",0
000d7c  7200    
000d7e  00                DCB      0
000d7f  00                DCB      0
                  |L1.3456|
000d80  4c6f6164          DCB      "Load OK",0
000d84  204f4b00
                  |L1.3464|
000d88  23232323          DCB      "#####  checkSettingValue: OK...\r\n",0
000d8c  23202063
000d90  6865636b
000d94  53657474
000d98  696e6756
000d9c  616c7565
000da0  3a204f4b
000da4  2e2e2e0d
000da8  0a00    
000daa  00                DCB      0
000dab  00                DCB      0
                  |L1.3500|
000dac  4c6f6164          DCB      "Load ERROR",0
000db0  20455252
000db4  4f5200  
000db7  00                DCB      0
                  |L1.3512|
000db8  23232323          DCB      "#####  checkSettingValue: ERROR...\r\n",0
000dbc  23202063
000dc0  6865636b
000dc4  53657474
000dc8  696e6756
000dcc  616c7565
000dd0  3a204552
000dd4  524f522e
000dd8  2e2e0d0a
000ddc  00      
000ddd  00                DCB      0
000dde  00                DCB      0
000ddf  00                DCB      0
                  |L1.3552|
000de0  53657474          DCB      "SettingLibInit!!\n",0
000de4  696e674c
000de8  6962496e
000dec  69742121
000df0  0a00    
000df2  00                DCB      0
000df3  00                DCB      0
                  |L1.3572|
000df4  53657474          DCB      "SettingLibInit ERROR (swInit false)!!\n",0
000df8  696e674c
000dfc  6962496e
000e00  69742045
000e04  52524f52
000e08  20287377
000e0c  496e6974
000e10  2066616c
000e14  73652921
000e18  210a00  
000e1b  00                DCB      0
                  |L1.3612|
000e1c  ebfffffe          BL       applySetting
000e20  e3500000          CMP      r0,#0                 ;410
000e24  1a000003          BNE      |L1.3640|
000e28  e28f0e12          ADR      r0,|L1.3920|
000e2c  ebfffffe          BL       sysprintf
000e30  e3a00000          MOV      r0,#0                 ;413
000e34  eaffffb3          B        |L1.3336|
                  |L1.3640|
000e38  e28f0d05          ADR      r0,|L1.3968|
000e3c  ebfffffe          BL       sysprintf
000e40  e3a00001          MOV      r0,#1                 ;417
000e44  eaffffaf          B        |L1.3336|
;;;419    
                          ENDP

                  GetMeterPara PROC
;;;433    
;;;434    MeterPara* GetMeterPara(void)
000e48  e51f0614          LDR      r0,|L1.2108|
;;;435    {
;;;436        return &meterPara;
;;;437    }
000e4c  e12fff1e          BX       lr
;;;438    
                          ENDP

                  GetMeterStorageData PROC
;;;439    MeterStorageData* GetMeterStorageData(void)
000e50  e51f0c88          LDR      r0,|L1.464|
;;;440    {
;;;441        return &meterStorageData;
;;;442    }
000e54  e12fff1e          BX       lr
;;;443    void SettingFlush(void)
                          ENDP

                  SettingFlush PROC
000e58  e92d4010          PUSH     {r4,lr}
;;;444    {
;;;445        //checksum    
;;;446        meterStorageData.checksum = getSettingChecksum((uint8_t*)&meterStorageData, sizeof(MeterStorageData), "Reset");   
000e5c  e59f2134          LDR      r2,|L1.3992|
000e60  e51f1c9c          LDR      r1,|L1.460|
000e64  e51f0c9c          LDR      r0,|L1.464|
000e68  ebfffffe          BL       getSettingChecksum
000e6c  e51f1ca4          LDR      r1,|L1.464|
000e70  e5c101f5          STRB     r0,[r1,#0x1f5]  ; meterStorageData
000e74  e1a00420          LSR      r0,r0,#8
000e78  e5c101f6          STRB     r0,[r1,#0x1f6]  ; meterStorageData
;;;447        saveSettingValue((uint8_t*)&meterStorageData, sizeof(MeterStorageData), "SettingFlush");;
000e7c  e28f2f46          ADR      r2,|L1.3996|
000e80  e51f1cbc          LDR      r1,|L1.460|
000e84  e51f0cbc          LDR      r0,|L1.464|
000e88  ebfffffe          BL       saveSettingValue
;;;448    }
000e8c  e8bd8010          POP      {r4,pc}
;;;449    
                          ENDP

                  SettingSetMeterSpaceInfo PROC
;;;450    BOOL SettingSetMeterSpaceInfo(uint8_t meterPosition, uint8_t spaceEnableNum)
000e90  e92d4070          PUSH     {r4-r6,lr}
;;;451    {
000e94  e1a05000          MOV      r5,r0
000e98  e1a04001          MOV      r4,r1
;;;452        sysprintf(" --> SettingSetMeterSpaceInfo meterPosition = %d, spaceEnableNum = %d  enter\r\n", meterPosition, spaceEnableNum); 
000e9c  e1a02004          MOV      r2,r4
000ea0  e1a01005          MOV      r1,r5
000ea4  e59f0100          LDR      r0,|L1.4012|
000ea8  ebfffffe          BL       sysprintf
;;;453        if(calculatePreparePositionInfo(meterPosition, spaceEnableNum))
000eac  e1a01004          MOV      r1,r4
000eb0  e1a00005          MOV      r0,r5
000eb4  ebfffffe          BL       calculatePreparePositionInfo
000eb8  e3500000          CMP      r0,#0
000ebc  0a00000c          BEQ      |L1.3828|
;;;454        {
;;;455            meterPara.meterPosition = meterPosition;
000ec0  e51f1c90          LDR      r1,|L1.568|
000ec4  e1a00005          MOV      r0,r5
000ec8  ebfffffe          BL       __aeabi_uwrite4
;;;456            meterPara.spaceEnableNum = spaceEnableNum;
000ecc  e51f1ca0          LDR      r1,|L1.564|
000ed0  e1a00004          MOV      r0,r4
000ed4  ebfffffe          BL       __aeabi_uwrite4
;;;457            SettingFlush();
000ed8  ebfffffe          BL       SettingFlush
;;;458            sysprintf("!!! SettingSetMeterSpaceInfo OK meterPosition  = %d, spaceEnableNum = %d \r\n", meterPosition, spaceEnableNum); 
000edc  e1a02004          MOV      r2,r4
000ee0  e1a01005          MOV      r1,r5
000ee4  e59f00c4          LDR      r0,|L1.4016|
000ee8  ebfffffe          BL       sysprintf
;;;459            return TRUE;        
000eec  e3a00001          MOV      r0,#1
                  |L1.3824|
;;;460        }
;;;461        else
;;;462        {
;;;463            sysprintf("!!! SettingSetMeterSpaceInfo ERROR meterPosition  = %d, spaceEnableNum = %d \r\n", meterPosition, spaceEnableNum);   
;;;464            return FALSE;
;;;465        }
;;;466    }
000ef0  e8bd8070          POP      {r4-r6,pc}
                  |L1.3828|
000ef4  e1a02004          MOV      r2,r4                 ;463
000ef8  e1a01005          MOV      r1,r5                 ;463
000efc  e59f00b0          LDR      r0,|L1.4020|
000f00  ebfffffe          BL       sysprintf
000f04  e3a00000          MOV      r0,#0                 ;464
000f08  eafffff8          B        |L1.3824|
;;;467    
                          ENDP

                  SettingResetDepositEndTime PROC
;;;468    void SettingResetDepositEndTime(void)
000f0c  e92d4010          PUSH     {r4,lr}
;;;469    {
;;;470        int i;
;;;471        sysprintf(" -- !!! SettingResetDepositEndTime  --\r\n"); 
000f10  e28f00a0          ADR      r0,|L1.4024|
000f14  ebfffffe          BL       sysprintf
;;;472        for(i = 0; i<EPM_TOTAL_METER_SPACE_NUM; i++)
000f18  e3a04000          MOV      r4,#0
000f1c  ea000008          B        |L1.3908|
                  |L1.3872|
;;;473        {
;;;474            meterStorageData.depositStartTime[i] = 0;
000f20  e51f0d50          LDR      r0,|L1.472|
000f24  e0801104          ADD      r1,r0,r4,LSL #2
000f28  e3a00000          MOV      r0,#0
000f2c  ebfffffe          BL       __aeabi_uwrite4
;;;475            meterStorageData.depositEndTime[i] = 0;
000f30  e51f0d30          LDR      r0,|L1.520|
000f34  e0801104          ADD      r1,r0,r4,LSL #2
000f38  e3a00000          MOV      r0,#0
000f3c  ebfffffe          BL       __aeabi_uwrite4
000f40  e2844001          ADD      r4,r4,#1              ;472
                  |L1.3908|
000f44  e3540006          CMP      r4,#6                 ;472
000f48  bafffff4          BLT      |L1.3872|
;;;476        }
;;;477    }
000f4c  e8bd8010          POP      {r4,pc}
;;;478    
                          ENDP

                  |L1.3920|
000f50  53657474          DCB      "SettingLibInit ERROR (applySetting false)!!\n",0
000f54  696e674c
000f58  6962496e
000f5c  69742045
000f60  52524f52
000f64  20286170
000f68  706c7953
000f6c  65747469
000f70  6e672066
000f74  616c7365
000f78  2921210a
000f7c  00      
000f7d  00                DCB      0
000f7e  00                DCB      0
000f7f  00                DCB      0
                  |L1.3968|
000f80  53657474          DCB      "SettingLibInit OK!!\n",0
000f84  696e674c
000f88  6962496e
000f8c  6974204f
000f90  4b21210a
000f94  00      
000f95  00                DCB      0
000f96  00                DCB      0
000f97  00                DCB      0
                  |L1.3992|
                          DCD      ||.text||+0x26c
                  |L1.3996|
000f9c  53657474          DCB      "SettingFlush",0
000fa0  696e6746
000fa4  6c757368
000fa8  00      
000fa9  00                DCB      0
000faa  00                DCB      0
000fab  00                DCB      0
                  |L1.4012|
                          DCD      ||.constdata||+0x60
                  |L1.4016|
                          DCD      ||.constdata||+0xb0
                  |L1.4020|
                          DCD      ||.constdata||+0xfc
                  |L1.4024|
000fb8  202d2d20          DCB      " -- !!! SettingResetDepositEndTime  --\r\n",0
000fbc  21212120
000fc0  53657474
000fc4  696e6752
000fc8  65736574
000fcc  4465706f
000fd0  73697445
000fd4  6e645469
000fd8  6d652020
000fdc  2d2d0d0a
000fe0  00      
000fe1  00                DCB      0
000fe2  00                DCB      0
000fe3  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  meterPara
                          %        128
                  meterStorageData
                          %        503

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  20202d20          DCB      0x20,0x20,0x2d,0x20
000004  7072696e          DCB      0x70,0x72,0x69,0x6e
000008  74205365          DCB      0x74,0x20,0x53,0x65
00000c  7474696e          DCB      0x74,0x74,0x69,0x6e
000010  6756616c          DCB      0x67,0x56,0x61,0x6c
000014  75652028          DCB      0x75,0x65,0x20,0x28
000018  25732920          DCB      0x25,0x73,0x29,0x20
00001c  3a207665          DCB      0x3a,0x20,0x76,0x65
000020  7273696f          DCB      0x72,0x73,0x69,0x6f
000024  6e203d20          DCB      0x6e,0x20,0x3d,0x20
000028  25642c20          DCB      0x25,0x64,0x2c,0x20
00002c  7265636f          DCB      0x72,0x65,0x63,0x6f
000030  72644c65          DCB      0x72,0x64,0x4c,0x65
000034  6e203d20          DCB      0x6e,0x20,0x3d,0x20
000038  25642c20          DCB      0x25,0x64,0x2c,0x20
00003c  73697a65          DCB      0x73,0x69,0x7a,0x65
000040  6f66284d          DCB      0x6f,0x66,0x28,0x4d
000044  65746572          DCB      0x65,0x74,0x65,0x72
000048  53746f72          DCB      0x53,0x74,0x6f,0x72
00004c  61676544          DCB      0x61,0x67,0x65,0x44
000050  61746129          DCB      0x61,0x74,0x61,0x29
000054  203d2025          DCB      0x20,0x3d,0x20,0x25
000058  64200d0a          DCB      0x64,0x20,0x0d,0x0a
00005c  00000000          DCB      0x00,0x00,0x00,0x00
000060  202d2d3e          DCB      0x20,0x2d,0x2d,0x3e
000064  20536574          DCB      0x20,0x53,0x65,0x74
000068  74696e67          DCB      0x74,0x69,0x6e,0x67
00006c  5365744d          DCB      0x53,0x65,0x74,0x4d
000070  65746572          DCB      0x65,0x74,0x65,0x72
000074  53706163          DCB      0x53,0x70,0x61,0x63
000078  65496e66          DCB      0x65,0x49,0x6e,0x66
00007c  6f206d65          DCB      0x6f,0x20,0x6d,0x65
000080  74657250          DCB      0x74,0x65,0x72,0x50
000084  6f736974          DCB      0x6f,0x73,0x69,0x74
000088  696f6e20          DCB      0x69,0x6f,0x6e,0x20
00008c  3d202564          DCB      0x3d,0x20,0x25,0x64
000090  2c207370          DCB      0x2c,0x20,0x73,0x70
000094  61636545          DCB      0x61,0x63,0x65,0x45
000098  6e61626c          DCB      0x6e,0x61,0x62,0x6c
00009c  654e756d          DCB      0x65,0x4e,0x75,0x6d
0000a0  203d2025          DCB      0x20,0x3d,0x20,0x25
0000a4  64202065          DCB      0x64,0x20,0x20,0x65
0000a8  6e746572          DCB      0x6e,0x74,0x65,0x72
0000ac  0d0a0000          DCB      0x0d,0x0a,0x00,0x00
0000b0  21212120          DCB      0x21,0x21,0x21,0x20
0000b4  53657474          DCB      0x53,0x65,0x74,0x74
0000b8  696e6753          DCB      0x69,0x6e,0x67,0x53
0000bc  65744d65          DCB      0x65,0x74,0x4d,0x65
0000c0  74657253          DCB      0x74,0x65,0x72,0x53
0000c4  70616365          DCB      0x70,0x61,0x63,0x65
0000c8  496e666f          DCB      0x49,0x6e,0x66,0x6f
0000cc  204f4b20          DCB      0x20,0x4f,0x4b,0x20
0000d0  6d657465          DCB      0x6d,0x65,0x74,0x65
0000d4  72506f73          DCB      0x72,0x50,0x6f,0x73
0000d8  6974696f          DCB      0x69,0x74,0x69,0x6f
0000dc  6e20203d          DCB      0x6e,0x20,0x20,0x3d
0000e0  2025642c          DCB      0x20,0x25,0x64,0x2c
0000e4  20737061          DCB      0x20,0x73,0x70,0x61
0000e8  6365456e          DCB      0x63,0x65,0x45,0x6e
0000ec  61626c65          DCB      0x61,0x62,0x6c,0x65
0000f0  4e756d20          DCB      0x4e,0x75,0x6d,0x20
0000f4  3d202564          DCB      0x3d,0x20,0x25,0x64
0000f8  200d0a00          DCB      0x20,0x0d,0x0a,0x00
0000fc  21212120          DCB      0x21,0x21,0x21,0x20
000100  53657474          DCB      0x53,0x65,0x74,0x74
000104  696e6753          DCB      0x69,0x6e,0x67,0x53
000108  65744d65          DCB      0x65,0x74,0x4d,0x65
00010c  74657253          DCB      0x74,0x65,0x72,0x53
000110  70616365          DCB      0x70,0x61,0x63,0x65
000114  496e666f          DCB      0x49,0x6e,0x66,0x6f
000118  20455252          DCB      0x20,0x45,0x52,0x52
00011c  4f52206d          DCB      0x4f,0x52,0x20,0x6d
000120  65746572          DCB      0x65,0x74,0x65,0x72
000124  506f7369          DCB      0x50,0x6f,0x73,0x69
000128  74696f6e          DCB      0x74,0x69,0x6f,0x6e
00012c  20203d20          DCB      0x20,0x20,0x3d,0x20
000130  25642c20          DCB      0x25,0x64,0x2c,0x20
000134  73706163          DCB      0x73,0x70,0x61,0x63
000138  65456e61          DCB      0x65,0x45,0x6e,0x61
00013c  626c654e          DCB      0x62,0x6c,0x65,0x4e
000140  756d203d          DCB      0x75,0x6d,0x20,0x3d
000144  20256420          DCB      0x20,0x25,0x64,0x20
000148  0d0a00            DCB      0x0d,0x0a,0x00
