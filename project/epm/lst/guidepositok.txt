; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\guidepositok.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\guidepositok.d --cpu=ARM926EJ-S --apcs=interwork -O0 -I.\src -I..\..\common\src\BSP\Driver\Include -I..\..\common\src\FreeRTOS -I..\..\common\src\FreeRTOS\Source\include -I..\..\common\src\FreeRTOS\Source\portable\RVDS\ARM926EJ-S -I..\..\common\src\BSP\ThirdParty\FATFS\src -I.\src\userdrv -I.\src\syshal -I.\src\user -I.\src\userdrv\vl53l0x\core\inc -I.\src\userdrv\vl53l0x\platform\inc -I.\src\syshal\json -I.\src\syshal\modemlib -I..\..\common\src\BSP\ThirdParty\yaffs2 -I..\..\common\src\BSP\ThirdParty\yaffs2\include -I..\..\common\src\BSP\ThirdParty\yaffs2\include\asm -I..\..\common\src\BSP\ThirdParty\yaffs2\include\linux -I.\src\syshal\yaffs2 -I..\..\common\src\BSP\Library\SmartcardLib\Include -I.\src\syshal\cardlib -I.\src\syshal\cardlog -I.\src\syshal\blk -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DEPM_PROJECT -DCONFIG_YAFFS_DIRECT -DCONFIG_YAFFS_SHORT_NAMES_IN_RAM -DCONFIG_YAFFS_YAFFS2 -DNO_Y_INLINE -DCONFIG_YAFFS_PROVIDE_DEFS -DCONFIG_YAFFSFS_PROVIDE_VALUES --omf_browse=.\obj\guidepositok.crf src\User\guidepositok.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  updateBG PROC
;;;52     /*-----------------------------------------*/
;;;53     static void updateBG(void)
000000  e92d4070          PUSH     {r4-r6,lr}
;;;54     {
;;;55         TickType_t tickLocalStart = xTaskGetTickCount();
000004  ebfffffe          BL       xTaskGetTickCount
000008  e1a04000          MOV      r4,r0
;;;56         //sysprintf(" [INFO GUI] <DepositOK> updateBG enter: cost ticks = [%d]\n", xTaskGetTickCount() - tickStart);   
;;;57         EPDDrawContainByID(FALSE, EPD_PICT_CONTAIN_DEPOSIT_OK_INDEX); 
00000c  e3a01095          MOV      r1,#0x95
000010  e3a00000          MOV      r0,#0
000014  ebfffffe          BL       EPDDrawContainByID
;;;58         EPDDrawCost(TRUE, balanceMoney); 
000018  e59f0214          LDR      r0,|L1.564|
00001c  e1d010b0          LDRH     r1,[r0,#0]  ; balanceMoney
000020  e3a00001          MOV      r0,#1
000024  ebfffffe          BL       EPDDrawCost
;;;59         sysprintf(" [INFO GUI] <DepositOK> updateBG: **Local:[%d]**, **[%d]**\n", xTaskGetTickCount() - tickLocalStart, xTaskGetTickCount() - tickStart);    
000028  ebfffffe          BL       xTaskGetTickCount
00002c  e59f1204          LDR      r1,|L1.568|
000030  e5911000          LDR      r1,[r1,#0]  ; tickStart
000034  e0405001          SUB      r5,r0,r1
000038  ebfffffe          BL       xTaskGetTickCount
00003c  e0406004          SUB      r6,r0,r4
000040  e1a02005          MOV      r2,r5
000044  e1a01006          MOV      r1,r6
000048  e28f0f7b          ADR      r0,|L1.572|
00004c  ebfffffe          BL       sysprintf
;;;60      
;;;61     }
000050  e8bd8070          POP      {r4-r6,pc}
;;;62     
                          ENDP

                  GuiDepositOKOnDraw PROC
;;;65     /*-----------------------------------------*/
;;;66     BOOL GuiDepositOKOnDraw(uint8_t oriGuiId, uint8_t reFreshPara, int para2, int para3)
000054  e92d40f8          PUSH     {r3-r7,lr}
;;;67     {
000058  e1a05000          MOV      r5,r0
00005c  e1a06001          MOV      r6,r1
000060  e1a04002          MOV      r4,r2
000064  e1a07003          MOV      r7,r3
;;;68         tickStart = xTaskGetTickCount();
000068  ebfffffe          BL       xTaskGetTickCount
00006c  e59f11c4          LDR      r1,|L1.568|
000070  e5810000          STR      r0,[r1,#0]  ; tickStart
;;;69         sysprintf(" [INFO GUI] <DepositOK> OnDraw (from GuiId = %d, reFreshPara = %d, para2 = %d, para3 = %d)\n", oriGuiId, reFreshPara, para2, para3);
000074  e1a03004          MOV      r3,r4
000078  e1a02006          MOV      r2,r6
00007c  e1a01005          MOV      r1,r5
000080  e59f01f0          LDR      r0,|L1.632|
000084  e58d7000          STR      r7,[sp,#0]
000088  ebfffffe          BL       sysprintf
;;;70         powerStatus = FALSE;
00008c  e3a00000          MOV      r0,#0
000090  e59f11e4          LDR      r1,|L1.636|
000094  e5c10000          STRB     r0,[r1,#0]  ; powerStatus
;;;71         pGuiGetInterface = GuiGetInterface();
000098  ebfffffe          BL       GuiGetInterface
00009c  e59f11dc          LDR      r1,|L1.640|
0000a0  e5810000          STR      r0,[r1,#0]  ; pGuiGetInterface
;;;72         pGuiGetInterface->setTimeoutFunc(UPDATE_BG_TIMER, UPDATE_BG_INTERVAL);  
0000a4  e2810000          ADD      r0,r1,#0
0000a8  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
0000ac  e3e01000          MVN      r1,#0
0000b0  e590200c          LDR      r2,[r0,#0xc]
0000b4  e3a00000          MOV      r0,#0
0000b8  e12fff32          BLX      r2
;;;73         //pGuiGetInterface->setTimeoutFunc(CHECK_READER_TIMER, UPDATE_DATA_INTERVAL);
;;;74         pGuiGetInterface->setTimeoutFunc(EXIT_TIMER, EXIT_INTERVAL);  
0000bc  e59f01bc          LDR      r0,|L1.640|
0000c0  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
0000c4  e3a01f4b          MOV      r1,#0x12c
0000c8  e590200c          LDR      r2,[r0,#0xc]
0000cc  e3a00002          MOV      r0,#2
0000d0  e12fff32          BLX      r2
;;;75             
;;;76         balanceMoney = para2;
0000d4  e59f1158          LDR      r1,|L1.564|
0000d8  e1c140b0          STRH     r4,[r1,#0]  ; balanceMoney
;;;77         pGuiGetInterface->runTimeoutFunc(UPDATE_BG_TIMER);//更新畫面
0000dc  e59f019c          LDR      r0,|L1.640|
0000e0  e5900000          LDR      r0,[r0,#0]  ; pGuiGetInterface
0000e4  e5901010          LDR      r1,[r0,#0x10]
0000e8  e3a00000          MOV      r0,#0
0000ec  e12fff31          BLX      r1
;;;78         //sysprintf(" [INFO GUI] <DepositOK> OnDraw exit: cost ticks = %d\n", xTaskGetTickCount() - tickStart);
;;;79         return TRUE;
0000f0  e3a00001          MOV      r0,#1
;;;80     }
0000f4  e8bd80f8          POP      {r3-r7,pc}
;;;81     BOOL GuiDepositOKKeyCallback(uint8_t keyId, uint8_t downUp)
                          ENDP

                  GuiDepositOKKeyCallback PROC
0000f8  e92d4070          PUSH     {r4-r6,lr}
;;;82     {
0000fc  e1a04000          MOV      r4,r0
000100  e1a05001          MOV      r5,r1
;;;83         //sysprintf(" [INFO GUI] <DepositOK> Key:  keyId = %d, downUp = %d\n", keyId, downUp);   
;;;84         BOOL reVal = FALSE; 
000104  e3a06000          MOV      r6,#0
;;;85         if(keyIgnoreFlag)
000108  e59f0174          LDR      r0,|L1.644|
00010c  e5d00000          LDRB     r0,[r0,#0]  ; keyIgnoreFlag
000110  e3500000          CMP      r0,#0
000114  0a000003          BEQ      |L1.296|
;;;86         {
;;;87             sysprintf(" [INFO GUI] <DepositOK> Key:  ignore...\n"); 
000118  e28f0f5a          ADR      r0,|L1.648|
00011c  ebfffffe          BL       sysprintf
;;;88             return reVal;
000120  e1a00006          MOV      r0,r6
                  |L1.292|
;;;89         }
;;;90         if(GUI_KEY_DOWN_INDEX == downUp)
;;;91         {
;;;92             switch(keyId)
;;;93             {
;;;94                 case GUI_KEYPAD_LEFT_ID:
;;;95                     UpdateMeterCurrentSelSpace(-1, FALSE);
;;;96                     GuiManagerShowScreen(GUI_SEL_SPACE_ID, GUI_REDRAW_PARA_CONTAIN, 0, 0);
;;;97                     reVal = TRUE;
;;;98                     break;
;;;99                 case GUI_KEYPAD_RIGHT_ID:
;;;100                    UpdateMeterCurrentSelSpace(1, FALSE);
;;;101                    GuiManagerShowScreen(GUI_SEL_SPACE_ID, GUI_REDRAW_PARA_CONTAIN, 0, 0);
;;;102                    reVal = TRUE;
;;;103                    break;
;;;104                case GUI_KEYPAD_ADD_ID:
;;;105    
;;;106                    break;
;;;107                case GUI_KEYPAD_MINUS_ID:
;;;108                    break;
;;;109                case GUI_KEYPAD_CONFIRM_ID:
;;;110                    break;
;;;111            }
;;;112        }
;;;113        else
;;;114        {
;;;115            
;;;116        }
;;;117        return reVal;
;;;118    }
000124  e8bd8070          POP      {r4-r6,pc}
                  |L1.296|
000128  e3550001          CMP      r5,#1                 ;90
00012c  1a000024          BNE      |L1.452|
000130  e3540005          CMP      r4,#5                 ;92
000134  308ff104          ADDCC    pc,pc,r4,LSL #2       ;92
000138  ea000020          B        |L1.448|
00013c  ea00001d          B        |L1.440|
000140  ea00001a          B        |L1.432|
000144  ea00000c          B        |L1.380|
000148  ea000000          B        |L1.336|
00014c  ea000015          B        |L1.424|
                  |L1.336|
000150  e1a00000          MOV      r0,r0                 ;94
000154  e3a01000          MOV      r1,#0                 ;95
000158  e3e00000          MVN      r0,#0                 ;95
00015c  ebfffffe          BL       UpdateMeterCurrentSelSpace
000160  e3a03000          MOV      r3,#0                 ;96
000164  e1a02003          MOV      r2,r3                 ;96
000168  e3a01004          MOV      r1,#4                 ;96
00016c  e3a00002          MOV      r0,#2                 ;96
000170  ebfffffe          BL       GuiManagerShowScreen
000174  e3a06001          MOV      r6,#1                 ;97
000178  ea000010          B        |L1.448|
                  |L1.380|
00017c  e1a00000          MOV      r0,r0                 ;99
000180  e3a01000          MOV      r1,#0                 ;100
000184  e3a00001          MOV      r0,#1                 ;100
000188  ebfffffe          BL       UpdateMeterCurrentSelSpace
00018c  e3a03000          MOV      r3,#0                 ;101
000190  e1a02003          MOV      r2,r3                 ;101
000194  e3a01004          MOV      r1,#4                 ;101
000198  e3a00002          MOV      r0,#2                 ;101
00019c  ebfffffe          BL       GuiManagerShowScreen
0001a0  e3a06001          MOV      r6,#1                 ;102
0001a4  ea000005          B        |L1.448|
                  |L1.424|
0001a8  e1a00000          MOV      r0,r0                 ;104
0001ac  ea000003          B        |L1.448|
                  |L1.432|
0001b0  e1a00000          MOV      r0,r0                 ;107
0001b4  ea000001          B        |L1.448|
                  |L1.440|
0001b8  e1a00000          MOV      r0,r0                 ;109
0001bc  e1a00000          MOV      r0,r0                 ;110
                  |L1.448|
0001c0  e1a00000          MOV      r0,r0                 ;98
                  |L1.452|
0001c4  e1a00006          MOV      r0,r6                 ;117
0001c8  eaffffd5          B        |L1.292|
;;;119    BOOL GuiDepositOKTimerCallback(uint8_t timerIndex)
                          ENDP

                  GuiDepositOKTimerCallback PROC
0001cc  e92d4010          PUSH     {r4,lr}
;;;120    {
0001d0  e1a04000          MOV      r4,r0
;;;121        //sysprintf(" [INFO GUI] <DepositOK> Timer [%d] : tick = %d!!\n", timerIndex, xTaskGetTickCount());
;;;122        keyIgnoreFlag = TRUE;
0001d4  e3a00001          MOV      r0,#1
0001d8  e59f10a4          LDR      r1,|L1.644|
0001dc  e5c10000          STRB     r0,[r1,#0]  ; keyIgnoreFlag
;;;123        switch(timerIndex)
0001e0  e3540000          CMP      r4,#0
0001e4  0a000002          BEQ      |L1.500|
0001e8  e3540002          CMP      r4,#2
0001ec  1a00000a          BNE      |L1.540|
0001f0  ea000002          B        |L1.512|
                  |L1.500|
;;;124        {
;;;125            case UPDATE_BG_TIMER:
0001f4  e1a00000          MOV      r0,r0
;;;126                updateBG();
0001f8  ebfffffe          BL       updateBG
;;;127                break;
0001fc  ea000006          B        |L1.540|
                  |L1.512|
;;;128            //case CHECK_READER_TIMER:
;;;129                //checkReader();
;;;130                //break;
;;;131            case EXIT_TIMER:
000200  e1a00000          MOV      r0,r0
;;;132                GuiManagerShowScreen(GUI_STANDBY_ID, GUI_REDRAW_PARA_REFRESH, 0, 0);        
000204  e3a03000          MOV      r3,#0
000208  e1a02003          MOV      r2,r3
00020c  e3a01003          MOV      r1,#3
000210  e3a00001          MOV      r0,#1
000214  ebfffffe          BL       GuiManagerShowScreen
;;;133                break;
000218  e1a00000          MOV      r0,r0
                  |L1.540|
00021c  e1a00000          MOV      r0,r0                 ;127
;;;134    
;;;135        }
;;;136        keyIgnoreFlag = FALSE;
000220  e3a00000          MOV      r0,#0
000224  e59f1058          LDR      r1,|L1.644|
000228  e5c10000          STRB     r0,[r1,#0]  ; keyIgnoreFlag
;;;137        return TRUE;
00022c  e3a00001          MOV      r0,#1
;;;138    }
000230  e8bd8010          POP      {r4,pc}
                  |L1.564|
                          DCD      balanceMoney
                  |L1.568|
                          DCD      tickStart
                  |L1.572|
00023c  205b494e          DCB      " [INFO GUI] <DepositOK> updateBG: **Local:[%d]**, **[%d"
000240  464f2047
000244  55495d20
000248  3c446570
00024c  6f736974
000250  4f4b3e20
000254  75706461
000258  74654247
00025c  3a202a2a
000260  4c6f6361
000264  6c3a5b25
000268  645d2a2a
00026c  2c202a2a
000270  5b2564  
000273  5d2a2a0a          DCB      "]**\n",0
000277  00      
                  |L1.632|
                          DCD      ||.constdata||
                  |L1.636|
                          DCD      powerStatus
                  |L1.640|
                          DCD      pGuiGetInterface
                  |L1.644|
                          DCD      keyIgnoreFlag
                  |L1.648|
000288  205b494e          DCB      " [INFO GUI] <DepositOK> Key:  ignore...\n",0
00028c  464f2047
000290  55495d20
000294  3c446570
000298  6f736974
00029c  4f4b3e20
0002a0  4b65793a
0002a4  20206967
0002a8  6e6f7265
0002ac  2e2e2e0a
0002b0  00      
0002b1  00                DCB      0
0002b2  00                DCB      0
0002b3  00                DCB      0
                          ENDP

                  GuiDepositOKPowerCallbackFunc PROC
;;;139    
;;;140    BOOL GuiDepositOKPowerCallbackFunc(uint8_t type, int flag)
0002b4  e1a02000          MOV      r2,r0
;;;141    {
;;;142        //sysprintf(" [INFO GUI] <DepositOK> power [%d] : flag = %d!!\n", type, flag);
;;;143        switch(type)
0002b8  e3520001          CMP      r2,#1
0002bc  0a000006          BEQ      |L1.732|
0002c0  e3520002          CMP      r2,#2
0002c4  0a000008          BEQ      |L1.748|
0002c8  e3520003          CMP      r2,#3
0002cc  0a000008          BEQ      |L1.756|
0002d0  e3520004          CMP      r2,#4
0002d4  1a00000a          BNE      |L1.772|
0002d8  ea000007          B        |L1.764|
                  |L1.732|
;;;144        {
;;;145            case GUI_POWER_STATUS_INDEX:
0002dc  e1a00000          MOV      r0,r0
;;;146                return powerStatus;
0002e0  e51f006c          LDR      r0,|L1.636|
0002e4  e5d00000          LDRB     r0,[r0,#0]  ; powerStatus
                  |L1.744|
;;;147            case GUI_POWER_ON_INDEX:
;;;148                //pGuiGetInterface->runTimeoutFunc(CHECK_READER_TIMER);
;;;149                break;
;;;150            case GUI_POWER_OFF_INDEX:
;;;151                break;
;;;152            case GUI_POWER_PREV_OFF_INDEX:
;;;153                break;
;;;154        }
;;;155        return TRUE;
;;;156    }
0002e8  e12fff1e          BX       lr
                  |L1.748|
0002ec  e1a00000          MOV      r0,r0                 ;147
0002f0  ea000003          B        |L1.772|
                  |L1.756|
0002f4  e1a00000          MOV      r0,r0                 ;150
0002f8  ea000001          B        |L1.772|
                  |L1.764|
0002fc  e1a00000          MOV      r0,r0                 ;152
000300  e1a00000          MOV      r0,r0                 ;153
                  |L1.772|
000304  e1a00000          MOV      r0,r0                 ;149
000308  e3a00001          MOV      r0,#1                 ;155
00030c  eafffff5          B        |L1.744|
;;;157    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  205b494e          DCB      0x20,0x5b,0x49,0x4e
000004  464f2047          DCB      0x46,0x4f,0x20,0x47
000008  55495d20          DCB      0x55,0x49,0x5d,0x20
00000c  3c446570          DCB      0x3c,0x44,0x65,0x70
000010  6f736974          DCB      0x6f,0x73,0x69,0x74
000014  4f4b3e20          DCB      0x4f,0x4b,0x3e,0x20
000018  4f6e4472          DCB      0x4f,0x6e,0x44,0x72
00001c  61772028          DCB      0x61,0x77,0x20,0x28
000020  66726f6d          DCB      0x66,0x72,0x6f,0x6d
000024  20477569          DCB      0x20,0x47,0x75,0x69
000028  4964203d          DCB      0x49,0x64,0x20,0x3d
00002c  2025642c          DCB      0x20,0x25,0x64,0x2c
000030  20726546          DCB      0x20,0x72,0x65,0x46
000034  72657368          DCB      0x72,0x65,0x73,0x68
000038  50617261          DCB      0x50,0x61,0x72,0x61
00003c  203d2025          DCB      0x20,0x3d,0x20,0x25
000040  642c2070          DCB      0x64,0x2c,0x20,0x70
000044  61726132          DCB      0x61,0x72,0x61,0x32
000048  203d2025          DCB      0x20,0x3d,0x20,0x25
00004c  642c2070          DCB      0x64,0x2c,0x20,0x70
000050  61726133          DCB      0x61,0x72,0x61,0x33
000054  203d2025          DCB      0x20,0x3d,0x20,0x25
000058  64290a00          DCB      0x64,0x29,0x0a,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  pGuiGetInterface
                          DCD      0x00000000
                  powerStatus
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  tickStart
                          DCD      0x00000000
                  keyIgnoreFlag
00000c  0000              DCB      0x00,0x00
                  balanceMoney
00000e  0000              DCW      0x0000
